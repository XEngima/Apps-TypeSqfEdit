<?xml version='1.0' encoding='UTF-8'?>
<!--
		Parser for Arma 3 commands
			created by Josef
		   for TypeSQF editor
	  XML created 2020-12-02 00:11:18
-->
<ScriptCommands xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Command Name="#" ReturnType="Any" ReturnName="Any" ReturnDescr="" Descr="Selects an element from an array, same as select command for arrays, but has higher precedence." Syntax="array # index">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="AGLToASL" ReturnType="Array" ReturnName="Position" ReturnDescr="PositionASL" Descr="Converts position from PositionAGL to PositionASL" Syntax="AGLToASL posAGL">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="posAGL" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="AISFinishHeal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using &quot;HandleHeal&quot; event handler." Syntax="AISFinishHeal [unit, healer, healercanheal]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="healer" DataType="Object"/>
        <ParamInfo Name="healercanheal" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ASLToAGL" ReturnType="Array" ReturnName="Position" ReturnDescr="PositionAGL" Descr="Converts position from PositionASL to PositionAGL" Syntax="ASLToAGL posASL">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="posASL" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ASLToATL" ReturnType="Array" ReturnName="Position" ReturnDescr="PositionATL" Descr="Converts a position from PositionASL to PositionATL" Syntax="ASLToATL pos">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ATLToASL" ReturnType="Array" ReturnName="Position" ReturnDescr="PositionASL" Descr="Converts a position from PositionATL to PositionASL" Syntax="ATLToASL pos">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="HUDMovementLevels" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]" Syntax="HUDMovementLevels">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="UAVControl" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - in format [unit, vehicleRole] (or sometimes [unit1, vehicleRole, unit2, " Descr="Get array with unit connected to vehicle and position in that vehicle." Syntax="UAVControl uav">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="WFSideText" ReturnType="String" ReturnName="result" ReturnDescr="String - unlocalized side text value" Descr="Returns the unlocalized text value of an object's side / a group's side or a side as: east, opfor - &quot;East&quot;  west, blufor - &quot;West&quot; resistance, inde" Syntax="WFSideText param">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="WFSideText" ReturnType="String" ReturnName="result" ReturnDescr="String - unlocalized side text value" Descr="Returns the unlocalized text value of an object's side / a group's side or a side as: east, opfor - &quot;East&quot;  west, blufor - &quot;West&quot; resistance, inde" Syntax="WFSideText param">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="param" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="WFSideText" ReturnType="String" ReturnName="result" ReturnDescr="String - unlocalized side text value" Descr="Returns the unlocalized text value of an object's side / a group's side or a side as: east, opfor - &quot;East&quot;  west, blufor - &quot;West&quot; resistance, inde" Syntax="WFSideText param">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="param" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="abs" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Absolute value of a real Scalar" Syntax=" abs n">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="n" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="accTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current time acceleration factor" Syntax=" accTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="acos" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="ArcCosine of a number, result in Degrees" Syntax=" acos x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="action" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Make a unit to perform an action. Use the List of Actions for reference about the available actions and their syntax." Syntax="unit action actionArray">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="actionArray" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionIDs" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Array with user action IDs" Descr="Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command." Syntax="actionIDs entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeys" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Numbers" Descr="Returns Array containing dikCodes of keys, buttons and combos assigned to the given user action." Syntax="actionKeys userAction">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysImages" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed." Syntax=" actionKeysImages userAction">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysImages" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed." Syntax=" actionKeysImages [userAction, maxKeys]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
        <ParamInfo Name="maxKeys" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysNames" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names." Syntax="actionKeysNames userAction">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysNames" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names." Syntax="actionKeysNames [userAction, maxKeys]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
        <ParamInfo Name="maxKeys" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysNames" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names." Syntax="actionKeysNames [userAction, maxKeys, inputDevicePriority]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="Any"/>
        <ParamInfo Name="maxKeys" DataType="Any"/>
        <ParamInfo Name="inputDevicePriority" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysNamesArray" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names." Syntax="actionKeysNamesArray userAction">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysNamesArray" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names." Syntax="actionKeysNamesArray [userAction, maxKeys]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="String"/>
        <ParamInfo Name="maxKeys" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionKeysNamesArray" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names." Syntax="actionKeysNamesArray [userAction, maxKeys, inputDevicePriority]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="userAction" DataType="Any"/>
        <ParamInfo Name="maxKeys" DataType="Any"/>
        <ParamInfo Name="inputDevicePriority" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns localized name of action." Syntax="actionName action">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="actionParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array (or, prior to Arma 3 v1.93." Descr="Returns Array with params for given user action id (similar to addAction param array)." Syntax="entity actionParams id">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="activateAddons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates the listed addons. The list of active addons is initialized during this function." Syntax="activateAddons [addon1, ...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="addon1" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="activateKey" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns." Syntax="activateKey keyname">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="keyname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="activatedAddons" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of all activated addons." Syntax="activatedAddons">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="add3DENConnection" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the connection was made" Descr="Connect entities together." Syntax="add3DENConnection [type, from, to]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="from" DataType="Array"/>
        <ParamInfo Name="to" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="add3DENEventHandler" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Add code to be run when a Eden Editor event is triggered.See the list of all Eden Editor Event Handlers." Syntax="add3DENEventHandler [type,code]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="add3DENLayer" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - layer ID" Descr="Add an editing layer in Eden Editor." Syntax="parentLayerID add3DENLayer name">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="parentLayerID" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addAction" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - The added action's ID." Descr="Adds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (eg: building)." Syntax="object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection, memoryPoint]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="title" DataType="String"/>
        <ParamInfo Name="script" DataType="Any"/>
        <ParamInfo Name="arguments" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="priority" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showWindow" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="hideOnUse" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="shortcut" DataType="String" IsOptional="True"/>
        <ParamInfo Name="condition" DataType="String" IsOptional="True"/>
        <ParamInfo Name="radius" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="unconscious" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="selection" DataType="String" IsOptional="True"/>
        <ParamInfo Name="memoryPoint" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addBackpack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit." Syntax="unit addBackpack backpackClassName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="backpackClassName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addBackpackCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here." Syntax="vehicle addBackpackCargo [backpackClassName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="backpackClassName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addBackpackCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add backpack(s) to the cargo space of vehicle. MP synchronized." Syntax="vehicle addBackpackCargoGlobal [packClassName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="packClassName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addBackpackGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a backpack to a unit (even non-local)" Syntax="unit addBackpackGlobal backpack">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="backpack" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addBinocularItem" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Adds weapon item, including magazine, directly to the binocular weapon. This is used for infantry weapons." Syntax="unit addBinocularItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addCamShake" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates the camera shaking effect, like when you are near an explosion" Syntax="addCamShake [power, duration, frequency]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="power" DataType="Scalar"/>
        <ParamInfo Name="duration" DataType="Scalar"/>
        <ParamInfo Name="frequency" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addCuratorAddons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allow curator use of given addon." Syntax="curatorObj addCuratorAddons addons">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="addons" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addCuratorCameraArea" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds or changes curator camera area (depends on if ID is already used)." Syntax="curatorObj addCuratorCameraArea [cameraAreaID,position,radius]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="cameraAreaID" DataType="Scalar"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addCuratorEditableObjects" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Register objects which can be edited by a curator." Syntax="curatorObj addCuratorEditableObjects [objects,addCrew]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
        <ParamInfo Name="addCrew" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addCuratorEditingArea" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds or changes curator edit area (depends on if ID is already used)." Syntax="curatorObj addCuratorEditingArea [editAreaID,position,radius]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="editAreaID" DataType="Scalar"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addCuratorPoints" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds or removes curator points. Points can be only in range from 0 to 1." Syntax="curatorObj addCuratorPoints points">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="points" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addEditorObject" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject." Syntax="map addEditorObject [type,[name1,value1,...],subtype class]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="[name1,value1,...]" DataType="Array"/>
        <ParamInfo Name="subtypeclass" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addEventHandler" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - The index of the currently added event handler is returned." Descr="Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g." Syntax="object addEventHandler [type, command]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="command" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addForce" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space." Syntax="object addForce [force, position]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="force" DataType="Array"/>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addGoggles" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter." Syntax="unit addGoggles type">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addGroupIcon" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Icon ID" Descr="Add icon to a group." Syntax="group addGroupIcon [iconClass, offset]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="iconClass" DataType="String"/>
        <ParamInfo Name="offset" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addHandgunItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds weapon item to the weapon cargo space. This is used for infantry weapons.As of Arma 3 DEV 1.37, this command also supports weapon magazines." Syntax="unit addHandgunItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addHeadgear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced." Syntax="unit addHeadgear item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail." Syntax="unit addItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItemCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates new items and stores them in given container. Works with items, weapons and magazines." Syntax="box addItemCargo [item, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItemCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates new items and stores them in the given container. Works with items, weapons and magazines." Syntax="box addItemCargoGlobal [item, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItemPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)" Syntax="addItemPool [itemName, count]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="itemName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItemToBackpack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine." Syntax="unit addItemToBackpack item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItemToUniform" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine." Syntax="unit addItemToUniform item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addItemToVest" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create new item and store it to soldier's vest. The item can also be a weapon or a magazine." Syntax="unit addItemToVest item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addLiveStats" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle)." Syntax="unit addLiveStats score">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="score" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMPEventHandler" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Adds MP event handler (EH) to the given object and returns EH handle." Syntax="object addMPEventHandler [type, expression]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="expression" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a magazine to a person." Syntax="unitName addMagazine magazineName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a magazine to a person." Syntax="unitName addMagazine [magazineName, ammoCount]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="ammoCount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazineAmmoCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds magazines with specified ammo count to the cargo space of a vehicle or a container." Syntax="cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargospace" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazine" DataType="String"/>
        <ParamInfo Name="quantity" DataType="Scalar"/>
        <ParamInfo Name="ammocount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazineCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add magazines to the cargo space of vehicles, which can be taken out by infantry units." Syntax="vehicleName addMagazineCargo [magazineName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazineCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add magazines to the cargo space of vehicles, which can be taken out by infantry units." Syntax="vehicleName addMagazineCargoGlobal [magazineName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazineGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a magazine to the unit. Note: You may create invalid combinations by adding more magazines than the free space in unit's inventory allows." Syntax="unit addMagazineGlobal magazineName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazinePool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only." Syntax="addMagazinePool [magazineName, count]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazineTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a magazine to the turret. Use turret path [-1] for driver's turret." Syntax="vehicle addMagazineTurret [magazineName, turretPath, ammoCount]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
        <ParamInfo Name="ammoCount" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazine_array" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a magazine to a person with said ammunition count." Syntax="unitName addMagazine magazineName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazine_array" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a magazine to a person with said ammunition count." Syntax="unitName addMagazine [magazineName, ammoCount]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="ammoCount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMagazines" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command." Syntax="unit addMagazines [magazineName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMenu" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Adds a new menu button. Priority is optional." Syntax="map addMenu [text,priority]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="priority" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMenuItem" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Creates a new menu item. Menu can be &quot;file&quot; or &quot;view&quot;,index is index,as returned from addMenu command." Syntax="map addMenuItem [menu or index,text,command,priority]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="menuorindex" DataType="Any"/>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="command" DataType="Any"/>
        <ParamInfo Name="priority" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMissionEventHandler" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - The index of the currently added mission event handler is returned." Descr="Adds event handler (EH) attached to the current mission and returns EH handle." Syntax="addMissionEventHandler [type, command]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="command" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addMusicEventHandler" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - event handler id" Descr="Add music track event handler. Returns id of the handler or -1 when failed." Syntax="addMusicEventHandler [type, function]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="function" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addOwnedMine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets ownership over a remotely detonatable mine to the unit." Syntax="unit addOwnedMine mine">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="mine" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addPlayerScores" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="MP server only: Adds player score." Syntax="unit addPlayerScores values">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="values" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addPrimaryWeaponItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing or Boolean - false is returned if item can not be added" Descr="Adds weapon item to the weapon cargo space. This is used for infantry weapons.As of Arma 3 DEV 1.37, this command also supports weapon magazines." Syntax="unit addPrimaryWeaponItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addPrimaryWeaponItem" ReturnType="Boolean" ReturnName="result" ReturnDescr="Nothing or Boolean - false is returned if item can not be added" Descr="Adds weapon item to the weapon cargo space. This is used for infantry weapons.As of Arma 3 DEV 1.37, this command also supports weapon magazines." Syntax="unit addPrimaryWeaponItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addPublicVariableEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableC" Syntax="varName addPublicVariableEventHandler code">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="varName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addPublicVariableEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableC" Syntax="varName addPublicVariableEventHandler [target, code]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="varName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Any"/>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addRating" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a number to the rating of a unit - negative values can be used to reduce the rating." Syntax="unitName addRating rating">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="rating" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addResources" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds resources to a team member." Syntax="teamMember addResources [resource1, resource2, ...]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="resource1" DataType="String"/>
        <ParamInfo Name="resource2" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addScore" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a number to the score of a unit. This score is shown in multiplayer in the &quot;I&quot; (&quot;P&quot; in Arma 3) screen. Negative values will remove from the score." Syntax="unit addScore score">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="score" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addScoreSide" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only." Syntax="side addScoreSide value">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addSecondaryWeaponItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds weapon item to the weapon cargo space. This is used for infantry weapons.As of Arma 3 DEV 1.37, this command also supports weapon magazines." Syntax="unit addSecondaryWeaponItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addSwitchableUnit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a unit into the list of units available for Team Switch." Syntax="addSwitchableUnit unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addTeamMember" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global." Syntax="team addTeamMember member">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="member" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addToRemainsCollector" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds an array of vehicles/units to disposal manager for automatic wreck/body removal." Syntax="addToRemainsCollector remains">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="remains" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addTorque" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Applies torque (rotation momentum) to the  center of mass of the given object. Torque force is defined as vector [x, y, z] applied in world space." Syntax="object addTorque torque">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="torque" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addUniform" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier)." Syntax="unit addUniform type">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a specified vehicle for use by a specified AI led group taking into account vehicle's cost." Syntax="groupName addVehicle vehicleName">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addVest" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create a new vest and try to link it into vest slot." Syntax="unit addVest type">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWaypoint" ReturnType="Array" ReturnName="Waypoint" ReturnDescr="Array - format Waypoint - [Group, index]" Descr="Adds (or inserts when index is given) a new waypoint to a group.The waypoint is placed randomly within a circle with the given center and radius." Syntax="groupName addWaypoint [center, radius, index, name]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Any"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="name" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeapon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a weapon to a unit. The unit must be local to the computer where command is executed. For a global version of this command see addWeaponGlobal." Syntax="object addWeapon weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space." Syntax="vehicleName addWeaponCargo [weaponName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add weapons to the cargo space of vehicles, which can be taken out by infantry units." Syntax="vehicleName addWeaponCargoGlobal [weaponName, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add a weapon to a unit." Syntax="object addWeaponGlobal weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a weapon item to the specified weapon." Syntax="unit addWeaponItem [weaponName, itemName, instant]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="itemName" DataType="String"/>
        <ParamInfo Name="instant" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a weapon item to the specified weapon." Syntax="unit addWeaponItem [weaponName, [itemName, ammoCount, muzzleName], instant]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="[itemName, ammoCount, muzzleName]" DataType="Array"/>
        <ParamInfo Name="instant" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only." Syntax="addWeaponPool [weaponName, count]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a weapon to the turret. Use turret path [-1] for driver's turret." Syntax="vehicle addWeaponTurret [weaponName, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponWithAttachmentsCargo" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Adds a weapon into cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space." Syntax="container addWeaponWithAttachmentsCargo [[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="container" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addWeaponWithAttachmentsCargoGlobal" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Adds a weapon into cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space." Syntax="container addWeaponWithAttachmentsCargoGlobal [[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="container" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="addonFiles" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns a list of files present in the addon.ⓘQuerying protected .ebo addons returns empty array []." Syntax="addonFiles [pboPrefix, fileExtension]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pboPrefix" DataType="String"/>
        <ParamInfo Name="fileExtension" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="admin" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - admin state of given client:0 - client is not an admin1 - client is a" Descr="This is dedicated server command, which queries the admin state of any client on the network by their client (owner) id." Syntax="admin ownerID">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="ownerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="agent" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Return a person for a given agent." Syntax="agent teamMember">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="agents" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Team Members" Descr="Return a list of agents in the current mission." Syntax="agents">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="aimPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionASL" Descr="Returns the position of the object other units can aim to." Syntax="aimPos object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="aimedAtTarget" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - 0..." Descr="Returns how good the weapon of the vehicle is aimed at the target." Syntax="vehicle aimedAtTarget [target, weapon]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
        <ParamInfo Name="weapon" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="airDensityCurveRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array with arrays: Returns air density graph Each array consists of:0: Altitud" Descr="Returns array with air density data." Syntax="airDensityCurveRTD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="airDensityRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns air density in given altitude" Syntax="airDensityRTD altitude">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="altitude" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="airplaneThrottle" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns throttle position. Works only on player's vehicle." Syntax="airplaneThrottle airplane">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="airplane" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="airportSide" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Checks a side of the airport. ID is the number to identify which airport on the island you want to check." Syntax="airportSide id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="airportSide" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Checks a side of the airport. ID is the number to identify which airport on the island you want to check." Syntax="airportSide target">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="alive" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if alive, false if dead/completely destroyed" Descr="Check if given vehicle/person/building is alive (i.e. not dead or destroyed). alive objNull returns false." Syntax="alive object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="all3DENEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Eden Entities" Descr="Returns an array of all currently placed Eden Editor entities, including groups, waypoints, and markers." Syntax="all3DENEntities">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allActiveTitleEffects" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Numbers, where each number represents index of currently active effect " Descr="Returns a list of all layers that have currently active title effect." Syntax="allActiveTitleEffects">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allAddonsInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays in format [prefix, version, isPatched], where:prefix: String - " Descr="Returns the list of all loaded addons." Syntax="allAddonsInfo">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allAirports" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [staticAirports, dynamicAirports], where:staticAirports Array" Descr="Returns all map airports, both static and dynamic" Syntax="allAirports">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allControls" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Controls" Descr="Returns a list of all controls for desired existing display." Syntax="allControls display">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allCurators" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns list of all curators." Syntax="allCurators">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allCutLayers" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of Strings" Descr="Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut." Syntax="allCutLayers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allDead" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles." Syntax="allDead">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allDeadMen" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of dead units including agents. Dead unit might be inside vehicle." Syntax="allDeadMen">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allDisplays" ReturnType="Array" ReturnName="result" ReturnDescr="Array of GUI Displays" Descr="Returns a list of all opened displays (excluding InGameUI displays for now)" Syntax="allDisplays">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allGroups" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of all groups created on the following sides east, west, resistance/independent and civilian only. Does not contain groups of sideLogic." Syntax="allGroups">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allMapMarkers" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Return all markers in map including user placed markers (_USER_DEFINED #). Since Arma 3 v1.57." Syntax="allMapMarkers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allMines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array of all mines in the mission" Syntax="allMines">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allMissionObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects" Descr="Returns all mission objects (created by or during a mission) with given type (or its subtype)." Syntax="allMissionObjects type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allPlayers" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Object" Descr="Returns a list of all human players including dead players. The command also returns all connected headless clients." Syntax="allPlayers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allSimpleObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of simple objects" Descr="Returns array of all simple objects that belong to the listed class names." Syntax="allSimpleObjects classes">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="classes" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allSites" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return all sites in map." Syntax="allSites">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allTurrets" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of available turret paths." Syntax="allTurrets vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allTurrets" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of available turret paths." Syntax="allTurrets [vehicle, includeFFV]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="includeFFV" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allUnits" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of all units (all persons except agents) created on the following sides east, west, resistance/independent and civilian only." Syntax="allUnits">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allUnitsUAV" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - Array of UAV vehicles" Descr="Return a list of all UAV vehicles." Syntax="allUnitsUAV">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Namespace">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Namespace"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allVariables" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of variable names." Descr="Returns a list of all variables from desired namespace." Syntax="allVariables namespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="namespace" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allow3DMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allow/dissallow 3D mode." Syntax="map allow3DMode bool">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowCrewInImmobile" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="If true, units can be in a vehicle with broken tracks/wheels." Syntax="vehicle allowCrewInImmobile bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowCuratorLogicIgnoreAreas" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allows curator placing and working with modules outside of edit areas." Syntax="curatorObj allowCuratorLogicIgnoreAreas allow">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="allow" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowDamage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allow or prevent an object being damaged (or injured, or killed)." Syntax="object allowDamage allow">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="allow" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowDammage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allow or prevent an object being damaged (or injured, or killed). Alias of allowDamage." Syntax="object allowDammage allow">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="allow" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowFileOperations" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allow/dissallow file ops (load/save etc)." Syntax="map allowFileOperations bool">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowFleeing" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the cowardice level (the lack of courage or bravery) of a group or unit." Syntax="name allowFleeing cowardice">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="name" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="cowardice" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowFleeing" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the cowardice level (the lack of courage or bravery) of a group or unit." Syntax="name allowFleeing cowardice">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="name" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="cowardice" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowGetIn" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set if the units given in the list are allowed to enter vehicles." Syntax="unitArray allowGetIn allow">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="allow" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="allowSprint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force player to run/jog if set to false." Syntax="unit allowSprint state">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ammo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.55." Syntax="unit ammo muzzle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="muzzle" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ammoOnPylon" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number or Boolean" Descr="Returns ammo count on given pylon.Returns false (Bool) on failure." Syntax="vehicle ammoOnPylon pylon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ammoOnPylon" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number or Boolean" Descr="Returns ammo count on given pylon.Returns false (Bool) on failure." Syntax="vehicle ammoOnPylon pylon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ammoOnPylon" ReturnType="Boolean" ReturnName="result" ReturnDescr="Number or Boolean" Descr="Returns ammo count on given pylon.Returns false (Bool) on failure." Syntax="vehicle ammoOnPylon pylon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ammoOnPylon" ReturnType="Boolean" ReturnName="result" ReturnDescr="Number or Boolean" Descr="Returns ammo count on given pylon.Returns false (Bool) on failure." Syntax="vehicle ammoOnPylon pylon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates given object animation. Animation is defined in CfgModels Animations class of model.cfg or another model config. Since Arma 3 v1.65." Syntax="objectName animate [animationName, phase, speed]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="animationName" DataType="String"/>
        <ParamInfo Name="phase" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animateBay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1." Syntax="vehicle animateBay [bay, animphase, instant]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="bay" DataType="Scalar"/>
        <ParamInfo Name="animphase" DataType="Scalar"/>
        <ParamInfo Name="instant" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animateDoor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Animates a door on a vehicle. Animation is defined in config file in CfgVehicles -&gt;  AnimationSources. Wanted animation phase is set with phase param." Syntax="object animateDoor [doorname, phase, instant]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="doorname" DataType="String"/>
        <ParamInfo Name="phase" DataType="Scalar"/>
        <ParamInfo Name="instant" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animatePylon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released  when pylon state =" Syntax="vehicle animatePylon [pylon, animphase, instant]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Any"/>
        <ParamInfo Name="animphase" DataType="Scalar"/>
        <ParamInfo Name="instant" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animateSource" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by source property." Syntax="object animateSource [source, phase, speed]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="source" DataType="String"/>
        <ParamInfo Name="phase" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animationNames" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command." Syntax="animationNames object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animationPhase" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - range 0 (start point of the animation) to 1 (end point of the animation" Descr="Returns the phase of the given animation on the given object. Animation can be scripted (animate, animateSource, animateDoor) or engine driven." Syntax="object animationPhase animationName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="animationName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animationSourcePhase" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource." Syntax="object animationSourcePhase source">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="source" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="animationState" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of a unit's current primary animation. Seems to be forced to lower case in Arma 3." Syntax="animationState unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="append" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Appends array2 to the back of array1 modifying array1. NOTE: append does not return array, it modifies existing array." Syntax="array1 append array2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="apply" ReturnType="Array" ReturnName="result" ReturnDescr="Array - resulting array" Descr="Applies given code to each element of the array and returns resulting array." Syntax="array apply code">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="armoryPoints" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns, stored in [USERNAME].ArmaXProfile, value of armoryPoints entry. If the entry doesn't exist, it returns 0." Syntax="armoryPoints">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="arrayIntersect" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Intersects array1 with array2 returning array of unique common elements." Syntax="array1 arrayIntersect array2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="asin" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Arcsine of a number, result in Degrees." Syntax=" asin x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assert" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - mirrors condition" Descr="Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file." Syntax="assert condition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="condition" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignAsCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle." Syntax="unitName assignAsCargo vehicleName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignAsCargoIndex" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Assigns the character to a specific cargo / passenger index of the given vehicle." Syntax="character assignAsCargoIndex [vehicle, index]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="character" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignAsCommander" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle." Syntax="unitName assignAsCommander vehicleName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignAsDriver" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle." Syntax="unitName assignAsDriver vehicleName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignAsGunner" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle." Syntax="unitName assignAsGunner vehicleName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignAsTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assigns the soldier to turret." Syntax="unit assignAsTurret [vehicle, [turretPath]]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="[turretPath]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignCurator" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assign player as curator. Two players cannot act as one curator." Syntax="player assignCurator curatorObj">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="player" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced." Syntax="unit assignItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignTeam" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assigns the unit (in case of a vehicle, its commander) to the given team." Syntax="unit assignTeam team">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="team" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignToAirport" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Not correctly implemented yet, currently it does the same as landAt." Syntax="plane assignToAirport id">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="plane" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignToAirport" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Not correctly implemented yet, currently it does the same as landAt." Syntax="plane assignToAirport target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="plane" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects" Descr="Returns the list of soldiers assigned to the given vehicle as a cargo." Syntax="assignedCargo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedCommander" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the soldier assigned to the given vehicle as a commander." Syntax="assignedCommander vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedDriver" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the soldier assigned to the given vehicle as a driver." Syntax="assignedDriver vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedGunner" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the soldier assigned to the given vehicle as a gunner." Syntax="assignedGunner vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all assigned items." Syntax="assignedItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedTarget" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the target assigned to the vehicle/unit. To unassign the target use doWatch objNull or commandWatch objNull." Syntax="assignedTarget vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedTeam" ReturnType="String" ReturnName="result" ReturnDescr="String (or, prior to Arma 3 v1.93." Descr="Returns the team the unit belongs to." Syntax="assignedTeam unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedVehicle" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the vehicle a unit is assigned to. If no vehicle is assigned objNull is returned." Syntax="assignedVehicle unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="assignedVehicleRole" ReturnType="Array" ReturnName="result" ReturnDescr="Array - The array which is returned contains:[] - Not assigned to any vehicle[" Descr="Return the role a unit is assigned to within its assigned vehicle." Syntax="assignedVehicleRole unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="atan" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="ArcTangent of a number, result in Degrees." Syntax="atan x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="atan2" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees between -180 and 180." Syntax="x atan2 y">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="atg" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Equivalent to atan" Syntax="atg x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attachObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attaches a location to the specified object. To detach a location, attach it to objNull." Syntax="location attachObject object">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attachTo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attaches an object to another object. The offset is applied to the object center unless a memory point is provided." Syntax="object1 attachTo [object2, offset, memPoint]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object2" DataType="Object"/>
        <ParamInfo Name="offset" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="memPoint" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attachedObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the object a location is attached to. If the location is unattached, then objNull is returned." Syntax="attachedObject location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attachedObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects attached to the given object" Descr="Returns a list of attached objects." Syntax="attachedObjects obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attachedTo" ReturnType="Object" ReturnName="result" ReturnDescr="Object - object the given object is attached to" Descr="Returns the object it is attached to.Returns objNull if not attached to anything." Syntax="attachedTo obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attackEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return whether a group's leader can issue attack commands to soldiers under his command." Syntax=" attackEnabled name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="name" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="attackEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return whether a group's leader can issue attack commands to soldiers under his command." Syntax=" attackEnabled name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="name" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="backpack" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a class of a backpack." Syntax="backpack unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="backpackCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Format: [&quot;BackpackType1&quot;, &quot;BackpackType1&quot;, &quot;BackpackType2&quot;, ..." Descr="Get array with backpacks from ammo box (or any general weapon holder container)." Syntax="backpackCargo box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="backpackContainer" ReturnType="Object" ReturnName="result" ReturnDescr="Object - cargo container or objNull" Descr="Returns a cargo container of a unit's backpack." Syntax="backpackContainer unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="backpackItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all items (of any kind, even weapons) in backpack of the given unit." Syntax="backpackItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="backpackMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all magazines from backpack of the given unit." Syntax="backpackMagazines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="backpackSpaceFor" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns how much space is in backpack for given weapon or magazine" Syntax="backpack backpackSpaceFor weaponName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="backpack" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="behaviour" ReturnType="String" ReturnName="result" ReturnDescr="String -  One of:&quot;CARELESS&quot;&quot;SAFE&quot;&quot;AWARE&quot;&quot;COMBAT&quot;&quot;STEALTH&quot;&quot;ERROR&quot; (Since 1." Descr="Return the behaviour of a unit." Syntax="behaviour unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="benchmark" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the value of &quot;3D Performance&quot; in OFP Preferences (flashpoint.cfg)." Syntax=" benchmark">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="bezierInterpolation" ReturnType="Array" ReturnName="result" ReturnDescr="Array - a single point position in format Position3D based on progress value" Descr="Gets interpolated value based on bezier curve with given control points (progress is 0-1)🏗This article is a work in progress!" Syntax="progress bezierInterpolation [pos0, pos1,... posN]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="progress" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos0" DataType="Any"/>
        <ParamInfo Name="pos1" DataType="Any"/>
        <ParamInfo Name="...posN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="binocular" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns class name of currently used binocular weapon." Syntax="binocular unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="binocularItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [silencer, laserpointer/flashlight, optics, bipod]" Descr="Returns array with all items assigned to the binocular weapon except magazines. Use binocularMagazine command for the latter." Syntax="binocularItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="binocularMagazine" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Collects all loaded magazines from all binocular muzzles and returns them in Array, otherwise it returns []." Syntax="binocularMagazine unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="boundingBox" ReturnType="Array" ReturnName="result" ReturnDescr="Array - An array with the extreme points of the model in format PositionRelative" Descr="Returns a bounding box of given object in model coordinate space." Syntax="boundingBox object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="boundingBox" ReturnType="Array" ReturnName="result" ReturnDescr="Array - An array with the extreme points of the model bounding box in format Pos" Descr="Returns a bounding box of given object in model coordinate space." Syntax="clippingType boundingBox object">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="clippingType" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="boundingBoxReal" ReturnType="Array" ReturnName="result" ReturnDescr="Array - the extreme points of the model in format PositionRelative, as well as b" Descr="Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements." Syntax="boundingBoxReal object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="boundingBoxReal" ReturnType="Array" ReturnName="result" ReturnDescr="Array - the extreme points of the model in format PositionRelative, as well as b" Descr="Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements." Syntax="clippingType boundingBoxReal object">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="clippingType" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="boundingCenter" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - PositionRelative" Descr="Returns the position of original (loaded) center of object in model coordinates." Syntax="boundingCenter object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="breakOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.Since Arma 3 v1." Syntax="breakOut name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="breakOut" ReturnType="Any" ReturnName="result" ReturnDescr="Anything" Descr="Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.Since Arma 3 v1." Syntax="value breakOut name">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="breakTo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Breaks block to scope named name. Nil is returned.Scope name can be assigned using scopeName command." Syntax="breakTo name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="briefingName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of the current briefing/scenario name." Syntax="briefingName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="buildingExit" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format Position" Descr="Returns the given indexed exit in a building. The returned value is in format Position." Syntax="building buildingExit index">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="building" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buildingPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - a single building position in format PositionAGL or (since Arma 3 v.155." Descr="Returns PositionAGL of a given indexed position in a building. The index is 0-based (i.e. the first possible position would be 0." Syntax="building buildingPos index">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="building" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buldozer_EnableRoadDiag" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Enables road diagnostics in buldozer." Syntax="buldozer_EnableRoadDiag enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buldozer_IsEnabledRoadDiag" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - True if enabled, otherwise false" Descr="Returns if road diagnostics are enabled in buldozer." Syntax="buldozer_IsEnabledRoadDiag">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="buldozer_LoadNewRoads" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Generates new roads. Working only in buldozer." Syntax="buldozer_LoadNewRoads path">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="path" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buldozer_reloadOperMap" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Reload oper map visible in costMap diag tool. Working only in buldozer." Syntax="buldozer_reloadOperMap">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="buttonAction" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts." Syntax="buttonAction idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buttonAction" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts." Syntax="buttonAction control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buttonSetAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the action of a control of the currently active user dialog. Can be used for buttons and active texts." Syntax="buttonSetAction [idc, action]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="buttonSetAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the action of a control of the currently active user dialog. Can be used for buttons and active texts." Syntax="control buttonSetAction action">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cadetMode" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when playing in cadet mode, false when playing in veteran mode" Descr="Returns if the player is currently playing in cadet or veteran mode." Syntax="cadetMode">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="calculatePath" ReturnType="Object" ReturnName="result" ReturnDescr="Object - The agent to add the &quot;PathCalculated&quot; Event Handler to." Descr="Spawns an agent that will execute an AI path calculation and fire the &quot;PathCalculated&quot;  event handler." Syntax="calculatePath [type, behaviour, from, to]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="behaviour" DataType="String"/>
        <ParamInfo Name="from" DataType="Array"/>
        <ParamInfo Name="to" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="calculatePlayerVisibilityByFriendly" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Friendly units will / will not calculate visibility of player. Default false." Syntax="calculatePlayerVisibilityByFriendly calculate">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="calculate" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="call" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - The last value given in the function is returned." Descr="Executes given set of compiled instructions with an option to pass arguments to the executed Code." Syntax="call code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="call" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - The last value given in the function is returned." Descr="Executes given set of compiled instructions with an option to pass arguments to the executed Code." Syntax="args call code">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="args" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="callExtension" ReturnType="String" ReturnName="result" ReturnDescr="String - data sent back from extension; If the extensiion wasn't found an empty " Descr="Execute an extension function." Syntax="extension callExtension function">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="extension" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="function" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="callExtension" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  in format [result, returnCode, errorCode], where:result: String - data" Descr="Execute an extension function." Syntax="extension callExtension [function, arguments]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="extension" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="function" DataType="String"/>
        <ParamInfo Name="arguments" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camCommand" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Executes a command on the given camera / actor object." Syntax="camera camCommand command">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately." Syntax="camera camCommit time">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camCommitPrepared" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately." Syntax="camera camCommitPrepared time">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camCommitted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true if the last camCommit already finished, false if not" Descr="Checks if the conduction of the last camCommit call already finished." Syntax="camCommitted camera">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camConstuctionSetParams" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets construction camera parameters. To work with &quot;camconstruct&quot; object." Syntax="camera camConstuctionSetParams [[x,y,z], radius, maxAboveLand]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[x,y,z]" DataType="Array"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="maxAboveLand" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camCreate" ReturnType="Object" ReturnName="result" ReturnDescr="Object - the created camera" Descr="Create a camera or a seagull object on the given position." Syntax="type camCreate position">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camDestroy" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroy an object created with camCreate. camDestroy is conducted immediately, the command doesn't wait for camCommit." Syntax="camDestroy object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPreload" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Preload the scene for the prepared camera. Time gives timeout, zero means no (infinite) timeout." Syntax="camera camPreload timeout">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="timeout" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPreloaded" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the camera has finished preloading." Syntax=" camPreloaded camera">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareBank" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera bank angle." Syntax="camera camPrepareBank bank">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="bank" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera heading." Syntax="camera camPrepareDir direction">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="direction" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareDive" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera dive angle." Syntax="camera camPrepareDive dive">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="dive" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareFocus" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="focusRange is in format [distance,blur]. Prepares the camera focus blur." Syntax="camera camPrepareFocus focusRange">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="focusRange" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareFov" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera field of view (zoom). The default zoom level is 0.7, 0.01 is the nearest and 2 the furthest zoom value." Syntax="camera camPrepareFov fieldOfView">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="fieldOfView" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareFovRange" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera field of view range for auto zooming." Syntax="camera camPrepareFovRange fovRange">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fovRange" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPreparePos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera position (format Position)." Syntax="camera camPreparePos position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareRelPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera position relative to the current position of the currect target (see camPrepareTarget)." Syntax="camera camPrepareRelPos position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera target to a position or to a target." Syntax="camera camPrepareTarget position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camPrepareTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Prepares the camera target to a position or to a target." Syntax="camera camPrepareTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetBank" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set camera bank angle.Does not commit changes." Syntax="camera camSetBank bank">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="bank" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the orientation of the given camera in the direction of the given vector. Needs camCommit." Syntax="camera camSetDir direction">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="direction" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetDive" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set camera dive angle.Does not commit changes." Syntax="camera camSetDive dive">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="dive" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetFocus" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="focusRange is in format [distance,blur]. Sets the camera focus blur. It does not automatically commit changes." Syntax="camera camSetFocus focusRange">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="focusRange" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetFov" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the zoom level (Field Of View) of the given camera.The zoom level is from 0." Syntax="camera camSetFov level">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="level" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetFovRange" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the zoom level (Field Of View) start and end values for automatical zooming. The default zoom level is 0." Syntax="camera camSetFovRange fovRange">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fovRange" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the position of the given camera or seagull (see camCreate)." Syntax="camera camSetPos position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetRelPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the position of the given camera relative to its target set with camSetTarget.Needs the call of camCommit to be conducted." Syntax="camera camSetRelPos position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted." Syntax="camera camSetTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camSetTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted." Syntax="camera camSetTarget position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camTarget" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns camera's target." Syntax="camTarget camera">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="camUseNVG" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set / clear using of night vision during cutscenes." Syntax="camUseNVG set">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="set" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cameraEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switch to the given camera or object with the given effect." Syntax="camera cameraEffect [effectName, effectPosition, r2tName]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="camera" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="effectName" DataType="String"/>
        <ParamInfo Name="effectPosition" DataType="String"/>
        <ParamInfo Name="r2tName" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cameraEffectEnableHUD" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable showing of in-game UI during currently active camera effect." Syntax="cameraEffectEnableHUD enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cameraInterest" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return camera interest for given entity, as set by setCameraInterest, or as autodetected." Syntax=" cameraInterest entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cameraOn" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the vehicle to which the camera is attached." Syntax="cameraOn">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="cameraView" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns mode of active camera view." Syntax="cameraView">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="campaignConfigFile" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Return root of campaign description.ext entries hierarchy." Syntax=" campaignConfigFile">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="canAdd" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit." Syntax="object canAdd item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAdd" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit." Syntax="object canAdd [item, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAddItemToBackpack" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored into soldier's backpack." Syntax="unit canAddItemToBackpack item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAddItemToBackpack" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored into soldier's backpack." Syntax="unit canAddItemToBackpack [item, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAddItemToUniform" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored into soldier's uniform." Syntax="unit canAddItemToUniform item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAddItemToUniform" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored into soldier's uniform." Syntax="unit canAddItemToUniform [item, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAddItemToVest" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored into soldier's vest." Syntax="unit canAddItemToVest item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canAddItemToVest" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given object can be stored into soldier's vest." Syntax="unit canAddItemToVest [item, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canFire" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if able to fire" Descr="Returns true if the given vehicle is still able to fire." Syntax="canFire unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canMove" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the vehicle is able to move, false if not" Descr="Returns if the given vehicle is still able to move." Syntax="canMove unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canSlingLoad" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if setSlingLoad is possible" Descr="Returns true if it is possible to sling load cargo" Syntax="heli canSlingLoad cargo">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="heli" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargo" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canStand" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true if he's still able to stand up, false if not." Descr="Returns if the given soldier is able to stand up." Syntax=" canStand unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canSuspend" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if sleep, uiSleep or waitUntil commands can be used in current scope." Syntax="canSuspend">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="canTriggerDynamicSimulation" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="A getter for triggerDynamicSimulation" Syntax="canTriggerDynamicSimulation unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canUnloadInCombat" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if cargo of this vehicle want to get out when in combat." Syntax="canUnloadInCombat vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="canVehicleCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [WillFitIntoCurrentVehicle, WillFitIntoEmptyVehicle]" Descr="Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle" Syntax="vehicle canVehicleCargo cargo">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargo" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cancelSimpleTaskDestination" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Cancels a simple task destination." Syntax="cancelSimpleTaskDestination task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="captive" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the unit is captive, false if not" Descr="Returns if the given unit is captive. &quot;captive&quot; means that enemies will not shoot at the unit." Syntax="captive object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="captiveNum" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - anything from 0 to value set by setCaptive alt syntax." Descr="Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead." Syntax="captiveNum unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="catch" ReturnType="Any" ReturnName="result" ReturnDescr="Anything" Descr="Processes code when an exception is thrown in a try block. The exception caught can be found in the _exception variable." Syntax="tryBlock catch code">
    <PreArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="tryBlock" DataType="Code"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cbChecked" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control)." Syntax="cbChecked control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cbSetChecked" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control)." Syntax="control cbSetChecked state">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ceil" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="The ceil value of x." Syntax=" ceil x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="channelEnabled" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [isTextChatEnabled, isVoiceEnabled]" Descr="Returns true or false depending on whether the given channel is enabled or disabled." Syntax="channelEnabled channel">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="channel" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cheatsEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether cheats are enabled (whether the designers' version is running)." Syntax=" cheatsEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="checkAIFeature" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if is enabled" Descr="Check if given AI feature is currently enabled. Feature may be one of:&quot;AwareFormationSoft&quot;, &quot;CombatFormationSoft&quot;." Syntax="checkAIFeature feature">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="feature" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="checkAIFeature" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if is enabled" Descr="Check if given AI feature is currently enabled. Feature may be one of:&quot;AwareFormationSoft&quot;, &quot;CombatFormationSoft&quot;." Syntax="unit checkAIFeature feature">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="feature" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="checkVisibility" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - how much end position is visible to start position in range 0.." Descr="Checks if one position is visible from another position and how much." Syntax="[ignore, LOD, ignore2] checkVisibility [beg, end]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="ignore" DataType="Object"/>
        <ParamInfo Name="LOD" DataType="String"/>
        <ParamInfo Name="ignore2" DataType="Object" IsOptional="True"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="beg" DataType="Array"/>
        <ParamInfo Name="end" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="className" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns short name of location." Syntax="className location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clear3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Clears the value of the given entity's attribute in Eden Editor." Syntax="entity clear3DENAttribute attribute">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clear3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Clears the value of the given entity's attribute in Eden Editor." Syntax="entity clear3DENAttribute attribute">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clear3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Clears the value of the given entity's attribute in Eden Editor." Syntax="entity clear3DENAttribute attribute">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clear3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Clears the value of the given entity's attribute in Eden Editor." Syntax="entity clear3DENAttribute attribute">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clear3DENInventory" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Deletes inventory from mission.sqm of given units. Effect is not immediately visible, only when previewing the inventory resets to default." Syntax="clear3DENInventory entities">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entities" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearAllItemsFromBackpack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from the backpack." Syntax="clearAllItemsFromBackpack unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearBackpackCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all backpacks from ammo box (or any general weapon holder container)." Syntax="clearBackpackCargo box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearBackpackCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all backpacks from the vehicle cargo space. MP synchronized." Syntax="clearBackpackCargoGlobal unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearForcesRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Removes all force generators from world.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled." Syntax="clearForcesRTD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="clearGroupIcons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all icon from group." Syntax="clearGroupIcons group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearItemCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from ammo box (or any general weapon holder container)." Syntax="clearItemCargo box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearItemCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from ammo box (or any general weapon holder container)." Syntax="clearItemCargoGlobal box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearItemPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from ammo box (or any general weapon holder container)" Syntax="clearItemPool box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearMagazineCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all magazines from the given vehicle's magazine cargo space." Syntax="clearMagazineCargo vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearMagazineCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all magazines from the vehicle cargo space. MP synchronized." Syntax="clearMagazineCargoGlobal object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearMagazinePool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only." Syntax="clearMagazinePool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="clearOverlay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clear the current overlay." Syntax="clearOverlay map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clean up the content of radio protocol history." Syntax="clearRadio">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="clearVehicleInit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clear the object's init.  For security reasons, the command was disabled in Arma 3." Syntax="clearVehicleInit objectName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearWeaponCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all weapons from the given vehicle's weapon cargo space." Syntax="clearWeaponCargo vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearWeaponCargoGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all weapons from the vehicle cargo space. MP synchronized." Syntax="clearWeaponCargoGlobal unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="clearWeaponPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only." Syntax="clearWeaponPool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="clientOwner" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the client's owner id" Syntax="clientOwner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="closeDialog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Close the currently active user dialog with exit code." Syntax="closeDialog exitcode">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="exitcode" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="closeDisplay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Close given display with exit code." Syntax="display closeDisplay exitCode">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="exitCode" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="closeOverlay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Closes the current overlay without committing." Syntax="closeOverlay map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="collapseObjectTree" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapse the object tree." Syntax="collapseObjectTree map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="collect3DENHistory" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Execute a block of code in which all Eden Editor operations will be recorded as one history step." Syntax="collect3DENHistory code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="collectiveRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current position of a helicopter's collective pitch control." Syntax="collectiveRTD helicopterRTD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="combatMode" ReturnType="String" ReturnName="result" ReturnDescr="String -  One of &quot;BLUE&quot;, &quot;GREEN&quot;, &quot;WHITE&quot;, &quot;YELLOW&quot; and &quot;RED&quot; or &quot;ERROR&quot;" Descr="Returns the combat mode of the given unit. See setCombatMode for more information about combat modes." Syntax="combatMode group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="combatMode" ReturnType="String" ReturnName="result" ReturnDescr="String -  One of &quot;BLUE&quot;, &quot;GREEN&quot;, &quot;WHITE&quot;, &quot;YELLOW&quot; and &quot;RED&quot; or &quot;ERROR&quot;" Descr="Returns the combat mode of the given unit. See setCombatMode for more information about combat modes." Syntax="combatMode group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandArtilleryFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit to reload defined magazine commence fire burst on the given position (via the radio)." Syntax="unit commandArtilleryFire [position, type, rounds]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="rounds" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the command radio channel. Must have assigned &quot;ItemRadio&quot; to see or transmit the messages." Syntax="unitName commandChat chatText">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the command radio channel. Must have assigned &quot;ItemRadio&quot; to see or transmit the messages." Syntax="[side, identity] commandChat chatText">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="identity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandFSM" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit to process command defined by FSM file (via the radio)." Syntax="unitName commandFSM [fsm name, position, target]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fsmname" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="target" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandFSM" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit to process command defined by FSM file (via the radio)." Syntax="unitName commandFSM [fsm name, position, target]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fsmname" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="target" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to fire on the given target (via the radio)." Syntax="unitName commandFire target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to fire on the given target (via the radio)." Syntax="unitName commandFire target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandFollow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to follow the given other unit (via the radio)." Syntax="unitName commandFollow followedunit">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="followedunit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandFollow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to follow the given other unit (via the radio)." Syntax="unitName commandFollow followedunit">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="followedunit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandGetOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders the unit to get out from the vehicle (via the radio)." Syntax="commandGetOut units(s)">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="units(s)" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandMove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message." Syntax="unitName commandMove position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandMove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message." Syntax="unitName commandMove position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the command radio channel. Must have assigned &quot;ItemRadio&quot; to send or receive the transmission." Syntax="unit commandRadio radioName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the command radio channel. Must have assigned &quot;ItemRadio&quot; to send or receive the transmission." Syntax="[side, identity] commandRadio radioName">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="identity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandStop" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to stop (via the radio). A stop command will never finish, the unit will never be ready." Syntax="commandStop unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandStop" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to stop (via the radio). A stop command will never finish, the unit will never be ready." Syntax="commandStop unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (via the radio)." Syntax="unit commandSuppressiveFire target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (via the radio)." Syntax="unit commandSuppressiveFire target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (via the radio)." Syntax="unit commandSuppressiveFire target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (via the radio)." Syntax="unit commandSuppressiveFire target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to target the given target (via the radio)." Syntax="unitName commandTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders the unit(s) to watch the given position or target (via the radio)." Syntax="units commandWatch position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders the unit(s) to watch the given position or target (via the radio)." Syntax="units commandWatch position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders the unit(s) to watch the given position or target (via the radio)." Syntax="units commandWatch target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders the unit(s) to watch the given position or target (via the radio)." Syntax="units commandWatch target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commander" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object -  The unit sitting in the commander place is returned." Descr="In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer." Syntax="commander vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commandingMenu" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the name of the player actual topmost commanding menu." Syntax="commandingMenu">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="comment" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Define a comment. Mainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script." Syntax="comment commentMsg">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="commentMsg" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="commitOverlay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Commit the current overlay." Syntax="commitOverlay map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="compile" ReturnType="Code" ReturnName="result" ReturnDescr="Code - compiled expression" Descr="Compile expression." Syntax="compile expression">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="expression" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="compileFinal" ReturnType="Code" ReturnName="result" ReturnDescr="Code" Descr="Compile expression and makes it final, preventing it from: repeated compile or compileFinal removal by nil remote rewrite using publicVariable, pub" Syntax="compileFinal expression">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="expression" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="completedFSM" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether the given FSM completes.The FSM handle is the number returned by the execFSM command." Syntax="completedFSM fsmHandle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="fsmHandle" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="composeText" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Creates a structured text by joining the given structured or plain texts." Syntax="composeText [argument1, argument2, ...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="argument1" DataType="Any"/>
        <ParamInfo Name="argument2" DataType="Any"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configClasses" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Array of Configs" Descr="Returns an array of config entries which meet criteria in condition code." Syntax="condition configClasses config">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="condition" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configFile" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Return root of config entries hierarchy.See AllInOne Config for a full config extract as example." Syntax=" configFile">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="configHierarchy" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of parent configs" Descr="Returns hierarchy of the given config class." Syntax="configHierarchy configClass">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="configClass" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of config entry." Syntax=" configName config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configOf" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Returns config path of the provided object." Syntax="configOf obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configProperties" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Array of Configs" Descr="Returns an array of config entries which meet criteria in condition code." Syntax="configProperties [config, condition, inherit]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
        <ParamInfo Name="condition" DataType="String" IsOptional="True"/>
        <ParamInfo Name="inherit" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configSourceAddonList" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns an array of addons (CfgPatches) in which the given config class is defined." Syntax="configSourceAddonList config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configSourceMod" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns modDir of the mod that given config class was loaded from." Syntax="configSourceMod config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="configSourceModList" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns an array of mods (CfgMods) in which the given config class is defined." Syntax="configSourceModList config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="confirmSensorTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets for which Side the entity becomes a &quot;confirmed hostile&quot; target - a target that becomes highlighted red on the sensors display." Syntax="vehicle confirmSensorTarget [side, isConfirmed]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="isConfirmed" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="connectTerminalToUAV" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot." Syntax="person connectTerminalToUAV uav">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="connectToServer" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Connects the client to the provided server.ⓘonly works on the Main Menu." Syntax="connectToServer [ip, port, password]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="ip" DataType="String"/>
        <ParamInfo Name="port" DataType="Scalar"/>
        <ParamInfo Name="password" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="controlsGroupCtrl" ReturnType="Control" ReturnName="result" ReturnDescr="Control" Descr="Returns a child control with specified idc from a controls group" Syntax="ctrlgrp controlsGroupCtrl idc">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrlgrp" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="copyFromClipboard" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the content of the (text) clipboard." Syntax="copyFromClipboard">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="copyToClipboard" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Copy text string to the clipboard." Syntax="copyToClipboard text">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="copyWaypoints" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one." Syntax="groupTo copyWaypoints groupFrom">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupTo" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupFrom" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cos" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Cosine of a number, argument in degrees." Syntax="cos x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="count" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Can be used to count: the number of elements in array the number of elements in array with condition the number of sub-entries in a config object " Syntax="count array">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="count" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Can be used to count: the number of elements in array the number of elements in array with condition the number of sub-entries in a config object " Syntax="condition count array">
    <PreArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="condition" DataType="Code"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="count" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Can be used to count: the number of elements in array the number of elements in array with condition the number of sub-entries in a config object " Syntax="count configname">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="configname" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="count" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Can be used to count: the number of elements in array the number of elements in array with condition the number of sub-entries in a config object " Syntax="count string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="countEnemy" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Count how many units in the array are considered enemy to the given unit." Syntax="unitName countEnemy arrayName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arrayName" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="countFriendly" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Count how many units in the array are considered friendly to the given unit." Syntax="unitName countFriendly arrayName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arrayName" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="countSide" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Count how many units in the given array belong to given side. If the object in passed array is a Group, the leader of the group will be counted." Syntax="side countSide arrayName">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arrayName" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="countType" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Count how many objects in the array are of given type. This command also works with parent classes like &quot;Air&quot;, &quot;Tank&quot;, and &quot;Car&quot;." Syntax="type countType objects">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="countUnknown" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Count how many units in the array are unknown to the given unit." Syntax="unitName countUnknown arrayName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arrayName" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENComposition" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Eden Entities" Descr="Create new Composition. To create individual entities, use create3DENEntity." Syntax="create3DENComposition [configPath,  position]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="configPath" DataType="Config"/>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="Object" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="Group" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="Array" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="String" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="Object" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="group create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="Group" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="group create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="Array" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="group create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="create3DENEntity" ReturnType="String" ReturnName="result" ReturnDescr="Eden Entity" Descr="Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition." Syntax="group create3DENEntity [mode, class, position, (isEmpty)]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="isEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createAgent" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles)." Syntax="createAgent [type, position, markers, placement, special]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="markers" DataType="Array"/>
        <ParamInfo Name="placement" DataType="Scalar"/>
        <ParamInfo Name="special" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createCenter" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="In a nutshell, this command creates game Side. Without side it is not possible to create Groups." Syntax="createCenter side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDialog" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true when the dialog was created successfully" Descr="Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp." Syntax="createDialog dialogName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="dialogName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDiaryLink" ReturnType="String" ReturnName="result" ReturnDescr="String - empty string &quot;&quot; or string in format [&quot;&lt;log subject=&quot;&quot;%1&quot;&quot; record=&quot;&quot;%2&quot;&quot;" Descr="Create a link to the section of diary given by subject. Record is selected based on given object (diary record,task or unit)." Syntax="createDiaryLink [subject, record, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="subject" DataType="String"/>
        <ParamInfo Name="record" DataType="Any"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDiaryRecord" ReturnType="Any" ReturnName="result" ReturnDescr="Diary Record" Descr="creates a diary entry.Supported tags and their parameters:  image: String - path to image." Syntax="unitName createDiaryRecord [subject, text, task, taskState, showTitle]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="subject" DataType="String"/>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="task" DataType="Task" IsOptional="True"/>
        <ParamInfo Name="taskState" DataType="String" IsOptional="True"/>
        <ParamInfo Name="showTitle" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDiaryRecord" ReturnType="Any" ReturnName="result" ReturnDescr="Diary Record" Descr="creates a diary entry.Supported tags and their parameters:  image: String - path to image." Syntax="unitName createDiaryRecord [subject, [title, text], task, stateState, showTitle]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="subject" DataType="String"/>
        <ParamInfo Name="[title, text]" DataType="Array"/>
        <ParamInfo Name="task" DataType="Task" IsOptional="True"/>
        <ParamInfo Name="stateState" DataType="Any"/>
        <ParamInfo Name="showTitle" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDiarySubject" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Create a new subject page in a log." Syntax="person createDiarySubject [subject, displayName, picture]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="subject" DataType="String"/>
        <ParamInfo Name="displayName" DataType="String"/>
        <ParamInfo Name="picture" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDisplay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing or (Since Arma 3 v1.49." Descr="Create child display of given display and load from &quot;resourceName&quot;." Syntax="parent createDisplay resourceName">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="parent" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="resourceName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createDisplay" ReturnType="Display" ReturnName="result" ReturnDescr="Nothing or (Since Arma 3 v1.49." Descr="Create child display of given display and load from &quot;resourceName&quot;." Syntax="parent createDisplay resourceName">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="parent" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="resourceName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createGearDialog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Opens gear dialog for given unit." Syntax="createGearDialog [unit, resource]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="resource" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createGroup" ReturnType="Group" ReturnName="Group" ReturnDescr="Group" Descr="Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter." Syntax="createGroup side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createGroup" ReturnType="Group" ReturnName="Group" ReturnDescr="Group" Descr="Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter." Syntax="createGroup [side, deleteWhenEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="deleteWhenEmpty" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createGuardedPoint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds a point guarded by the given side (scripted way of adding equivalent of &quot;GUARDED BY&quot; trigger in Editor)." Syntax="createGuardedPoint [side, position, objectMapID, vehicle]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="objectMapID" DataType="Scalar"/>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createLocation" ReturnType="Location" ReturnName="Location" ReturnDescr="Location" Descr="Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes." Syntax="createLocation [className, position, sizeX, sizeY]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="className" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="sizeX" DataType="Scalar"/>
        <ParamInfo Name="sizeY" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createMPCampaignDisplay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create a MP campaign display." Syntax="display createMPCampaignDisplay class">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createMarker" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Creates a new marker at the given position. The marker name has to be unique." Syntax="createMarker [name, position, channel, creator]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="channel" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="creator" DataType="Object" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createMarkerLocal" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Creates a local marker at the given position. Marker exists only on PC that created it. The marker name has to be unique." Syntax="createMarkerLocal [name, position, channel, creator]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="channel" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="creator" DataType="Object" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createMenu" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a previously added menu." Syntax="map createMenu index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createMine" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Creates a mine of the given type (type is the name of the subclass of CfgVehicles)." Syntax="createMine [type, position, markers, placement]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="markers" DataType="Array"/>
        <ParamInfo Name="placement" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createMissionDisplay" ReturnType="Any" ReturnName="result" ReturnDescr="For Type" Descr="Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument &quot;root&quot;." Syntax="display createMissionDisplay [missionRootDirectoryString,cfgMissionsClass]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="missionRootDirectoryString" DataType="String"/>
        <ParamInfo Name="cfgMissionsClass" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createSimpleObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object - Created simple object" Descr="Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume." Syntax="createSimpleObject [shapeName, positionWorld, local]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="shapeName" DataType="String"/>
        <ParamInfo Name="positionWorld" DataType="Array"/>
        <ParamInfo Name="local" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createSimpleObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object - Created simple object" Descr="Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume." Syntax="createSimpleObject [className, positionASL, local]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="className" DataType="String"/>
        <ParamInfo Name="positionASL" DataType="Array"/>
        <ParamInfo Name="local" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createSimpleTask" ReturnType="Task" ReturnName="result" ReturnDescr="Task - the new task" Descr="Creates a new Task. The task effect is local, it will only exist on PC it was added." Syntax="person createSimpleTask [name, parentTask]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="parentTask" DataType="Task" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createSite" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Create a new site." Syntax="type createSite pos">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createSoundSource" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Creates a sound source of the given type (type is the name of the subclass of CfgVehicles which is pointing to the sound defined in CfgSFX)." Syntax="createSoundSource [type, position, markers, placement]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="markers" DataType="Array"/>
        <ParamInfo Name="placement" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createTask" ReturnType="Task" ReturnName="result" ReturnDescr="Task" Descr="Create a new AI task (subtask of parentTask). Type is name of registered task type." Syntax="teamMember createTask [[type, parentTask], priority, name1, value1, (...), nameN, valueN]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[type, parentTask]" DataType="Array"/>
        <ParamInfo Name="priority" DataType="Scalar"/>
        <ParamInfo Name="name1" DataType="String"/>
        <ParamInfo Name="value1" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="nameN" DataType="String"/>
        <ParamInfo Name="valueN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createTeam" ReturnType="Object" ReturnName="result" ReturnDescr="Team Member" Descr="Create a team and name it." Syntax="createTeam [type, name]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createTrigger" ReturnType="Object" ReturnName="result" ReturnDescr="Object - created trigger" Descr="Creates a sensor (trigger) of the given type and at the given position." Syntax="createTrigger [type, position, makeGlobal]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="makeGlobal" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createUnit" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object - The created unit" Descr="Create unit of a class that's defined in CfgVehicles.The Group parameter MUST be an existing group or the unit won't be created." Syntax="group createUnit [type, position, markers, placement, special]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="markers" DataType="Array"/>
        <ParamInfo Name="placement" DataType="Scalar"/>
        <ParamInfo Name="special" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createUnit" ReturnType="Object" ReturnName="Unit" ReturnDescr="⚠Nothing - This syntax does NOT return a unit reference! In order to reference t" Descr="Create unit of a class that's defined in CfgVehicles.The Group parameter MUST be an existing group or the unit won't be created." Syntax="type createUnit [position, group, init, skill, rank]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="group" DataType="Group"/>
        <ParamInfo Name="init" DataType="String" IsOptional="True"/>
        <ParamInfo Name="skill" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="rank" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createVehicle" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles)For a class reference from older games see Classes." Syntax="type createVehicle position">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createVehicle" ReturnType="Object" ReturnName="result" ReturnDescr="Object - created vehicle or objNull if failed" Descr="Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles)For a class reference from older games see Classes." Syntax="createVehicle [type, position, markers, placement, special]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="markers" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="placement" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="special" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createVehicleCrew" ReturnType="Group" ReturnName="result" ReturnDescr="Group - the group of the created crew (since Arma 3 v1.93." Descr="Creates crew to given empty vehicle. Crew members are default crew defined in config. Crew side will also correspond to vehicle's faction." Syntax="createVehicleCrew vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="createVehicleLocal" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Creates an object of the given type. Created object is not transferred through network in MP games." Syntax="type createVehicleLocal position">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="crew" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  An array with all units in the vehicle is returned." Descr="Returns the crew (both dead and alive) of the given vehicle." Syntax="crew vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctAddHeader" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Adds a header line of controls according to the HeaderTemplate class." Syntax=" ctAddHeader Control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctAddRow" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [, [, ." Syntax=" ctAddRow Control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all the lines from the RscControlsTable. Returns Nothing." Syntax="ctClear ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctCurSel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns index of the selected row. Will take only rows, but not headers into account." Syntax="ctCurSel ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns metadata (string) associated with a particular row of RscControlsTable." Syntax="ctrl ctData row">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctFindHeaderRows" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Takes index of a header as a parameter. Returns array of indices of rows under this header." Syntax="ctrl ctFindHeaderRows index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctFindRowHeader" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Takes index of a row as a parameter. Returns index of the closest header above this row." Syntax="ctrl ctFindRowHeader row">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctHeaderControls" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of controls on the header with the given index." Syntax="ctrl ctHeaderControls index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctHeaderCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number of headers (rows not included) in the RscControlsTable." Syntax="ctHeaderCount ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctRemoveHeaders" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed." Syntax="ctrl ctRemoveHeaders indices">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="indices" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctRemoveRows" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed." Syntax="ctrl ctRemoveRows indices">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="indices" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctRowControls" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of controls on the row with the given index." Syntax="Control ctRowControls Number">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="Number" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctRowCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number of rows (headers not included) in the RscControlsTable." Syntax=" ctRowCount Control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctSetCurSel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing." Syntax="Control ctSetCurSel Number">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="Number" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Associates metadata (string) with the row determined by the index. Returns Nothing." Syntax="ctrl ctSetData [index, data]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctSetHeaderTemplate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template." Syntax="Control ctSetHeaderTemplate Config">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="Config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctSetRowTemplate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Takes config path to the new row template." Syntax="Control ctSetRowTemplate Config">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="Control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="Config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Associates metadata (number) with the row determined by the index. Returns Nothing." Syntax="control ctSetValue [index, value]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns metadata (number) associated with a particular row of RscControlsTable." Syntax="control ctValue index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlActivate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Launch actions attached to given (button based) control." Syntax="ctrlActivate controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAddEventHandler" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed." Syntax="control ctrlAddEventHandler [handler,function]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handler" DataType="String"/>
        <ParamInfo Name="function" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAngle" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [angle, centerX, centerY]" Descr="Gets rotation info of an ST_PICTURE control." Syntax="ctrlAngle control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAnimateModel" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Process an animation of 3D Dialog Control. Command uses name defined by source property and works similar like animateSource command." Syntax="control ctrlAnimateModel [source, phase]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="source" DataType="String"/>
        <ParamInfo Name="phase" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAnimationPhaseModel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current animation phase of given source. Similar to animationSourcePhase." Syntax="control ctrlAnimationPhaseModel source">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="source" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAutoScrollDelay" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present." Syntax="ctrlAutoScrollDelay control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAutoScrollRewind" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if auto-scroll should move back to start after it reaches the end." Syntax="ctrlAutoScrollRewind control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlAutoScrollSpeed" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present." Syntax="ctrlAutoScrollSpeed control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlChecked" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true checked, false unchecked" Descr="Returns the current state of checkbox (CT_CHECKBOXES, Type 7)." Syntax="ctrlChecked control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlChecked" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true checked, false unchecked" Descr="Returns the current state of checkbox (CT_CHECKBOXES, Type 7)." Syntax="control ctrlChecked index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlClassName" ReturnType="String" ReturnName="result" ReturnDescr="String - class name" Descr="Returns the class name of a control as it defined in config." Syntax="ctrlClassName control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Commit control animation." Syntax="control ctrlCommit time">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlCommitted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if the control animation is finished." Syntax=" ctrlCommitted controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlCreate" ReturnType="Control" ReturnName="result" ReturnDescr="Control" Descr="Creates new control in given display." Syntax="display ctrlCreate [class, idc, controlsGroup]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="controlsGroup" DataType="Control" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlDelete" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Deletes given control.Returns whether the deletion was successful." Syntax="ctrlDelete control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto." Syntax="ctrlEnable [idc, enable]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto." Syntax="controlName ctrlEnable enable">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true if the control is enabled, false if not." Descr="Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused." Syntax="  ctrlEnabled idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused." Syntax=" ctrlEnabled controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlFade" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current fade factor of control." Syntax=" ctrlFade controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlHTMLLoaded" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true when HTML content was successfully loaded." Syntax="ctrlHTMLLoaded control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlIDC" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns control IDC." Syntax="ctrlIDC control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlIDD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns display IDD." Syntax="ctrlIDD display">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapAnimAdd" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds the next frame to the map animation." Syntax="map ctrlMapAnimAdd [time, zoom, position]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
        <ParamInfo Name="zoom" DataType="Scalar"/>
        <ParamInfo Name="position" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapAnimClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clears the map animation." Syntax="ctrlMapAnimClear controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapAnimCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays the map animation." Syntax="ctrlMapAnimCommit controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapAnimDone" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the map animation has finished." Syntax=" ctrlMapAnimDone controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapCursor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor." Syntax="control ctrlMapCursor [defaultCursor, newCursor]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="defaultCursor" DataType="String"/>
        <ParamInfo Name="newCursor" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapMouseOver" ReturnType="Array" ReturnName="Waypoint" ReturnDescr="Array - Possible values:[&quot;unit&quot;, Object][&quot;vehicle&quot;, Object][&quot;vehicleGroup&quot;, O" Descr="Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode." Syntax="ctrlMapMouseOver control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapScale" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current scale of given map control." Syntax="ctrlMapScale ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapScreenToWorld" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - world coordinates in format Position2D" Descr="Convert screen coordinates in map to world coordinates." Syntax="control ctrlMapScreenToWorld [x, y]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMapWorldToScreen" ReturnType="Array" ReturnName="result" ReturnDescr="Array - screen coordinates in format [x, y]" Descr="Converts world coordinates into map screen coordinates. This command is identical to posWorldToScreen." Syntax="control ctrlMapWorldToScreen position">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlModel" ReturnType="String" ReturnName="result" ReturnDescr="String - model path" Descr="Returns model used in 3D Dialog Control." Syntax="ctrlModel control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlModelDirAndUp" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [vectorDir, vectorUp]" Descr="Returns vectorDir and vectorUp of the model used in 3D Dialog Control." Syntax="ctrlModelDirAndUp control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlModelScale" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns 3D control model scale" Syntax="ctrlModelScale control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlMousePosition" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns position of the mouse on the screen relative to UI Control in UI coordinates." Syntax="ctrlMousePosition control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlParent" ReturnType="Display" ReturnName="result" ReturnDescr="Display" Descr="Returns container of the given control." Syntax="ctrlParent control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlParentControlsGroup" ReturnType="Control" ReturnName="result" ReturnDescr="Control" Descr="Returns the parent control of a given child control" Syntax="ctrlParentControlsGroup ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlPosition" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the current position of 2D control as [x, y, w, h] array. For 3D control it returns relative [x,y,z]." Syntax="ctrlPosition controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlRemoveAllEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all event handlers from the given control." Syntax="control ctrlRemoveAllEventHandlers handlerName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="handlerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlRemoveEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove a given event handler from the given control." Syntax="control ctrlRemoveEventHandler [handler name,id]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handlername" DataType="Handle"/>
        <ParamInfo Name="id" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlScale" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current scale of the control." Syntax=" ctrlScale controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlScrollValues" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [vScrollValue, hScrollValue]" Descr="CT_CONTROLS_GROUPCT_TREECT_LISTBOXCT_COMBOCT_XCOMBOCT_LISTNBOXCT_LISTNBOX_CHECKABLE" Syntax="ctrlScrollValues control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetActiveColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets text color of given control when control is selected." Syntax="control ctrlSetActiveColor color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetAngle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the rotation of an ST_PICTURE control." Syntax="control ctrlSetAngle [angle, centerX, centerY]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="centerX" DataType="Scalar"/>
        <ParamInfo Name="centerY" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetAngle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the rotation of an ST_PICTURE control." Syntax="control ctrlSetAngle [angle, centerX, centerY, now]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="centerX" DataType="Scalar"/>
        <ParamInfo Name="centerY" DataType="Scalar"/>
        <ParamInfo Name="now" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetAutoScrollDelay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets number of second before auto-scroll starts/rewinds. Setter for ctrlAutoScrollDelay." Syntax="control ctrlSetAutoScrollDelay delay">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="delay" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetAutoScrollRewind" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines if scroll should rewind when auto-scroll reach end. Setter for ctrlAutoScrollRewind." Syntax="control ctrlSetAutoScrollRewind set">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="set" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetAutoScrollSpeed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets number of second required to scroll to next line. If speed &lt; 0, auto-scroll is disabled. Setter for ctrlAutoScrollSpeed." Syntax="control ctrlSetAutoScrollSpeed speed">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="speed" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetBackgroundColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets background color of given control." Syntax="control ctrlSetBackgroundColor color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetChecked" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets checked state of checkbox (CT_CHECKBOXES, Type 7)." Syntax="control ctrlSetChecked checked">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="checked" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetChecked" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets checked state of checkbox (CT_CHECKBOXES, Type 7)." Syntax="control ctrlSetChecked [index, checked]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="checked" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets given event handler of given control." Syntax="controlName ctrlSetEventHandler [handlerName, function]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handlerName" DataType="String"/>
        <ParamInfo Name="function" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFade" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets wanted transparency for control animation. Requires ctrlCommit to commit changes." Syntax="controlName ctrlSetFade fade">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="fade" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFocus" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the input focus on given control." Syntax="ctrlSetFocus controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFont" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the font of given control." Syntax="control ctrlSetFont fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH1" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H1 font of given HTML control." Syntax="controlName ctrlSetFontH1 fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH1B" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H1 bold font of given HTML control." Syntax="controlName ctrlSetFontH1B fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH2" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H2 font of given HTML control" Syntax="controlName ctrlSetFontH2 fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH2B" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H2 bold font of given HTML control." Syntax="controlName ctrlSetFontH2B fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH3" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H3 font of given HTML control." Syntax="controlName ctrlSetFontH3 fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH3B" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H3 bold font of given HTML control." Syntax="controlName ctrlSetFontH3B fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH4" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H4 font of given HTML control." Syntax="controlName ctrlSetFontH4 fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH4B" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H4 bold font of given HTML control." Syntax="controlName ctrlSetFontH4B fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH5" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H5 font of given HTML control." Syntax="controlName ctrlSetFontH5 fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH5B" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H5 bold font of given HTML control." Syntax="controlName ctrlSetFontH5B fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH6" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H6 font of given HTML control." Syntax="controlName ctrlSetFontH6 fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontH6B" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H6 bold font of given HTML control." Syntax="controlName ctrlSetFontH6B fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the font size of given control." Syntax="control ctrlSetFontHeight size">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="size" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightH1" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H1 font size of given HTML control." Syntax="controlName ctrlSetFontHeightH1 height">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightH2" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H2 font size of given HTML control." Syntax="controlName ctrlSetFontHeightH2 height">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightH3" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H3 font size of given HTML control." Syntax="controlName ctrlSetFontHeightH3 height">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightH4" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H3 font size of given HTML control." Syntax="controlName ctrlSetFontHeightH4 height">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightH5" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H5 font size of given HTML control." Syntax="controlName ctrlSetFontHeightH5 height">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightH6" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets H6 font size of given HTML control." Syntax="controlName ctrlSetFontHeightH6 height">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontHeightSecondary" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the font size of the secondary text of given control." Syntax="ctrl ctrlSetFontHeightSecondary value">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontP" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets P font of given HTML control or its size." Syntax="control ctrlSetFontP fontOrSize">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontOrSize" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontP" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets P font of given HTML control or its size." Syntax="control ctrlSetFontP fontOrSize">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="fontOrSize" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontPB" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets P bold font of given HTML control." Syntax="controlName ctrlSetFontPB fontName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetFontSecondary" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the font size of the secondary text of given control." Syntax="ctrl ctrlSetFontSecondary fontClass">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fontClass" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetForegroundColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets foreground color of given control. Color is in format Color." Syntax="control ctrlSetForegroundColor color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetModel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets model for 3D Dialog Control." Syntax="control ctrlSetModel model">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="model" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetModelDirAndUp" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object." Syntax="control ctrlSetModelDirAndUp [dir, up]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="dir" DataType="Array"/>
        <ParamInfo Name="up" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetModelScale" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets 3D control model scale" Syntax="control ctrlSetModelScale scale">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="scale" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPixelPrecision" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Enable or disable pixel precision (rounding) in a given control interface." Syntax="controlName ctrlSetPixelPrecision mode">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPixelPrecision" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Enable or disable pixel precision (rounding) in a given control interface." Syntax="controlName ctrlSetPixelPrecision mode">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPosition [x, y]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPosition [x, y, w, h]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="w" DataType="Scalar"/>
        <ParamInfo Name="h" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPosition [x, y, z]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="z" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPositionH" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets wanted H position for 2D control. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPositionH h">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="h" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPositionW" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets wanted W position for 2D control. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPositionW w">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="w" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPositionX" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets wanted X position for 2D control. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPositionX x">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetPositionY" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets wanted Y position for 2D control. ctrlCommit is required to complete the operation." Syntax="controlName ctrlSetPositionY y">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetScale" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets wanted scale for control animation. Top left corner remains same. This command requires ctrlCommit." Syntax="control ctrlSetScale scale">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="scale" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetScrollValues" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="CT_CONTROLS_GROUPCT_TREECT_LISTBOXCT_COMBOCT_XCOMBOCT_LISTNBOXCT_LISTNBOX_CHECKABLE" Syntax="control ctrlSetScrollValues [vScrollValue, hScrollValue]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vScrollValue" DataType="Scalar"/>
        <ParamInfo Name="hScrollValue" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetStructuredText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the structured text which will be displayed in structured text control." Syntax="control ctrlSetStructuredText structuredText">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="structuredText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the text of a control of the currently active user dialog or display." Syntax="ctrlSetText [idc, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the text of a control of the currently active user dialog or display." Syntax="control ctrlSetText text">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTextColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets text color of given control. Color is in format Color. As of Arma 3 v1." Syntax="control ctrlSetTextColor color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTextColorSecondary" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the secondary text color of a text control." Syntax="control ctrlSetTextColorSecondary color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTextSecondary" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the secondary text of a text control." Syntax="control ctrlSetTextSecondary text">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTextSelection" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Selects 'length' characters of edit control from the 'start' position and places cursor at the end of selection." Syntax="control ctrlSetTextSelection [start, length]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="start" DataType="Scalar"/>
        <ParamInfo Name="length" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTooltip" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets tooltip text of given control." Syntax="control ctrlSetTooltip text">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTooltipColorBox" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets tooltip border color of given control. Color is in format Color." Syntax="control ctrlSetTooltipColorBox color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTooltipColorShade" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets tooltip background color of given control. Color is in format Color." Syntax="control ctrlSetTooltipColorShade color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlSetTooltipColorText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets tooltip text color of given control. Color is in format Color." Syntax="display ctrlSetTooltipColorText color">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlShow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set if a control of the currently active user dialog is shown or not.Read Dialog Control for more information about user dialogs and controls." Syntax="ctrlShow [idc, show]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlShow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set if a control of the currently active user dialog is shown or not.Read Dialog Control for more information about user dialogs and controls." Syntax="controlName ctrlShow show">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlShown" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns whether given control is shown." Syntax=" ctrlShown controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlText" ReturnType="String" ReturnName="result" ReturnDescr="String - The text or image path is returned, dependent on the control type." Descr="Returns the text of a control of the currently active user dialog." Syntax="ctrlText idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlText" ReturnType="String" ReturnName="result" ReturnDescr="String - (as above)." Descr="Returns the text of a control of the currently active user dialog." Syntax="ctrlText controlName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="controlName" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlTextColor" ReturnType="Array" ReturnName="result" ReturnDescr="Array - text color" Descr="Returns control's text color in Color format (see ctrlSetTextColor)." Syntax="ctrlTextColor control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlTextHeight" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the control text height. Supported control types are: CT_STATIC 0 CT_EDIT 2        (Since Arma 3 v1.57." Syntax="ctrlTextHeight control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlTextSecondary" ReturnType="String" ReturnName="result" ReturnDescr="String - Secondary text of given control" Descr="Returns the secondary text of a text control." Syntax="ctrlTextSecondary control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlTextSelection" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [start, length, selectedText] where:start: Number - position in" Descr="Returns edit control text selection in format [start, length, selectedText]" Syntax="ctrlTextSelection control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlTextWidth" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the control text width." Syntax="ctrlTextWidth control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlType" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number representing the type of control, which is also defined by type property in config." Syntax="ctrlType control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ctrlVisible" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the control is shown, false if not" Descr="Returns if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls." Syntax=" ctrlVisible idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorAddons" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns list of addons allowed to given curator." Syntax="curatorAddons curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorCamera" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns curator camera object." Syntax="curatorCamera">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="curatorCameraArea" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns all curator camera areas." Syntax="curatorCameraArea curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorCameraAreaCeiling" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns ceiling height for curator camera." Syntax="curatorCameraAreaCeiling curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorCoef" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current coeficient setting." Syntax="curatorObj curatorCoef action">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorEditableObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns all editable objects which belong to a curator." Syntax="curatorEditableObjects curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorEditingArea" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns all curator editing areas." Syntax="curatorEditingArea curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorEditingAreaType" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns type of edit areas assigned to curator (blacklist/whitelist)." Syntax="curatorEditingAreaType obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorMouseOver" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns Curator Editable Object under curator mouse pointer in form of array: [] - when not in curator mode [&quot;&quot;] - if no curator editable object und" Syntax="curatorMouseOver">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="curatorPoints" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number of points that curator have. Points can be only in range from 0 to 1." Syntax="curatorPoints curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorRegisteredObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array with all objects that has curator registered and their settings." Syntax="curatorRegisteredObjects curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="curatorSelected" ReturnType="Array" ReturnName="Waypoint" ReturnDescr="Array - [[Objects],[Groups],[Waypoints],[Markers]]" Descr="Returns list of all curator selected items." Syntax="curatorSelected">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="curatorWaypointCost" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return current price for placing waypoints (curator specific)." Syntax="curatorWaypointCost curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="current3DENOperation" ReturnType="String" ReturnName="result" ReturnDescr="String - operation name." Descr="Returns the currently performed editing operation in Eden Editor." Syntax="current3DENOperation">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="currentChannel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns currently selected user chat channel on the UI (selected with  in MP)." Syntax="currentChannel">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="currentCommand" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier)." Syntax="currentCommand vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentMagazine" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns class name of currently loaded vehicle's magazine." Syntax="currentMagazine vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentMagazineDetail" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id." Syntax="currentMagazineDetail object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentMagazineDetailTurret" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret." Syntax="vehicle currentMagazineDetailTurret [turret path]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretpath" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentMagazineTurret" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret." Syntax="vehicle currentMagazineTurret [turret path]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretpath" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentMuzzle" ReturnType="String" ReturnName="result" ReturnDescr="String - current muzzle" Descr="Returns current muzzle of unit's weapon.  This command will return 0 Number if given object is a vehicle instead of a person." Syntax="currentMuzzle gunner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="gunner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentNamespace" ReturnType="Namespace" ReturnName="result" ReturnDescr="Namespace" Descr="Returns current global namespace the script runs in." Syntax="currentNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="currentPilot" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object - piloting unit or objNull" Descr="Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned." Syntax="currentPilot vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentTask" ReturnType="Task" ReturnName="result" ReturnDescr="Task" Descr="Return current task of given person." Syntax="currentTask person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentTasks" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of Tasks" Descr="List all uncompleted tasks." Syntax="currentTasks teamMember">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentThrowable" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [magazineClassName, muzzleClassName, [magazineId, creatorId]]" Descr="Returns currently selected throwable, which will be launched if user presses &quot;G&quot;. Please note: The weapon/magazine id system is W.I.P." Syntax="currentThrowable player">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="player" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentVisionMode" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current vision mode of unit's weapon." Syntax="currentVisionMode unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentWaypoint" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - the index of current waypoint" Descr="Return the index of the current waypoint.To determine the validity of the index, compare it to the waypoints count." Syntax="currentWaypoint groupName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentWeapon" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the name of the currently selected weapon (on the primary turret for vehicles)." Syntax="currentWeapon vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentWeaponMode" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns current weapon mode of unit's weapon." Syntax="currentWeaponMode gunner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="gunner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentWeaponTurret" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret." Syntax="vehicle currentWeaponTurret [turret path]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretpath" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="currentZeroing" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns zeroing of unit's weapon." Syntax="currentZeroing gunner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="gunner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cursorObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the object under cursor." Syntax="cursorObject">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="cursorTarget" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the target pointed at by the player (usually with cross-hairs). The target has to be known to the player to some degree (knowsAbout &gt; 0)." Syntax="cursorTarget">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="customChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command." Syntax="unit customChat [channel, message]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="channel" DataType="Scalar"/>
        <ParamInfo Name="message" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="customRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol." Syntax="unit customRadio [channel, message]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="channel" DataType="Scalar"/>
        <ParamInfo Name="message" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="customWaypointPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Position in format [x,y,0] or []" Descr="Returns player's custom waypoint position." Syntax="customWaypointPosition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="cutFadeOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Terminates the effect in the given layer by fading it out according to the given duration." Syntax="layer cutFadeOut duration">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layer" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="duration" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutFadeOut" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - number of the corresponding layer" Descr="Terminates the effect in the given layer by fading it out according to the given duration." Syntax="layerName cutFadeOut duration">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="layerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="duration" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutObj" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays an object defined in the global config in CfgTitles." Syntax="cutObj [class, type, speed, showInMap]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutObj" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays an object defined in the global config in CfgTitles." Syntax="layer cutObj [class, type, speed, showInMap]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layer" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutObj" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - number of the allocated layer" Descr="Displays an object defined in the global config in CfgTitles." Syntax="layerName cutObj [class, type, speed, showInMap]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="layerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutRsc" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config." Syntax="cutRsc [class, type, speed, showInMap]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutRsc" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config." Syntax="layer cutRsc [class, type, speed, showInMap]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layer" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutRsc" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - number of the allocated layer" Descr="Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config." Syntax="layerName cutRsc [class, type, speed, showInMap]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="layerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays a text message in the center of the screen." Syntax="cutText [text, type, speed,  showInMap, isStructuredText]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="isStructuredText" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays a text message in the center of the screen." Syntax="layer cutText [text, type, speed,  showInMap, isStructuredText]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layer" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="isStructuredText" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="cutText" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - number of the allocated layer" Descr="Displays a text message in the center of the screen." Syntax="layerName cutText [text, type, speed,  showInMap, isStructuredText]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="layerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="isStructuredText" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="damage" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - the returned number in range (healthy) 0..1 (dead)." Descr="Return the damage value of an object." Syntax="damage object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="date" ReturnType="Array" ReturnName="result" ReturnDescr="Date - format [year, month, day, hour, minute]" Descr="Return the actual mission date and time as an array [year, month, day, hour, minute]." Syntax="date">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="dateToNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st  23:59:59 = 1." Syntax="dateToNumber date">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="year" DataType="Scalar"/>
        <ParamInfo Name="month" DataType="Scalar"/>
        <ParamInfo Name="day" DataType="Scalar"/>
        <ParamInfo Name="hour" DataType="Scalar"/>
        <ParamInfo Name="minute" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="daytime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - day time using a 24 hour clock, using fractions of hours." Descr="Returns the current ingame time in hours." Syntax="daytime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="deActivateKey" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns." Syntax="deActivateKey keyname">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="keyname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="debriefingText" ReturnType="String" ReturnName="result" ReturnDescr="String - end debriefing text." Descr="Returns debriefing text." Syntax="debriefingText end">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="end" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="debugFSM" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version." Syntax="FSMhandle debugFSM true">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="FSMhandle" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="true" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="debugLog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Dump argument type and value to debugging output." Syntax="debugLog anything">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="anything" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="decayGraphValues" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Multiplies graph values by the given coefficient. The corresponding lower bound value is used instead if the product is smaller than the bound." Syntax="decayGraphValues [lowerBoundValues, graphValues, coef]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="lowerBoundValues" DataType="Array"/>
        <ParamInfo Name="graphValues" DataType="Array"/>
        <ParamInfo Name="coef" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deg" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - degrees" Descr="Convert a number from Radians to Degrees." Syntax="deg value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="delete3DENEntities" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Delete given entities in Eden Editor, including anything that can be placed in editor." Syntax="delete3DENEntities entities">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entities" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteAt" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - returns the deleted element" Descr="Removes array element at the given index and returns removed element (modifies the original array, just like resize or set)." Syntax="array deleteAt index">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteCenter" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="In a nutshell, this command removes gaming Side (see createCenter). If a side has &gt;0 Groups it cannot be deleted." Syntax="deleteCenter side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteCollection" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Delete a collection. As example, used with a soldier, it'll hide the ingame model.When targetting ArmA 2 1.06 or newer, use hideObject instead." Syntax="deleteCollection object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteEditorObject" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Delete the editor object. Requires all editor object links to be removed prior." Syntax="map deleteEditorObject object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteGroup" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroys the given group. Group must be empty and local to the machine executing command." Syntax="deleteGroup group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteGroupWhenEmpty" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Marks given group for auto-deletion when group is empty." Syntax="group deleteGroupWhenEmpty delete">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="delete" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteIdentity" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true if the identy was deleted successfully, false if not" Descr="Delete an identity (created with saveIdentity) from the campaign's progress file." Syntax=" deleteIdentity identityName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="identityName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteLocation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Delete a location." Syntax="deleteLocation location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteMarker" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroys the given marker." Syntax="deleteMarker name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteMarkerLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroys the given marker." Syntax="deleteMarkerLocal markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteRange" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes a range of array elements from the given array (modifies the original array, just like resize or set)." Syntax="array deleteRange [from, count]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Scalar"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteResources" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive." Syntax="teamMember deleteResources [resource1, resource2,...]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="resource1" DataType="String"/>
        <ParamInfo Name="resource2" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteSite" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes the site." Syntax="deleteSite site">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="site" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteStatus" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true if the status was deleted successfully, false if not" Descr="Delete a status (created with saveStatus) from the campaign's progress file." Syntax=" deleteStatus statusName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="statusName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteTeam" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroy given team." Syntax="deleteTeam team">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Deletes an object. Only units inserted in the mission editor and units created during the game's progress can be deleted by this command." Syntax="deleteVehicle object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteVehicleCrew" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Deletes a member of the crew of a vehicle. Human players cannot be deleted." Syntax="vehicle deleteVehicleCrew unit">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="deleteWaypoint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes the specified waypoint." Syntax="deleteWaypoint [group, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="detach" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Detaches previously attached with attachTo object." Syntax="detach object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="detectedMines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array of all mines detected by a given side" Syntax="detectedMines side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_activeMissionFSMs" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [[name, state, timeout],..." Descr="Returns array with active Mission FSMs." Syntax="diag_activeMissionFSMs">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_activeSQFScripts" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays - to format [[scriptName, fileName, isRunning, currentLine], ..." Descr="Returns an array with active SQFs." Syntax="diag_activeSQFScripts">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_activeSQSScripts" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [[name, fileName, isRunning, currentLine],..." Descr="Returns array with active SQSs." Syntax="diag_activeSQSScripts">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_activeScripts" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]" Syntax="diag_activeScripts">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_allMissionEventHandlers" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [&quot;EH1name&quot;, EH1count, ..." Descr="Returns an array with all mission event handlers." Syntax="diag_allMissionEventHandlers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_captureFrame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is capture" Syntax="diag_captureFrame frame">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="frame" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_captureFrameToFile" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is capture" Syntax="diag_captureFrameToFile frame">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="frame" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_captureSlowFrame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Opens &quot;capture frame&quot; dialog if current frame exceeds set threshold in seconds." Syntax="diag_captureSlowFrame [section, threshold]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="section" DataType="String"/>
        <ParamInfo Name="threshold" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_codePerformance" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [duration, cycles], where:duration: Number - average duration of" Descr="Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as " Syntax="diag_codePerformance [code, arguments, cycles]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
        <ParamInfo Name="arguments" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="cycles" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_deltaTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the duration of the previous frame in seconds" Syntax="diag_deltaTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_drawMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates specific debug visualization." Syntax="diag_drawMode type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_dynamicSimulationEnd" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Ends dynamic simulation stats gathering and writes it into given file." Syntax="diag_dynamicSimulationEnd file">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="file" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_enable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Used to enable/disabled various diagnostics." Syntax="diag_mode diag_enable state">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="diag_mode" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_enabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when enabled, false when disabled" Descr="Checks whether specific diagnostic mode is activated." Syntax="diag_enabled diag_mode">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="diag_mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_exportTerrainSVG" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="🏗This article is a work in progress!Like the old TOPOGRAPHY cheat code, exports terrain, but in modern SVG Format instead of the proprietary EMF form" Syntax="diag_exportTerrainSVG [filePath, drawLocationNames, drawGrid, drawCountlines, drawTreeObjects, drawMountainHeightpoints, simpleRoads]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="filePath" DataType="String"/>
        <ParamInfo Name="drawLocationNames" DataType="Boolean"/>
        <ParamInfo Name="drawGrid" DataType="Boolean"/>
        <ParamInfo Name="drawCountlines" DataType="Boolean"/>
        <ParamInfo Name="drawTreeObjects" DataType="Boolean"/>
        <ParamInfo Name="drawMountainHeightpoints" DataType="Boolean"/>
        <ParamInfo Name="simpleRoads" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_fps" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns average framerate calculated over last 16 frames." Syntax="diag_fps">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_fpsMin" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns minimal framerate. Calculated from the longest frame over last 16 frames." Syntax="diag_fpsMin">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_frameNo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns number of frame currently displayed." Syntax="diag_frameNo">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_lightNewLoad" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Allows loading of lightning config during the gameplay (effectively changing the current scene lightning)." Syntax="diag_lightNewLoad path">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="path" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_list" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [listOfAllToggleDiagModes]" Descr="Returns an array of all diag modes available in the game." Syntax="diag_list name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_log" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Dumps the argument's value to the report file. Each call creates a new line in the file." Syntax="diag_log output">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="output" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_logSlowFrame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Log all frames, where section takes longer than the threshold (in seconds). Note: Only available in specific builds." Syntax="diag_logSlowFrame [section, threshold]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="section" DataType="String"/>
        <ParamInfo Name="threshold" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_mergeConfigFile" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adjust configs on-the-fly without the need of restarting the game (by merging the given config file into the main config in memory)." Syntax="diag_mergeConfigFile path">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_recordTurretLimits" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Start recording tool for creating turret aiming limits." Syntax="diag_recordTurretLimits section">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="section" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_resetShapes" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reload models on-the-fly without the need of restarting the game." Syntax="diag_resetShapes">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_scope" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns script scope depth. When script is directly executed by the engine or a new script is added to the scheduler, the scope depth is 0." Syntax="diag_scope">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_setLightNew" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Overrides currently used scene lightning. The operand is config that is placed as a string (not file)." Syntax="diag_setLightNew config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="config" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="diag_tickTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Real time spent from the start of the game. Expressed in fractions of second. Resolution of 1 tick is 1 ms." Syntax="diag_tickTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diag_toggle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Used to enable/disabled various diagnostics." Syntax="diag_toggle diag_mode">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="diag_mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dialog" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  true if a dialog is open, false if not" Descr="Tests whether any user dialog is open." Syntax=" dialog">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diaryRecordNull" ReturnType="Any" ReturnName="result" ReturnDescr="Diary Record" Descr="isNull diaryRecordNull; // truediaryRecordNull isEqualTo diaryRecordNull; // true" Syntax="diaryRecordNull">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="diarySubjectExists" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given subject is present in the diary of given person." Syntax="person diarySubjectExists name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="didJIP" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the current client Joined In Progress." Syntax="didJIP">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="didJIPOwner" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the current owner of supplied Object Joined In Progress. Server execution only. On clients returns false." Syntax="didJIPOwner object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="difficulty" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns high-level selected difficulty mode." Syntax="difficulty">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="difficultyEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="This command is deprecated since Arma 3 1.58. Since this version it always returns false. Use difficultyOption instead." Syntax="difficultyEnabled flagName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="flagName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="difficultyEnabledRTD" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if rotorlib simulation is enabled." Syntax="difficultyEnabledRTD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="difficultyOption" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Checks specific difficulty settings of the current user." Syntax="difficultyOption optionName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="optionName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="directSay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends given audio message to the direct channel." Syntax="unit directSay radioName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="direction" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Direction in degrees, range 0 to 360" Descr="Returns the direction an object or a location is facing (differs from getDir in that this also works with locations)." Syntax="direction object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="direction" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Direction in degrees, range 0 to 360" Descr="Returns the direction an object or a location is facing (differs from getDir in that this also works with locations)." Syntax="direction object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableAI" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable parts of the AI behaviour to get a better control over the actions of a unit. Must be executed where AI unit is local." Syntax="unitName disableAI section">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="section" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableCollisionWith" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable collision between vehicles. This commmand doesn't disable collision between PhysX objects." Syntax="object disableCollisionWith object">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableConversation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable the ability to talk to other people." Syntax="unitName disableConversation disable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="disable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableDebriefingStats" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable debrifing score table." Syntax="disableDebriefingStats">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="disableMapIndicators" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT." Syntax="disableMapIndicators [disableFriendly,disableEnemy,disableMines,disablePing]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="disableFriendly" DataType="Boolean"/>
        <ParamInfo Name="disableEnemy" DataType="Boolean"/>
        <ParamInfo Name="disableMines" DataType="Boolean"/>
        <ParamInfo Name="disablePing" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableNVGEquipment" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment." Syntax="vehicle disableNVGEquipment state">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableRemoteSensors" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities." Syntax="disableRemoteSensors state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableSerialization" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable saving of script containing this command. After this script can work with the data types which do not support serialization (UI types)." Syntax="disableSerialization">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="disableTIEquipment" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disables TI (Thermal Imaging) equipment for given vehicle." Syntax="vehicle disableTIEquipment state">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableUAVConnectability" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disables unit's AV terminal(s) connecting to UAV." Syntax="object disableUAVConnectability [uav, checkAllItems]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Any"/>
        <ParamInfo Name="checkAllItems" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="disableUserInput" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable and enable the keyboard and mouse input, usually used during cutscenes." Syntax="disableUserInput state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="displayAddEventHandler" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed." Syntax="display displayAddEventHandler [eventName, code]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="eventName" DataType="String"/>
        <ParamInfo Name="code" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="displayCtrl" ReturnType="Control" ReturnName="result" ReturnDescr="Control" Descr="Return child control with specified idc." Syntax="display displayCtrl idc">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="displayParent" ReturnType="Display" ReturnName="result" ReturnDescr="Display" Descr="Returns parent display of the given display." Syntax="displayParent display">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="displayRemoveAllEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all even handlers from the given display." Syntax="display displayRemoveAllEventHandlers eventName">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="eventName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="displayRemoveEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove a given event handler from the given display." Syntax="display displayRemoveEventHandler [handler name,id]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handlername" DataType="Handle"/>
        <ParamInfo Name="id" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="displaySetEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets given event handler of given display.The return code of the provided function should indicate whether this event was handled correctly." Syntax="display displaySetEventHandler [handlerName, function]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handlerName" DataType="String"/>
        <ParamInfo Name="function" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dissolveTeam" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Dissolves the given team. All members become members of the main team. Possible team values are: &quot;RED&quot;, &quot;GREEN&quot;, &quot;BLUE&quot; or &quot;YELLOW&quot;." Syntax="dissolveTeam teamColor">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="teamColor" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="param1 distance param2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="param1 distance param2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="param1 distance param2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="param1 distance param2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="location1 distance location2">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location1" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location2" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="location1 distance location2">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location1" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="location2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="location1 distance location2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="location1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location2" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a distance in meters between Objects, Positions or Locations." Syntax="location1 distance location2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="location1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="location2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance2D" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position." Syntax="param1 distance2D param2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance2D" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position." Syntax="param1 distance2D param2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance2D" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position." Syntax="param1 distance2D param2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distance2D" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  Distance in meters or 1e10 if distance cannot be calculated" Descr="Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position." Syntax="param1 distance2D param2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distanceSqr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number Distance in meters or 1e10 if distance cannot be calculated" Descr="Computes the squared distance between two objects or positions." Syntax="var1 distanceSqr var2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="var1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="var2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distanceSqr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number Distance in meters or 1e10 if distance cannot be calculated" Descr="Computes the squared distance between two objects or positions." Syntax="var1 distanceSqr var2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="var1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="var2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distanceSqr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number Distance in meters or 1e10 if distance cannot be calculated" Descr="Computes the squared distance between two objects or positions." Syntax="var1 distanceSqr var2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="var1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="var2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distanceSqr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number Distance in meters or 1e10 if distance cannot be calculated" Descr="Computes the squared distance between two objects or positions." Syntax="var1 distanceSqr var2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="var1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="var2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="distributionRegion" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the numerical index for the distribution region of this copy of ArmA." Syntax="distributionRegion">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="do3DENAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Performs given Eden Editor action.See the list of all actions." Syntax="do3DENAction action">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doArtilleryFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit to reload defined magazine commence fire burst on the given position (silently)." Syntax="unit doArtilleryFire [position, type, rounds]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="rounds" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doFSM" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit to process command defined by FSM file (silently)." Syntax="unit doFSM [fsmName, position, target]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fsmName" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doFSM" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit to process command defined by FSM file (silently)." Syntax="unit doFSM [fsmName, position, target]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fsmName" DataType="String"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to fire on the given target (without radio messages).The target is set with doTarget or commandTarget." Syntax="unitName doFire target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to fire on the given target (without radio messages).The target is set with doTarget or commandTarget." Syntax="unitName doFire target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doFollow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages)." Syntax="unitName doFollow unitName2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doFollow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages)." Syntax="unitName doFollow unitName2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doGetOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit or units to get out from the vehicle (silently)." Syntax="doGetOut units">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doGetOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Orders a unit or units to get out from the vehicle (silently)." Syntax="doGetOut units">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doMove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to move to the given position (without radio messages)." Syntax="unit(s) doMove position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doMove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to move to the given position (without radio messages)." Syntax="unit(s) doMove position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doStop" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation." Syntax="doStop unit(s)">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doStop" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation." Syntax="doStop unit(s)">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (without radio messages)." Syntax="unit doSuppressiveFire target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (without radio messages)." Syntax="unit doSuppressiveFire target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (without radio messages)." Syntax="unit doSuppressiveFire target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doSuppressiveFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit to suppress a given position or target (without radio messages)." Syntax="unit doSuppressiveFire target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to target the given target (without radio messages)." Syntax="unit doTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to target the given target (without radio messages)." Syntax="unit doTarget target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to watch the given position or target (without radio messages)." Syntax="unit(s) doWatch position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to watch the given position or target (without radio messages)." Syntax="unit(s) doWatch position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to watch the given position or target (without radio messages)." Syntax="unit(s) doWatch target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order the given unit(s) to watch the given position or target (without radio messages)." Syntax="unit(s) doWatch target">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="doorPhase" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return animation phase of door on vehicle." Syntax="object doorPhase door">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="door" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawArrow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draws a single line arrow on the map." Syntax="map drawArrow [from, to, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Any"/>
        <ParamInfo Name="to" DataType="Any"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawEllipse" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draws an ellipse on the map. Just like with marker or trigger area, negative a and b will result in hexagon." Syntax="map drawEllipse [c, a, b, angle, color, fill]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="c" DataType="Any"/>
        <ParamInfo Name="a" DataType="Scalar"/>
        <ParamInfo Name="b" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
        <ParamInfo Name="fill" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawIcon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draw an icon on the map. The command needs to be called every frame, preferably with &quot;Draw&quot; control event handler ctrlAddEventHandler." Syntax="map drawIcon [texture, color, position, width, height, angle, text, shadow, textSize, font, align]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="texture" DataType="String"/>
        <ParamInfo Name="color" DataType="Array"/>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="width" DataType="Scalar"/>
        <ParamInfo Name="height" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="text" DataType="String" IsOptional="True"/>
        <ParamInfo Name="shadow" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="textSize" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="font" DataType="String" IsOptional="True"/>
        <ParamInfo Name="align" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawIcon3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draws an ingame icon at a given position. Command has to be executed each frame." Syntax="drawIcon3D [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="texture" DataType="String"/>
        <ParamInfo Name="color" DataType="Array"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="width" DataType="Scalar"/>
        <ParamInfo Name="height" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="text" DataType="String" IsOptional="True"/>
        <ParamInfo Name="shadow" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="textSize" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="font" DataType="String" IsOptional="True"/>
        <ParamInfo Name="textAlign" DataType="String" IsOptional="True"/>
        <ParamInfo Name="drawSideArrows" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawLine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draw a line on the map." Syntax="map drawLine [position1, position2, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position1" DataType="Any"/>
        <ParamInfo Name="position2" DataType="Any"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawLine3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler &quot;Draw3D&quot;." Syntax="drawLine3D [start, end, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="start" DataType="Array"/>
        <ParamInfo Name="end" DataType="Array"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawLink" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW." Syntax="map drawLink [from,to,param type,line type,color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Any"/>
        <ParamInfo Name="to" DataType="Any"/>
        <ParamInfo Name="paramtype" DataType="Any"/>
        <ParamInfo Name="linetype" DataType="Any"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawLocation" ReturnType="Any" ReturnName="result" ReturnDescr="Unknown" Descr="Unknown effect." Syntax="control drawLocation location">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawPolygon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points." Syntax="map drawPolygon [polygon, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="polygon" DataType="Array"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawRectangle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Draws a rectangle on the map." Syntax="map drawRectangle [c, a, b, angle, color, fill]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="c" DataType="Any"/>
        <ParamInfo Name="a" DataType="Scalar"/>
        <ParamInfo Name="b" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
        <ParamInfo Name="fill" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drawTriangle" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Draws a single triangle or multiple triangles on the map." Syntax="map drawTriangle [vertices, color, fill]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vertices" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
        <ParamInfo Name="fill" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="driver" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object -  The unit sitting in the driver place is returned." Descr="Returns the driver of a vehicle." Syntax=" driver vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="drop" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a particle effect.This command is used to create smoke, fire and similar effects." Syntax="drop parameters">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="parameters" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dynamicSimulationDistance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - activation distance" Descr="A getter for setDynamicSimulationDistance" Syntax="dynamicSimulationDistance category">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="category" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dynamicSimulationDistanceCoef" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="A getter for setDynamicSimulationDistanceCoef" Syntax="dynamicSimulationDistanceCoef class">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dynamicSimulationEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="A getter for enableDynamicSimulation" Syntax="dynamicSimulationEnabled object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dynamicSimulationEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="A getter for enableDynamicSimulation" Syntax="dynamicSimulationEnabled object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="dynamicSimulationSystemEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="A getter for enableDynamicSimulationSystem" Syntax="dynamicSimulationSystemEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="echo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends any text into the debugger console or the logfile. Present in internal version only, not working in the retail version." Syntax="echo text">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="edit3DENMissionAttributes" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Open a window with scenario attribute in given section." Syntax="edit3DENMissionAttributes section">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="section" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="editObject" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Show the edit object dialog for the given object." Syntax="map editObject object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="editorSetEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets given event handler of given editor." Syntax="map editorSetEventHandler [handler name,function]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handlername" DataType="Handle"/>
        <ParamInfo Name="function" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="effectiveCommander" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object - commander unit" Descr="Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to." Syntax="effectiveCommander vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="elevatePeriscope" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Elevates periscope of a vehicle." Syntax="vehicle elevatePeriscope [turret, elevation, speed, blockuser]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turret" DataType="Array"/>
        <ParamInfo Name="elevation" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="blockuser" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="emptyPositions" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the number of given positions in the vehicle." Syntax="vehicle emptyPositions  position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="position" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAI" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables parts of the AI behavior that was disabled by disableAI." Syntax="unit enableAI skilltype">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="skilltype" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAIFeature" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable given AI feature. Feature may be one of:&quot;AwareFormationSoft&quot;, &quot;CombatFormationSoft&quot;." Syntax="feature enableAIFeature enable">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="feature" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAIFeature" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable given AI feature. Feature may be one of:&quot;AwareFormationSoft&quot;, &quot;CombatFormationSoft&quot;." Syntax="unit enableAIFeature [feature, enable]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="feature" DataType="String"/>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAimPrecision" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set whether animation's aim precision affects weapon sway." Syntax="unit enableAimPrecision enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAttack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set if leader can issue attack commands to the soldiers in his group." Syntax="group enableAttack enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAttack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set if leader can issue attack commands to the soldiers in his group." Syntax="group enableAttack enable">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAudioFeature" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - Previous state" Descr="Enable/disable an audio feature, features are: &quot;lowpass&quot;, &quot;building_interior&quot;." Syntax="enableAudioFeature [feature, enable]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="feature" DataType="String"/>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAutoStartUpRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Toggle availability of the automated helicopter start-up and shutdown sequences." Syntax="helicopterRTD enableAutoStartUpRTD enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableAutoTrimRTD" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Toggle auto-trim for RTD helicopters." Syntax="helicopterRTD enableAutoTrimRTD enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableCamShake" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately." Syntax="enableCamShake value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableCaustics" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable caustics drawing." Syntax="enableCaustics bool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableChannel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel." Syntax="channel enableChannel enable">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="channel" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableChannel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel." Syntax="channel enableChannel [chat, VoN]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="channel" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="chat" DataType="Boolean"/>
        <ParamInfo Name="VoN" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableCollisionWith" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable collision between vehicles." Syntax="vehicle enableCollisionWith vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableCopilot" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables copilot actions." Syntax="vehicle enableCopilot enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableDebriefingStats" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="enable debrifing score table." Syntax="enableDebriefingStats [left, top, width, height]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="left" DataType="Scalar"/>
        <ParamInfo Name="top" DataType="Scalar"/>
        <ParamInfo Name="width" DataType="Scalar"/>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableDiagLegend" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable or disable the legend for diagnostics." Syntax="enableDiagLegend Bool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="Bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableDynamicSimulation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables Arma_3_Dynamic_Simulation for given non AI object" Syntax="object enableDynamicSimulation enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableDynamicSimulation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables Arma_3_Dynamic_Simulation for given non AI object" Syntax="object enableDynamicSimulation enable">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableDynamicSimulationSystem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables the whole Arma_3_Dynamic_Simulation system" Syntax="enableDynamicSimulationSystem enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableEndDialog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs." Syntax="enableEndDialog">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="enableEngineArtillery" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire." Syntax="enableEngineArtillery enabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enabled" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableEnvironment" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable environmental effects (ambient life + sound)." Syntax="enableEnvironment enabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enabled" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableEnvironment" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable environmental effects (ambient life + sound)." Syntax="enableEnvironment [ambientLife, ambientSound]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="ambientLife" DataType="Boolean"/>
        <ParamInfo Name="ambientSound" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableFatigue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/Disables the person's fatigue." Syntax="unit enableFatigue enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableGunLights" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets AI group option how to use gun lights." Syntax="group enableGunLights mode">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableGunLights" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets AI group option how to use gun lights." Syntax="group enableGunLights mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableIRLasers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allows the AI to use IR lasers" Syntax="unitOrGroup enableIRLasers value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitOrGroup" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableIRLasers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Allows the AI to use IR lasers" Syntax="unitOrGroup enableIRLasers value">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="unitOrGroup" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableInfoPanelComponent" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if component was successfully enabled on the panel, false otherwi" Descr="Controls availability of component to given object info panel." Syntax="unit enableInfoPanelComponent [panelID, componentClassOrType, enable]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="panelID" DataType="String"/>
        <ParamInfo Name="componentClassOrType" DataType="String"/>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableInfoPanelComponent" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if component was successfully enabled on the panel, false otherwi" Descr="Controls availability of component to given object info panel." Syntax="[unit, turretPath] enableInfoPanelComponent [panelID, componentClassOrType, enable]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="panelID" DataType="String"/>
        <ParamInfo Name="componentClassOrType" DataType="String"/>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableMimics" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/disables mimics on a given unit." Syntax="unit enableMimics enabled">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enabled" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enablePersonTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command." Syntax="vehicle enablePersonTurret [turretPath, enable]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes." Syntax="enableRadio state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableReload" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable reload when magazine is empty." Syntax="object enableReload enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableRopeAttach" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable ability to attach or be attached to ropes for given vehicle" Syntax="entity enableRopeAttach enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableSatNormalOnDetail" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/Disables satellite normal map od detail maps." Syntax="enableSatNormalOnDetail state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableSaving" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable saving of the game.When disabled, the autosave is created (if not forbidden by save == false)." Syntax="enableSaving enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableSaving" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable saving of the game.When disabled, the autosave is created (if not forbidden by save == false)." Syntax="enableSaving [enable, save]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
        <ParamInfo Name="save" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableSentences" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations." Syntax="enableSentences enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableSimulation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable simulation for given entity." Syntax="entity enableSimulation state">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableSimulationGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="MP command. Enable or disable simulation for given entity, globally. Call this only from the server." Syntax="entity enableSimulationGlobal enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableStamina" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable stamina system" Syntax="unit enableStamina enabled">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enabled" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableStressDamage" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Toggles stress damage. The same as toggling it in the game settings." Syntax="enableStressDamage state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableTeamSwitch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable Team Switch. The default setting is enabled." Syntax="enableTeamSwitch enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableUAVConnectability" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables unit's AV terminal(s) connecting to UAV." Syntax="object enableUAVConnectability [uav, checkAllItems]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Any"/>
        <ParamInfo Name="checkAllItems" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableUAVWaypoints" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/disables the option for player to set waypoints for UAV in AV terminal." Syntax="uav enableUAVWaypoints enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableVehicleCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable/disable option to transport other vehicles (if configured) or be transported." Syntax="vehicle enableVehicleCargo enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableVehicleSensor" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Enable/disable given sensor" Syntax="vehicle enableVehicleSensor [componentName, state]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="componentName" DataType="String"/>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableWeaponDisassembly" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly." Syntax="enableWeaponDisassembly enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enableWeaponDisassembly" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly." Syntax="entity enableWeaponDisassembly enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="endLoadingScreen" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Finishes loading screen started by startLoadingScreen." Syntax="endLoadingScreen">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="endMission" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Finish the mission.The end type can be: &quot;CONTINUE&quot; &quot;KILLED&quot; &quot;LOSER&quot; &quot;END1&quot; &quot;END2&quot; &quot;END3&quot; &quot;END4&quot; &quot;END5&quot; &quot;END6&quot;Mission saves are deleted." Syntax="endMission endType">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="endType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="endl" ReturnType="String" ReturnName="result" ReturnDescr="String - line break" Descr="Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl (line end)." Syntax="endl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="engineOn" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local." Syntax="vehicle engineOn state">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enginesIsOnRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  [Boolean value for each engine]" Descr="Returns which engines are producing some work." Syntax="enginesIsOnRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enginesPowerRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Watts produced by the engines, to format [engine1, engine2]." Descr="Returns power produced by engines in Watts." Syntax="enginesPowerRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enginesRpmRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns all engines RPM" Syntax="enginesRpmRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="enginesTorqueRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Torque produced by engines in N·m (Newton*meter)" Syntax="enginesTorqueRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="entities" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored." Syntax="entities type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="entities" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored." Syntax="entities [typesInclude, typesExclude, includeCrews, excludeDead]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="typesInclude" DataType="Array"/>
        <ParamInfo Name="typesExclude" DataType="Array"/>
        <ParamInfo Name="includeCrews" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="excludeDead" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="environmentEnabled" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [ambientLife, ambientSound] where:ambientLife: BooleanambientS" Descr="Returns status of enableEnvironment command" Syntax="environmentEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="estimatedEndServerTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - seconds left" Descr="Estimated end of MP game in seconds converted to serverTime." Syntax="estimatedEndServerTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="estimatedTimeLeft" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the estimated time left in the game." Syntax="estimatedTimeLeft seconds">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="seconds" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="evalObjectArgument" ReturnType="Any" ReturnName="result" ReturnDescr="Any Value" Descr="Return argument in mission editor of a given object." Syntax="map evalObjectArgument [object, argument]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="argument" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="everyBackpack" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground." Syntax="everyBackpack box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="everyContainer" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle." Syntax="everyContainer object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="exec" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Execute a script using (the deprecated but still available) .sqs syntax." Syntax="argument exec script">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="argument" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="script" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="execEditorScript" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Execute an editor script for the specified object." Syntax="map execEditorScript [object,script]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="script" DataType="Handle"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="execFSM" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - FSM handle" Descr="Executes scripted FSM and returns the FSM handle or 0 when failed." Syntax="arguments execFSM fsmFilePath">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="arguments" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fsmFilePath" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="execFSM" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - FSM handle" Descr="Executes scripted FSM and returns the FSM handle or 0 when failed." Syntax="execFSM fsmFilePath">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fsmFilePath" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="execVM" ReturnType="Handle" ReturnName="result" ReturnDescr="Script - script handle, can be used to determine (via scriptDone (also via isNul" Descr="Compiles and adds SQF Script to the scheduler queue and returns script handle." Syntax="arguments execVM filename">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="arguments" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="execVM" ReturnType="Handle" ReturnName="result" ReturnDescr="Script - script handle, can be used to determine (via scriptDone (also via isNul" Descr="Compiles and adds SQF Script to the scheduler queue and returns script handle." Syntax="execVM filename">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="exit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Stops the execution of a  SQS script.It's ignored in  SQF Scripts." Syntax="exit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="exp" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Let x be a number, then exp (x) is equal to e to the power of x (or e^x)" Syntax=" exp x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="expectedDestination" ReturnType="Array" ReturnName="result" ReturnDescr="Array in form:0: Position1: planningMode2: forceReplan" Descr="Return expected destination of unit as an array with format: [ Position, planningMode, forceReplan]." Syntax=" expectedDestination person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="exportJIPMessages" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Export list of JIP to a file." Syntax="exportJIPMessages fileName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fileName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="eyeDirection" ReturnType="Array" ReturnName="result" ReturnDescr="Array - 3D Vector" Descr="Returns the direction object is watching (eyes, or a vehicle primary observer)." Syntax="eyeDirection unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="eyePos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionASL" Descr="Returns the object's eyes / main turret position." Syntax="eyePos object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="face" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the face of a person." Syntax="face person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="faction" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets unit faction. Factions are defined under CfgFactionClasses. If the given faction is not defined, the command returns empty string." Syntax="faction unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fadeMusic" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the music volume smoothly within the given time." Syntax="time fadeMusic volume">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="volume" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fadeRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0." Syntax="time fadeRadio volume">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="volume" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fadeSound" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the sound volume smoothly within the given time." Syntax="time fadeSound volume">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="volume" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fadeSpeech" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Cause a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master is 1.0." Syntax="time fadeSpeech volume">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="volume" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="failMission" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby." Syntax="failMission endtype">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="endtype" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fillWeaponsFromPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Adds magazines from the campaign pool to the given unit, depending on his weapons." Syntax="fillWeaponsFromPool unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="find" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - 0 based position of the first array element that matches x, -1 if not f" Descr="Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found." Syntax="array find element">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="element" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="find" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - 0 based position of the first sequence of characters that matches subst" Descr="Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found." Syntax="string find substring">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="substring" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findCover" ReturnType="Object" ReturnName="result" ReturnDescr="Object - always objNull" Descr="Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional." Syntax="object findCover [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="hidePosition" DataType="Array"/>
        <ParamInfo Name="maxDist" DataType="Scalar"/>
        <ParamInfo Name="minDist" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="visibilityPosition" DataType="Array"/>
        <ParamInfo Name="ignoreObject" DataType="Object" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findDisplay" ReturnType="Display" ReturnName="result" ReturnDescr="Display" Descr="Find display by its IDD (which is defined in the description.ext or config)." Syntax="findDisplay idd">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idd" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findEditorObject" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return object that matches the provided reference." Syntax="map findEditorObject value">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findEmptyPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - A suitable empty position in format Position3D or [] if not found" Descr="Searches for an empty position around specified position." Syntax="center findEmptyPosition [radius, maxDistance, vehicleType]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="maxDistance" DataType="Scalar"/>
        <ParamInfo Name="vehicleType" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findEmptyPositionReady" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when ready" Descr="Check if findEmptyPosition can be called without waiting for files." Syntax="center findEmptyPositionReady [radius, maxDistance]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="maxDistance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findIf" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Zero-based position of the first array element for which the code evalu" Descr="Searches for an element within array for which the code evaluates to true. Returns the 0 based index on success or -1 if not found." Syntax="array findIf code">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findNearestEnemy" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Finds the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies." Syntax="object findNearestEnemy position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="findNearestEnemy" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Finds the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies." Syntax="object findNearestEnemy position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="finishMissionInit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Finish world initialization before mission is launched." Syntax="finishMissionInit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="finite" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="True, if number is finite (not infinite and a valid number)" Syntax="finite number">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="number" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces a unit to fire the given weapon." Syntax="unit fire muzzle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="muzzle" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces a unit to fire the given weapon." Syntax="unit fire [muzzle, mode, magazine]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="muzzle" DataType="String"/>
        <ParamInfo Name="mode" DataType="String"/>
        <ParamInfo Name="magazine" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fireAtTarget" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if fired, false if not" Descr="Remotely forces a unit to fire the given weapon." Syntax="sourceVehicle fireAtTarget [targetVehicle, weaponMuzzleName]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="sourceVehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="targetVehicle" DataType="Object"/>
        <ParamInfo Name="weaponMuzzleName" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="firstBackpack" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the first stored backpack." Syntax="firstBackpack box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flag" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object - Flag pole object the flag belongs to." Descr="Returns the original flag pole of the flag the unit is carrying." Syntax="flag unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flagAnimationPhase" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - 0..." Descr="Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole." Syntax="flagAnimationPhase flag">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flagOwner" ReturnType="Object" ReturnName="result" ReturnDescr="Object -  The person or vehicle that owns the flag is returned." Descr="Returns the global owner of a flag. A getter for setFlagOwner." Syntax="flagOwner flag">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flagSide" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Returns Side of the local instance of the flag. A getter for setFlagSide." Syntax="flagSide flag">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flagTexture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns texture of the local instance of the flag. A getter for setFlagTexture." Syntax="flagTexture flagCarrier">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flagCarrier" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fleeing" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - Returns true if a unit is fleeing, false if not." Descr="Checks if a unit is fleeing." Syntax=" fleeing unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="floor" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the next lowest integer in relation to x." Syntax=" floor x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flyInHeight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the flying altitude for aircraft relatively to the ground surface." Syntax="aircraft flyInHeight altitude">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="aircraft" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="altitude" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="flyInHeightASL" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the minimal ASL height. Final height is max(flyInHeight, flyInHeightASL)." Syntax="aircraft flyInHeightASL [standardAltitude, combatAltitude, stealthAltitude]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="aircraft" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="standardAltitude" DataType="Scalar"/>
        <ParamInfo Name="combatAltitude" DataType="Scalar"/>
        <ParamInfo Name="stealthAltitude" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fog" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the current value of the fog in range 0...1." Syntax="fog">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="fogForecast" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog." Syntax="fogForecast">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="fogParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format setFog: [fogValue, fogDecay, fogBase]" Descr="Returns extended params for the fog" Syntax="fogParams">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="forEachMember" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Executes the given command recursively for both teams and agents that are members of the given team. For teams only use forEachMemberTeam." Syntax="command forEachMember team">
    <PreArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forEachMemberAgent" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Executes the given command recursively for each agent that is a member of the given team. For just teams use forEachMemberTeam." Syntax="command forEachMemberAgent team">
    <PreArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forEachMemberTeam" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Executes the given command recursively for each team that is a member of the given team. For just agents use forEachMemberAgent." Syntax="command forEachMemberTeam team">
    <PreArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceAddUniform" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create a new uniform and hard link it into slot (without any restrictions)." Syntax="unit forceAddUniform type">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceAtPositionRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Force index" Descr="Adds force generator to world.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled." Syntax="forceAtPositionRTD position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceEnd" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enforces mission termination. Can be used in an &quot;END&quot; trigger to force end conditions in the editor." Syntax="forceEnd">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="forceFlagTexture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If &quot;&quot; is used as texture, the texture is removed." Syntax="object forceFlagTexture texture">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="texture" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceFollowRoad" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Forces the vehicle to stay on road." Syntax="vehicle forceFollowRoad state">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceGeneratorRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Force index" Descr="Adds force generator to world.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled." Syntax="forceGeneratorRTD index">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceMap" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Opens non-interactive main map in background that overrides user screen. The user is able to fire but cannot see the world just the map." Syntax="forceMap show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceRespawn" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces unit to respawn." Syntax="forceRespawn unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceSpeed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed)." Syntax="object forceSpeed speed">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="speed" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceWalk" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces unit to walk even if run or sprint is selected." Syntax="unit forceWalk value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceWeaponFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The unit will be forced to fire weapon from the given muzzle." Syntax="unit forceWeaponFire [muzzle, firemode]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="muzzle" DataType="String"/>
        <ParamInfo Name="firemode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forceWeatherChange" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag)." Syntax="forceWeatherChange">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="forcedMap" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [forceMapForced, openMapForced] where:forceMapForced: Boolean" Descr="Returns if map was forced by using forceMap command or openMap command with force option" Syntax="forcedMap">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="forgetTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Resets info group has about target" Syntax="group forgetTarget target">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="forgetTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Resets info group has about target" Syntax="group forgetTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formLeader" ReturnType="Object" ReturnName="Unit" ReturnDescr="Object -  the leader of the formation is returned." Descr="Returns the formation leader of a given unit." Syntax=" formLeader unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="format" ReturnType="String" ReturnName="result" ReturnDescr="String -  The full string (up to 8kb, see above) is returned." Descr="Composes a string containing other variables or other variable types.Converts any variable type to a string." Syntax="format [formatString, var1, var2 ...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="formatString" DataType="String"/>
        <ParamInfo Name="var1" DataType="Any"/>
        <ParamInfo Name="var2..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formatText" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Creates a structured text by replacing %1, %2, etc. in format with plain or structured texts given as arguments." Syntax="formatText [format, argument1, argument2, ...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="format" DataType="String"/>
        <ParamInfo Name="argument1" DataType="Any"/>
        <ParamInfo Name="argument2" DataType="Any"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formation" ReturnType="String" ReturnName="result" ReturnDescr="String -  returns either &quot;COLUMN&quot;, &quot;STAG COLUMN&quot;, &quot;WEDGE&quot;, &quot;ECH LEFT&quot;, &quot;ECH RIGH" Descr="Returns the current formation of a group." Syntax=" formation grp">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="grp" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formation" ReturnType="String" ReturnName="result" ReturnDescr="String -  returns either &quot;COLUMN&quot;, &quot;STAG COLUMN&quot;, &quot;WEDGE&quot;, &quot;ECH LEFT&quot;, &quot;ECH RIGH" Descr="Returns the current formation of a group." Syntax=" formation grp">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="grp" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formationDirection" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the direction in degrees of the 'unit' watching in formation." Syntax=" formationDirection unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formationLeader" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Return leader of the formation." Syntax=" formationLeader unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formationMembers" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return list of units (drivers) in the formation." Syntax=" formationMembers person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formationPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Position" Descr="Return position of unit in the formation" Syntax="formationPosition unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="formationTask" ReturnType="String" ReturnName="result" ReturnDescr="String: (EXCLUDED, MOVE, COVER, LEADER)" Descr="Return the current task of the unit in the formation." Syntax=" formationTask person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="freeLook" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if freelook is active." Syntax="freeLook">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="fromEditor" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return if given team was inserted directly from mission editor." Syntax="fromEditor teamMember">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fuel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  The returned number is in range 0 (empty tank) to 1 (full tank)." Descr="Checks how much fuel is left in the gas tank of a vehicle." Syntax="fuel vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fullCrew" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [[&lt;Object&gt;unit,&lt;String&gt;role,&lt;Number&gt;cargoIndex  (see note in desc" Descr="Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well." Syntax="fullCrew vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="fullCrew" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [[&lt;Object&gt;unit,&lt;String&gt;role,&lt;Number&gt;cargoIndex (see note in descr" Descr="Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well." Syntax="fullCrew [vehicle, type, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="gearIDCAmmoCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns ammo count of assigned magazine." Syntax="gearIDCAmmoCount idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="gearSlotAmmoCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns ammo count of assigned magazine." Syntax="gearSlotAmmoCount control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="gearSlotData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns gear slot item name." Syntax="gearSlotData control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENActionState" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns state of given action in the Eden Editor.See the list of all actions." Syntax="get3DENActionState action">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Array" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Array" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Array" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Array" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Any" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Any" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Any" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENAttribute" ReturnType="Any" ReturnName="result" ReturnDescr="Array with Anything" Descr="Returns value of a given entity's attribute in Eden Editor." Syntax="entity get3DENAttribute attribute">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENCamera" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the camera Object used by the Eden Editor." Syntax="get3DENCamera">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="get3DENConnections" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format:[[type1,to1], [type2, to2], ..." Descr="Return all connections currently present on an entity." Syntax="get3DENConnections entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENConnections" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format:[[type1,to1], [type2, to2], ..." Descr="Return all connections currently present on an entity." Syntax="get3DENConnections entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENConnections" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format:[[type1,to1], [type2, to2], ..." Descr="Return all connections currently present on an entity." Syntax="get3DENConnections entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENConnections" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format:[[type1,to1], [type2, to2], ..." Descr="Return all connections currently present on an entity." Syntax="get3DENConnections entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntity" ReturnType="Object" ReturnName="result" ReturnDescr="Eden Entity (when the target is Eden Entity) or Number (when the target is a lay" Descr="Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead." Syntax="get3DENEntity id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntity" ReturnType="Group" ReturnName="result" ReturnDescr="Eden Entity (when the target is Eden Entity) or Number (when the target is a lay" Descr="Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead." Syntax="get3DENEntity id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntity" ReturnType="Array" ReturnName="result" ReturnDescr="Eden Entity (when the target is Eden Entity) or Number (when the target is a lay" Descr="Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead." Syntax="get3DENEntity id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntity" ReturnType="String" ReturnName="result" ReturnDescr="Eden Entity (when the target is Eden Entity) or Number (when the target is a lay" Descr="Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead." Syntax="get3DENEntity id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntity" ReturnType="Scalar" ReturnName="result" ReturnDescr="Eden Entity (when the target is Eden Entity) or Number (when the target is a lay" Descr="Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead." Syntax="get3DENEntity id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntityID" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Eden ID" Descr="Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario." Syntax="get3DENEntityID entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntityID" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Eden ID" Descr="Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario." Syntax="get3DENEntityID entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntityID" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Eden ID" Descr="Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario." Syntax="get3DENEntityID entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENEntityID" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Eden ID" Descr="Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario." Syntax="get3DENEntityID entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENGrid" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the grid increment for the given transformation type." Syntax="get3DENGrid type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENIconsVisible" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [showMap, showScene]showScene: Boolean - visibility in the scen" Descr="Get visibility state of Eden Editor icons." Syntax="get3DENIconsVisible">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="get3DENLayerEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Eden Entities" Descr="Return all entities and sub-layer in Eden Entity layer." Syntax="get3DENLayerEntities layerID">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENLinesVisible" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [showMap, showScene]showScene: Boolean - visibility in the scen" Descr="Get visibility state of Eden Editor lines." Syntax="get3DENLinesVisible">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="get3DENMissionAttribute" ReturnType="Any" ReturnName="result" ReturnDescr="Anything" Descr="Return value of scenario attribute. ! Attributes are available only within the Eden Editor workspace." Syntax="section get3DENMissionAttribute class">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="section" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="get3DENMouseOver" ReturnType="Array" ReturnName="Waypoint" ReturnDescr="Array in format: [type,Eden Entity], where type can be: &quot;Object&quot;, &quot;Group&quot;, &quot;Trig" Descr="Returns the Eden Entity the mouse is hovering over in Eden Editor." Syntax="get3DENMouseOver">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="get3DENSelected" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Eden Entities" Descr="Returns an array of all selected Eden Editor Entities, including groups, waypoints, and markers." Syntax="get3DENSelected type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAimingCoef" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Get current aiming coefficient (higher ~ less precise, default is 1)" Syntax="getAimingCoef unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAllEnvSoundControllers" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [[&quot;controllerA&quot;, valueA], [&quot;controllerB&quot;, valueB], ..." Descr="Returns an array containing the names and values of environmental variables that can be used in simple expressions when configuring sounds." Syntax="getAllEnvSoundControllers position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAllHitPointsDamage" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [] if entity is null or has no shape, otherwise [hitpointsNamesArray, se" Descr="Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values." Syntax="getAllHitPointsDamage entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAllOwnedMines" ReturnType="Array" ReturnName="result" ReturnDescr="Array of mine object" Descr="Gets all mine objects this unit has ownership over." Syntax="getAllOwnedMines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAllSoundControllers" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [[&quot;controllerA&quot;, valueA], [&quot;controllerB&quot;, valueB], ..." Descr="Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds." Syntax="getAllSoundControllers vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAllUnitTraits" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays of [String, String/Boolean] - to format [[&quot;traitName1&quot;,value1], " Descr="Returns unit traits, native or set by setUnitTrait." Syntax="getAllUnitTraits unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAmmoCargo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - ammo cargo value, -1 if ammo cargo is not supported, 0 if the vehicle i" Descr="Returns the amount of ammo resources in the cargo space of a rearm vehicle." Syntax="getAmmoCargo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAnimAimPrecision" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns aim precision for current animation" Syntax="getAnimAimPrecision unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAnimSpeedCoef" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Get coefficient for animation speed." Syntax="getAnimSpeedCoef unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getArray" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Extract array from config entry." Syntax=" getArray config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getArtilleryAmmo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Get list of all available magazines of artillery units on the list." Syntax="getArtilleryAmmo [unit1, unit2, unit3....]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit1" DataType="Object"/>
        <ParamInfo Name="unit2" DataType="Object"/>
        <ParamInfo Name="unit3...." DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getArtilleryComputerSettings" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns settings from artillery computer currently opened by player." Syntax="getArtilleryComputerSettings">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getArtilleryETA" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit." Syntax="unit getArtilleryETA [targetPosition, magazineType]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="targetPosition" DataType="Array"/>
        <ParamInfo Name="magazineType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAssetDLCInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array in format: [isDlc, isOwned, isInstalled, isAvailable, appID, DLCNa" Descr="Returns DLC information about given object or model." Syntax="getAssetDLCInfo asset">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="asset" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAssetDLCInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array in format: [isDlc, isOwned, isInstalled, isAvailable, appID, DLCNa" Descr="Returns DLC information about given object or model." Syntax="getAssetDLCInfo asset">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="asset" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAssetDLCInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array in format: [isDlc, isOwned, isInstalled, isAvailable, appID, DLCNa" Descr="Returns DLC information about given object or model." Syntax="getAssetDLCInfo [class, config]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="config" DataType="Config" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAssignedCuratorLogic" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns curator logic to which given player has access." Syntax="getAssignedCuratorLogic player">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="player" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAssignedCuratorUnit" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns unit assigned to curator logic." Syntax="getAssignedCuratorUnit curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAttackTarget" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the target given unit is engaging." Syntax="getAttackTarget unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getAudioOptionVolumes" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [effects, music, radio, von]" Descr="Returns profile audio volumes in format [effects, music, radio, von]." Syntax="getAudioOptionVolumes">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getBackpackCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays - Format [[&quot;5BackpacksType1&quot;, &quot;10BackpacksType2&quot;], [5, 10]]" Descr="Returns all backpack types and count from the cargo space" Syntax="getBackpackCargo object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getBleedingRemaining" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns how many seconds injured unit will continue leaving blood trail. If unit damage is &lt; 0." Syntax="getBleedingRemaining unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getBurningValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns amount of damage from fire." Syntax="getBurningValue unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCalculatePlayerVisibilityByFriendly" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - True visibility is calculated, false if not" Descr="Returns true if visibility of player by friendly units is calculated." Syntax="getCalculatePlayerVisibilityByFriendly">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getCameraViewDirection" ReturnType="Array" ReturnName="result" ReturnDescr="Array - 3D Vector" Descr="Returns the direction unit is looking in render time scope." Syntax="getCameraViewDirection unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCargoIndex" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo." Syntax="vehicle getCargoIndex unit">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCenterOfMass" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [x,y,z] offset relative to the model centre" Descr="Returns center of mass of a PhysX object." Syntax="getCenterOfMass object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getClientState" ReturnType="String" ReturnName="result" ReturnDescr="String - Client state (see table above)" Descr="Returns client state in network game. Works on both, client and dedicated server." Syntax="getClientState">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getClientStateNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Client state (see table above)" Descr="Returns client state in network game. Works on both, client and dedicated server." Syntax="getClientStateNumber">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getCompatiblePylonMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array of compatible pylon magazines" Syntax="vehicle getCompatiblePylonMagazines pylon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCompatiblePylonMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array of compatible pylon magazines" Syntax="vehicle getCompatiblePylonMagazines pylon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCompatiblePylonMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array of compatible pylon magazines" Syntax="vehicleClass getCompatiblePylonMagazines pylon">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="vehicleClass" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCompatiblePylonMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array of compatible pylon magazines" Syntax="vehicleClass getCompatiblePylonMagazines pylon">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="vehicleClass" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getConnectedUAV" ReturnType="Object" ReturnName="result" ReturnDescr="Object - the UAV. objNull if no UAV is connected." Descr="Returns UAV if unit has connection to some UAV." Syntax="getConnectedUAV unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getContainerMaxLoad" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - load value, -1 if not available." Descr="Returns max load value of given container. Currently works only with uniform, vest and backpack classes." Syntax="getContainerMaxLoad containerClass">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="containerClass" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCursorObjectParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [cursorObject, selections, distance]" Descr="Returns the object under cursor, named selection pointed at as well as distance to the object." Syntax="getCursorObjectParams">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getCustomAimCoef" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed." Syntax="getCustomAimCoef unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCustomSoundController" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current value set to the controller (see setCustomSoundController)" Syntax="getCustomSoundController [vehicle, controller]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="controller" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getCustomSoundControllerCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - number of custom controllers" Descr="Returns current number of custom sound controllers supported by the engine for the given vehicle (currently 32)" Syntax="getCustomSoundControllerCount vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDLCAssetsUsage" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of DLC usage informations, containing DLC items in format:[[name," Descr="Returns an array of the DLC usage times." Syntax="getDLCAssetsUsage">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getDLCAssetsUsageByName" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array in format: [sessionTime, totalTime]." Descr="Returns an array with the session and global time the asset has been used." Syntax="getDLCAssetsUsageByName assetName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="assetName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDLCUsageTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - DLC assets usage time in seconds" Descr="Returns total time the assets of the given DLC have been used. See Arma 3 DLCs Overview for a list of DLCs and ids." Syntax="getDLCUsageTime appId">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="appId" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDLCs" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of DLC numbers (see above)" Descr="Returns array of appIDs of DLCs." Syntax="getDLCs filter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="filter" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDammage" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the object damage in the range from 0 to 1. Alias of damage." Syntax="getDammage object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDescription" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings to format [unitClass, uniformName, vestName, backpackClass]" Descr="Returns the string representation of unit as an four slots array." Syntax="getDescription unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the object heading in the range from 0 to 360. Since Arma 3 v1.55." Syntax="getDir object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the object heading in the range from 0 to 360. Since Arma 3 v1.55." Syntax="pos1 getDir pos2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="pos2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the object heading in the range from 0 to 360. Since Arma 3 v1.55." Syntax="pos1 getDir pos2">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the object heading in the range from 0 to 360. Since Arma 3 v1.55." Syntax="pos1 getDir pos2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="pos2" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the object heading in the range from 0 to 360. Since Arma 3 v1.55." Syntax="pos1 getDir pos2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDirVisual" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns object's heading in the range from 0 to 360 in render time scope." Syntax="getDirVisual object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getDiverState" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when diving goggles are visible" Descr="Returns true when object is in diver state i.e. when unit would put diving goggles on." Syntax="getDiverState unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getEditorCamera" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Fetches a reference to the mission editor camera." Syntax="getEditorCamera map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getEditorMode" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the current mode of the editor." Syntax="getEditorMode map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getEditorObjectScope" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the editor object scope of the specified editor object." Syntax="map getEditorObjectScope object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getElevationOffset" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - elevation offset of the map" Descr="Returns the map elevation offset from [map]/config.cpp.Returns 0 if there's no elevationOffset defined in the config of the current world." Syntax="getElevationOffset">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getEnvSoundController" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns value of the specified controller." Syntax="position getEnvSoundController controller">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="controller" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getFSMVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything" Descr="Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command." Syntax="FSMhandle getFSMVariable name">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="FSMhandle" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getFSMVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything" Descr="Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command." Syntax="FSMhandle getFSMVariable [name, defaultValue]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="FSMhandle" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getFatigue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns fatigue of given unit." Syntax="getFatigue unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getFieldManualStartPage" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [starting topic, hint]" Descr="Returns array of the starting topic and hint the given field manual should display." Syntax="getFieldManualStartPage display">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="display" DataType="Display"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getForcedFlagTexture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="A getter for forceFlagTexture." Syntax="getForcedFlagTexture object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getFriend" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Decimal value between 0.0 to 1." Descr="Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly. See also Side relations." Syntax="side1 getFriend side2">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side1" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side2" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getFuelCargo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - fuel cargo value, -1 if fuel cargo is not supported, 0 if the vehicle i" Descr="Returns the fuel amount (between 0 and 1) in the cargo space of a refuelling vehicle." Syntax="getFuelCargo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getGraphValues" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Array of Numbers - to format [arrayOfYvalues, arrayOfXvalues]" Descr="Generate graph y - coordinates of all input values within specific x and y range 🏗This article is a work in progress!" Syntax="getGraphValues [[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset], x1, y1, x2, y2, ... xn, yn]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset]" DataType="Array"/>
        <ParamInfo Name="x1" DataType="Scalar"/>
        <ParamInfo Name="y1" DataType="Scalar"/>
        <ParamInfo Name="x2" DataType="Any"/>
        <ParamInfo Name="y2" DataType="Any"/>
        <ParamInfo Name="...xn" DataType="Any"/>
        <ParamInfo Name="yn" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getGroupIcon" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get group icon properties." Syntax="group getGroupIcon ID">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="ID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getGroupIconParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [color, text, scale, visibility, WPvisibility WPcolor], where:c" Descr="Returns group icons params." Syntax="getGroupIconParams group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getGroupIcons" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns all group icons. [id,icon,[offsetx,offsety],[..],.." Syntax="getGroupIcons group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getHideFrom" ReturnType="Array" ReturnName="result" ReturnDescr="Array - ASLToATL representation of the believed aimPos of the enemy object" Descr="Returns the Position where object believes the enemy to be." Syntax="object getHideFrom enemy">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="enemy" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getHit" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number (prior to Arma 3 v1.93." Descr="Returns selection damage. Same as getHitPointDamage only argument is selection part instead of hit point." Syntax="vehicle getHit selection">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="selection" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getHitIndex" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number (or, prior to Arma 3 v1.93." Descr="Return current level of damage for a specific Hit Point (specified by its hit part index)." Syntax="vehicle getHitIndex hitPartIndex">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="hitPartIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getHitPointDamage" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number (or, prior to Arma 3 v1.93." Descr="Return current level of damage for a specific Hit Point (specified by its config class)." Syntax="vehicle getHitPointDamage hitPointName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="hitPointName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getItemCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays - Format: [[&quot;5ItemsType1&quot;,&quot;10ItemsType2&quot;],[5,10]]" Descr="Returns all items names and count from ammo box (or any general weapon holder container)." Syntax="getItemCargo box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getLighting" ReturnType="Array" ReturnName="result" ReturnDescr="Array to format [ambientLightColor, ambientLightBrightness, lightDirection, star" Descr="Gets general environment's light settings." Syntax="getLighting">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getLightingAt" ReturnType="Array" ReturnName="result" ReturnDescr="Array to format [ambientLightColor, ambientLightBrightness, dynamicLightColor, d" Descr="Gets provided object's lighting information." Syntax="getLightingAt obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getLoadedModsInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays in format [modname, modDir, isDefault, isOfficial, origin, hash," Descr="Returns information about all loaded modifications." Syntax="getLoadedModsInfo">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getMagazineCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of arrays." Descr="Returns all magazines types and count from the cargo space" Syntax="getMagazineCargo object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMarkerColor" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns marker color for given marker. See setMarkerColor. Note: This function is identical to markerColor." Syntax="getMarkerColor markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMarkerPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,0]" Descr="Returns the position of a given marker. [x,y,z]Argument 3 (height above ground) is always zero." Syntax="getMarkerPos markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMarkerPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGL if preserveElevation is true or [x,y,0] if preserveEl" Descr="Returns the position of a given marker. [x,y,z]Argument 3 (height above ground) is always zero." Syntax="getMarkerPos [markerName, preserveElevation]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
        <ParamInfo Name="preserveElevation" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMarkerSize" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [a-axis, b-axis], where:a-axis: Number - 1/2 width of marker" Descr="Returns the size of a given marker." Syntax="getMarkerSize markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMarkerType" ReturnType="String" ReturnName="result" ReturnDescr="String. See cfgMarkers." Descr="Returns the type of a given marker. See cfgMarkers for a list of standard markers." Syntax="  getMarkerType markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMass" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns mass of a PhysX object." Syntax="getMass object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfig" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property." Syntax="getMissionConfig attribute">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfigValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number, String or Array, depending on the attribute value type." Descr="Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property." Syntax="getMissionConfigValue attribute">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfigValue" ReturnType="String" ReturnName="result" ReturnDescr="Number, String or Array, depending on the attribute value type." Descr="Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property." Syntax="getMissionConfigValue attribute">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfigValue" ReturnType="Array" ReturnName="result" ReturnDescr="Number, String or Array, depending on the attribute value type." Descr="Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property." Syntax="getMissionConfigValue attribute">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfigValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number, String or Array, depending on the attribute value type." Descr="Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property." Syntax="getMissionConfigValue [attribute, defaultValue]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfigValue" ReturnType="String" ReturnName="result" ReturnDescr="Number, String or Array, depending on the attribute value type." Descr="Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property." Syntax="getMissionConfigValue [attribute, defaultValue]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionConfigValue" ReturnType="Array" ReturnName="result" ReturnDescr="Number, String or Array, depending on the attribute value type." Descr="Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property." Syntax="getMissionConfigValue [attribute, defaultValue]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="attribute" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionDLCs" ReturnType="Array" ReturnName="result" ReturnDescr="Array - list of DLCs detected for the mission" Descr="Returns list of DLCs that are used in the mission. List is created only from units listed in mission." Syntax="getMissionDLCs">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getMissionLayerEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [objects:Array, markers:Array]" Descr="Returns all entities within specific Eden Editor layer. To be used when the scenario is running, not in the editor workspace." Syntax="getMissionLayerEntities layerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="layerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionLayerEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [objects:Array, markers:Array]" Descr="Returns all entities within specific Eden Editor layer. To be used when the scenario is running, not in the editor workspace." Syntax="getMissionLayerEntities layerID">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMissionPath" ReturnType="String" ReturnName="result" ReturnDescr="String - absolute path" Descr="Returns mission root plus the filename in a form of filepath to be used with commands requiring absolute path such as playSound3D, drawIcon3D, createS" Syntax="getMissionPath filename">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getModelInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [modelName, modelPath, hasSkeleton]" Descr="Returns object's model info in format [modelName, modelPath, hasSkeleton]. Model path is suitable for use with createSimpleObject command." Syntax="getModelInfo object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getMousePosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - position in format [x, y], where x and y are UI coordinates" Descr="Returns mouse position in UI coordinates." Syntax="getMousePosition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getMusicPlayedTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns music played time." Syntax="getMusicPlayedTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Extract number from config entry." Syntax="getNumber config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectArgument" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return name of object argument in mission editor." Syntax="map getObjectArgument [object, argument]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="argument" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectChildren" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of all the children of the specified object." Syntax="map getObjectChildren object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectDLC" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number (or Nothing if vanilla item)" Descr="Returns appID of the DLC the object belongs to or nil if object is vanilla." Syntax="getObjectDLC obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectDLC" ReturnType="Nothing" ReturnName="result" ReturnDescr="Number (or Nothing if vanilla item)" Descr="Returns appID of the DLC the object belongs to or nil if object is vanilla." Syntax="getObjectDLC obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectFOV" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - FOV in radians" Descr="Returns Field of View of the given object in radians. Static objects return default value, which is 1. FOV of objNull is 0." Syntax="getObjectFOV object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectMaterials" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of materials" Descr="Gets all custom materials associated with the object." Syntax="getObjectMaterials obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectProxy" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Return the proxy object associated with the given editor object." Syntax="map getObjectProxy object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectTextures" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - array of textures" Descr="Gets all custom textures (hiddenSelectionsTextures) associated with the object." Syntax="getObjectTextures obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectType" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Object type" Descr="Returns object type as a number: 1 - Primary - Normal object placed in Visitor, part of landscape 2 - Network - Road placed in Visitor, part of land" Syntax="getObjectType object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getObjectViewDistance" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [objectDistance, shadowDistance]" Descr="Gets the values of rendering distances of objects and shadows." Syntax="getObjectViewDistance">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getOxygenRemaining" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns amount of remaining oxygen." Syntax="getOxygenRemaining unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPersonUsedDLCs" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Numbers" Descr="Returns a list of all DLCs objects the unit is currently using." Syntax="getPersonUsedDLCs unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPilotCameraDirection" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - [x,y,z] - format Vector3D relative to the model centre (In a similar fas" Descr="Returns model space vector of the object airplane or helicopter pilotCamera ." Syntax="getPilotCameraDirection object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPilotCameraPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - [x,y,z] offset relative to the model centre, format PositionRelative." Descr="Returns model space coordinates of the object airplane or helicopter pilotCamera ." Syntax="getPilotCameraPosition object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPilotCameraRotation" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [x,y] - format [yaw (turn), pitch (elevation)]." Descr="Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera ." Syntax="getPilotCameraRotation object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPilotCameraTarget" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - [isTracking, targetPosition, targetObject]; returns [false,[0,0,0],&lt;NULL" Descr="Returns the target of the object airplane or helicopter pilotCamera tracking." Syntax="getPilotCameraTarget object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPlateNumber" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Get the license plates from any vehicle which has plates configured." Syntax="getPlateNumber vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPlayerChannel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound." Syntax="getPlayerChannel player">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="player" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPlayerScores" ReturnType="Array" ReturnName="result" ReturnDescr="Array - the score of the given player in format [infantry kills, soft vehicle ki" Descr="In MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score)." Syntax="getPlayerScores unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPlayerUID" ReturnType="String" ReturnName="result" ReturnDescr="String &quot;_SP_AI_&quot; or &quot;_SP_PLAYER_&quot; in SP, &quot;&quot; or UID in MP." Descr="Return an uniqueID of the given unit as string if it's player and empty value if it's AI." Syntax="getPlayerUID unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPlayerVoNVolume" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number in range 0..1, -1 in case of error (e." Descr="Gets provided player's Voice over Network (VoN) volume." Syntax="getPlayerVoNVolume unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGLS" Descr="Returns the object position in format PositionAGLS. Z value is height over the surface underneath. Since Arma 3 v1.55." Syntax="getPos object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,z], where z is -1 * getTerrainHeightASL at the location" Descr="Returns the object position in format PositionAGLS. Z value is height over the surface underneath. Since Arma 3 v1.55." Syntax="getPos location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,z], where z is land surface in format PositionAGL" Descr="Returns the object position in format PositionAGLS. Z value is height over the surface underneath. Since Arma 3 v1.55." Syntax="origin getPos [distance, heading]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="origin" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
        <ParamInfo Name="heading" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,z], where z is land surface in format PositionAGL" Descr="Returns the object position in format PositionAGLS. Z value is height over the surface underneath. Since Arma 3 v1.55." Syntax="origin getPos [distance, heading]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="origin" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
        <ParamInfo Name="heading" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosASL" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionASL" Descr="Returns the object position height above sea level." Syntax=" getPosASL object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosASLVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionASL" Descr="Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. Alias of visiblePositionASL." Syntax="getPosASLVisual object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosASLW" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - PositionASLW" Descr="Returns the object position height above sea surface (waves included)." Syntax="getPosASLW obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosATL" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionATL" Descr="Returns the position of an object relative to the terrain." Syntax="getPosATL object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosATLVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionATL" Descr="Returns an object's rendered 3D position ATL (z value above ground) in render time scope." Syntax="getPosATLVisual object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGLS" Descr="Returns an object's rendered 3D position (z value above sea when over sea, or above ground when over land) in render time scope." Syntax="getPosVisual object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosWorld" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionWorld" Descr="Returns PositionWorld, which is PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices." Syntax="getPosWorld object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPosWorldVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionWorld in render scope" Descr="Returns render version of PositionWorld, which is PositionASL of the model centre [0,0,0] of an object in render scope, rather than transformed boundi" Syntax="getPosWorldVisual object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getPylonMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings (magazine classnames)" Descr="Return array of magazines on pylons" Syntax="getPylonMagazines vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getRelDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the eq" Syntax="object getRelDir position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getRelDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the eq" Syntax="object getRelDir position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getRelPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,z], where z is land surface in format PositionAGL" Descr="Returns position, which is given distance and relative direction away from original object." Syntax="object getRelPos [distance, direction]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
        <ParamInfo Name="direction" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getRemoteSensorsDisabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description." Syntax="getRemoteSensorsDisabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getRepairCargo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - repair cargo value, -1 if repair cargo is not supported, 0 if the vehic" Descr="Returns the amount of repair resources from empty (0) to full (1) in the cargo space of a repair vehicle." Syntax="getRepairCargo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getResolution" ReturnType="Array" ReturnName="result" ReturnDescr="Array - see the description" Descr="Returns an array containing all information about resolution." Syntax="getResolution">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getRoadInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [mapType, width, isPedestrian, texture, textureEnd, material, be" Descr="Returns road info in format [maptype, width, ispedestrian, texture, texture end, material]" Syntax="getRoadInfo road">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="road" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getRotorBrakeRTD" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - True if on, otherwise false" Descr="Returns if rotor break is on.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled." Syntax="getRotorBrakeRTD helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getShadowDistance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Gets the shadows rendering distance." Syntax="getShadowDistance">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getShotParents" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [vehicle, instigator]" Descr="Returns shot information Array for the given projectile in format [vehicle, instigator], where vehicle is the vehicle the shot was fired from, and the" Syntax="getShotParents projectile">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="projectile" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getSlingLoad" ReturnType="Object" ReturnName="result" ReturnDescr="Object - the sling loaded vehicle. objNull if nothing is sling loaded." Descr="Return object which is sling loaded by vehicle" Syntax="getSlingLoad vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getSoundController" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns value of the given sound controller." Syntax="vehicle getSoundController controller">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="controller" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getSoundControllerResult" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the calculated value of simple expression in config." Syntax="vehicle getSoundControllerResult config">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getSpeed" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number (m/s)" Descr="Get the speed for the given speed mode." Syntax="object getSpeed speedMode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="speedMode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getStamina" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Get current stamina (~ seconds until depletion)" Syntax="getStamina unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getStatValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number (can return Nothing)" Descr="Returns value of the given  stat." Syntax="getStatValue name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getStatValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Number (can return Nothing)" Descr="Returns value of the given  stat." Syntax="getStatValue name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getSteamFriendsServers" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Array of Strings - to format [ipAndPort, steamFriendName]" Descr="Returns servers information of Steam friends currently playing the game." Syntax="getSteamFriendsServers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getSubtitleOptions" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns subtitles settings in format [subtitles, radio subtitles]." Syntax="getSubtitleOptions">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getSuppression" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - from 0 to 1, or -1 if suppression is not available." Descr="Gets the suppression value of given unit. Returns SCALAR between 0 and 1. Suppression is not calculated for player entities." Syntax="getSuppression unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getTerrainGrid" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - terrain grid value" Descr="Returns the current terrain grid" Syntax="getTerrainGrid">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getTerrainHeightASL" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the terrain height above the sea for the given position." Syntax="getTerrainHeightASL position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getText" ReturnType="String" ReturnName="result" ReturnDescr="String - text value" Descr="Extract text from config entry." Syntax="getText config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getTextWidth" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns estimated width of the text based on font type and size." Syntax="text getTextWidth [font, size]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="font" DataType="String"/>
        <ParamInfo Name="size" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getTotalDLCUsageTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - time (in seconds?)" Descr="Returns total DLC usage time in this game session" Syntax="getTotalDLCUsageTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="getTrimOffsetRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Offsets in format [x,y,z]" Descr="Returns controls trim offset." Syntax="getTrimOffsetRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUnitLoadout" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Unit Loadout Array" Descr="Returns an array with all assigned items, weapons, containers and their stored items." Syntax="getUnitLoadout unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUnitLoadout" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Unit Loadout Array" Descr="Returns an array with all assigned items, weapons, containers and their stored items." Syntax="getUnitLoadout [unit, fullMagazines]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="fullMagazines" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUnitLoadout" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Unit Loadout Array" Descr="Returns an array with all assigned items, weapons, containers and their stored items." Syntax="getUnitLoadout name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUnitLoadout" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Unit Loadout Array" Descr="Returns an array with all assigned items, weapons, containers and their stored items." Syntax="getUnitLoadout config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUnitTrait" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean or Number - trait's valueNothing - if unit is invalid, e." Descr="Gets the current value of a trait of the given unit." Syntax="unit getUnitTrait skillName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUnitTrait" ReturnType="Scalar" ReturnName="result" ReturnDescr="Boolean or Number - trait's valueNothing - if unit is invalid, e." Descr="Gets the current value of a trait of the given unit." Syntax="unit getUnitTrait skillName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUserMFDText" ReturnType="Array" ReturnName="result" ReturnDescr="Array of String" Descr="Returns array of user text variables used in MFD." Syntax="getUserMFDText vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUserMFDValue" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Number" Descr="Returns array of user text variables used in MFD." Syntax="getUserMFDValue vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getUserMFDvalue" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Number" Descr="Returns array of user text variables used in MFD." Syntax="getUserMFDValue vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Namespace">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Namespace"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Namespace">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Namespace"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Anything or Nothing if the variable doesn't exist" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable name">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Namespace">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Namespace"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVariable" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - current value of the variable or defaultValue if the variable doesn't" Descr="Return the value of variable in the variable space assigned to various data types." Syntax="varspace getVariable [name, defaultValue]">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="defaultValue" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVehicleCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - vehicles loaded in storingVehicle, in order of their loading" Descr="Gets a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle." Syntax="getVehicleCargo storingVehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="storingVehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getVehicleTIPars" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="returns array [alive factor, movementfactor, metabolism factor] see setVehicleTIPars" Syntax="getVehicleTIPars vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getWPPos" ReturnType="Array" ReturnName="Waypoint" ReturnDescr="Array - format Position3D." Descr="Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor." Syntax="getWPPos [group, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getWeaponCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [all_types_array, all_counts_array]." Descr="Returns all weapons types and count from the cargo space" Syntax="getWeaponCargo object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getWeaponSway" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number: weapon sway" Descr="Returns current size of weapon sway of a given unit, in radians" Syntax="getWeaponSway unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getWingsOrientationRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns orientation of horizontal stabilizers." Syntax="getWingsOrientationRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="getWingsPositionRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns position of stabilizers." Syntax="getWingsPositionRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="glanceAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit is glancing at (target or Position).How frequently the unit is glancing there depends on behaviour." Syntax="unit(s) glanceAt position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="glanceAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit is glancing at (target or Position).How frequently the unit is glancing there depends on behaviour." Syntax="unit(s) glanceAt position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="glanceAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit is glancing at (target or Position).How frequently the unit is glancing there depends on behaviour." Syntax="unit(s) glanceAt position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="glanceAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit is glancing at (target or Position).How frequently the unit is glancing there depends on behaviour." Syntax="unit(s) glanceAt position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="globalChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the global radio channel. The text will be visible only on the PC where command was executed." Syntax="unitName globalChat chatText">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="globalRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the global radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol." Syntax="unit globalRadio radioName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="goggles" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of currently used goggles (for NVGoggles use hmd)." Syntax="goggles unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="group" ReturnType="Group" ReturnName="Group" ReturnDescr="Group -  For dead units, the returned group equals grpNull." Descr="Returns the group a unit is assigned to." Syntax="group object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the group radio channel. Must have assigned &quot;ItemRadio&quot; to see or transmit the messages." Syntax="unitName groupChat chatText">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupFromNetId" ReturnType="Group" ReturnName="Group" ReturnDescr="Group" Descr="Get group with given unique ID. For objects use objectFromNetId." Syntax="groupFromNetId id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="id" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupIconSelectable" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true is selectable" Descr="Return if groups icon raises onClick and onOver events." Syntax="groupIconSelectable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="groupIconsVisible" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [visibleOnMap, visibleOnHUD]" Descr="Return group icons are visible." Syntax="groupIconsVisible">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="groupId" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns group name." Syntax="groupId group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupOwner" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns ID of client to which the group is local. Can be run only from server." Syntax="groupOwner group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the group radio channel. Must have assigned &quot;ItemRadio&quot; to send or receive the transmission." Syntax="unit groupRadio radioName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupSelectUnit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3..." Syntax="player groupSelectUnit [unit, select]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="player" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="select" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="groupSelectedUnits" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see hcSelected." Syntax="groupSelectedUnits unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="gunner" ReturnType="Object" ReturnName="result" ReturnDescr="Object -  The person sitting in the gunner place is returned." Descr="Returns the gunner of a vehicle." Syntax=" gunner vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="gusts" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the current gusts value. Scale is 0 to 1." Syntax="gusts">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="halt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Stops the program into a debugger. In retail version using halt results in error." Syntax="halt">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="handgunItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [silencer, laserpointer/flashlight, optics, bipod]" Descr="Returns array with all items assigned to the handgun. This command is used for infantry weapons only." Syntax="handgunItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="handgunMagazine" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns either single element array, containing class name of currently loaded in the handgun magazine, or an empty array if unit has no handgun or ha" Syntax="handgunMagazine unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="handgunWeapon" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of a unit's handgun (an empty string if there is none)." Syntax="handgunWeapon unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="handsHit" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number -  If the hands aren't damaged, the returned value is 0." Descr="Checks if a soldier's hands are hit, which results in inaccurate aiming." Syntax=" handsHit unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hasInterface" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client." Syntax="hasInterface">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="hasPilotCamera" ReturnType="Boolean" ReturnName="result" ReturnDescr="bool" Descr="Returns true if the object airplane or helicopter has a pilotCamera." Syntax="hasPilotCamera object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hasWeapon" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean -  Returns true if the unit has the weapon, false if not." Descr="Checks if a unit has the given weapon." Syntax="unitName hasWeapon weaponName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcAllGroups" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns selected groups in high command." Syntax="hcAllGroups unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcGroupParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns parameters describing group in high command bar." Syntax="unit hcGroupParams group">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcLeader" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns group's high command commander." Syntax="hcLeader group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcRemoveAllGroups" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all groups from unit's high command bar." Syntax="hcRemoveAllGroups unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcRemoveGroup" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes group from unit's high command bar." Syntax="unit hcRemoveGroup group">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcSelectGroup" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select given group in high command bar." Syntax="unit hcSelectGroup array">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcSelected" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns selected groups in high command." Syntax="hcSelected unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcSetGroup" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add group to unit's high command bar.Array parameters are group, group-name and team (teammain, teamred, teamgreen, teamblue, teamyellow)." Syntax="unit hcSetGroup array">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcShowBar" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing (prior to Arma 3 v1.93." Descr="Shows or hides high command bar.There must be some groups under HC command to show HC bar." Syntax="hcShowBar bool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hcShownBar" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return true if the high command bar is shown/active." Syntax="hcShownBar">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="headgear" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns headgear of unit." Syntax="headgear unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hideBody" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground." Syntax="hideBody unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hideObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Hide entity. Can be used on soldiers and vehicles, also on static objects." Syntax="hideObject object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hideObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Hide entity. Can be used on soldiers and vehicles, also on static objects." Syntax="object hideObject hidden">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="hidden" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hideObjectGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="MP command. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on all objects with class names, i.e." Syntax="hideObjectGlobal object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hideObjectGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="MP command. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on all objects with class names, i.e." Syntax="object hideObjectGlobal hidden">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="hidden" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hideSelection" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Hides or enables the given selection for the object" Syntax="object hideSelection [selection, hidden]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="selection" DataType="Object"/>
        <ParamInfo Name="hidden" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Outputs a multi-line hint message in the left upper corner of the screen (in the right upper corner in Arma)." Syntax="hint message">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="message" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hintC" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays attractive hint in the center of the screen. Player control is taken away until user presses &quot;Continue&quot;." Syntax="hintC content">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="content" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hintC" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays attractive hint in the center of the screen. Player control is taken away until user presses &quot;Continue&quot;." Syntax="title hintC content">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="title" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="content" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hintC" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays attractive hint in the center of the screen. Player control is taken away until user presses &quot;Continue&quot;." Syntax="title hintC content">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="title" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="content" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hintCadet" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows a text hint only when in cadetMode.The text can contain several lines. \n is used to indicate the end of a line." Syntax="hintCadet text">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hintSilent" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Same as hint, but without a sound." Syntax="hintSilent text">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hmd" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty." Syntax="hmd unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="hostMission" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog." Syntax="hostMission [pConfig, pDisplay]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pConfig" DataType="Config"/>
        <ParamInfo Name="pDisplay" DataType="Display"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="htmlLoad" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Load HTML from file to given control. File path is relative to current mission dir or an absolute path (with drive letter etc.)." Syntax="control htmlLoad filename">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="humidity" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current humidity value. 0 is no humidity and 1 is 100% humidity." Syntax="humidity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="image" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Creates a structured text containing the given image." Syntax="image filename">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="importAllGroups" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Imports all groups into the RTE." Syntax="importAllGroups map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="importance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns a location's importance value." Syntax="importance location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="in" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether value is in array, unit in vehicle or position inside location." Syntax="value in array">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="in" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether value is in array, unit in vehicle or position inside location." Syntax="unit in vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="in" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether value is in array, unit in vehicle or position inside location." Syntax="position in location">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="in" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether value is in array, unit in vehicle or position inside location." Syntax="needle in haystack">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="needle" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="haystack" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea trigger">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea trigger">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea marker">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="marker" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea marker">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="marker" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea location">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea location">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea [center, a, b, angle, isRectangle, c]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Any"/>
        <ParamInfo Name="a" DataType="Scalar"/>
        <ParamInfo Name="b" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="isRectangle" DataType="Boolean"/>
        <ParamInfo Name="c" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inArea" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format." Syntax="position inArea [center, a, b, angle, isRectangle, c]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Any"/>
        <ParamInfo Name="a" DataType="Scalar"/>
        <ParamInfo Name="b" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="isRectangle" DataType="Boolean"/>
        <ParamInfo Name="c" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inAreaArray" ReturnType="Array" ReturnName="Position" ReturnDescr="Array: Objects and/or Positions inside the trigger area" Descr="Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array." Syntax="positions inAreaArray trigger">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="positions" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inAreaArray" ReturnType="Array" ReturnName="Position" ReturnDescr="Array: Objects and/or Positions inside the marker area" Descr="Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array." Syntax="positions inAreaArray marker">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="positions" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="marker" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inAreaArray" ReturnType="Array" ReturnName="Position" ReturnDescr="Array: Objects and/or Positions inside the location area" Descr="Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array." Syntax="positions inAreaArray location">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="positions" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inAreaArray" ReturnType="Array" ReturnName="Position" ReturnDescr="Array: Objects and/or Positions inside the area" Descr="Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array." Syntax="positions inAreaArray [center, a, b, angle, isRectangle, c]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="positions" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Any"/>
        <ParamInfo Name="a" DataType="Any"/>
        <ParamInfo Name="b" DataType="Any"/>
        <ParamInfo Name="angle" DataType="Any"/>
        <ParamInfo Name="isRectangle" DataType="Any"/>
        <ParamInfo Name="c" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inGameUISetEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets given event handler of in-game UI. If EH function returns true, performed action is overridden." Syntax="inGameUISetEventHandler [handlerName, function]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handlerName" DataType="String"/>
        <ParamInfo Name="function" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inPolygon" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether position is inside given polygon" Syntax="position inPolygon polygon">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="polygon" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inRangeOfArtillery" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if all given units are able to fire at given position with given magazineType." Syntax="pos inRangeOfArtillery [[unit], magazineType]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[unit]" DataType="Array"/>
        <ParamInfo Name="magazineType" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="incapacitatedState" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the incapacitated state of the given unit." Syntax="incapacitatedState person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inflame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control fireplace burning. Set inflame to true (on) or false (off)." Syntax="fireplace inflame burn">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="fireplace" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="burn" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inflamed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use isBurning command." Syntax="inflamed fireplace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="fireplace" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanel" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [componentClass, componentType]" Descr="Returns information about what is currently displayed on given player's info panel." Syntax="infoPanel infoPanelId">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="infoPanelId" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanelComponentEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if component was successfully enabled on the panel, false otherwi" Descr="Controls availability of component to given object info panel." Syntax="unit infoPanelComponentEnabled [panelID, componentClassOrType]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="panelID" DataType="String"/>
        <ParamInfo Name="componentClassOrType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanelComponentEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Controls availability of component to given object info panel." Syntax="[unit, turretPath] infoPanelComponentEnabled [panelID, componentClassOrType]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="panelID" DataType="String"/>
        <ParamInfo Name="componentClassOrType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanelComponents" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [className, componentType, isAccessible]:className: String - com" Descr="Returns array of all components available to given object info panel." Syntax="unit infoPanelComponents panelID">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="panelID" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanelComponents" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [className, componentType, isAccessible]:className: String - com" Descr="Returns array of all components available to given object info panel." Syntax="[unit, turretPath] infoPanelComponents panelID">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="panelID" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanels" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [[infoPanelId1, infoPanelShortcutId1], [infoPanelId2, infoPanelSh" Descr="Returns array all info panels configured for given object or object and turret path." Syntax="infoPanels unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="infoPanels" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format [[infoPanelId1, infoPanelShortcutId1], [infoPanelId2, infoPanelSh" Descr="Returns array all info panels configured for given object or object and turret path." Syntax="infoPanels [unit, turretPath]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="inheritsFrom" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Returns base entry of config entry." Syntax="inheritsFrom config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="initAmbientLife" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Initialize the ambient life." Syntax="initAmbientLife">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="inputAction" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the state of input devices mapped to given input action.For Arma 3 inputActions see: inputAction/actions." Syntax="inputAction name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="insertEditorObject" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional." Syntax="map insertEditorObject [type,value,[name1,value1,...],subtype class]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
        <ParamInfo Name="[name1,value1,...]" DataType="Array"/>
        <ParamInfo Name="subtypeclass" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="intersect" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of intersections in format: [[selection, distance],..." Descr="Finds named selections in object which are in specified LOD, intersected by given section of a line." Syntax="[object, lodName] intersect [begPos, endPos]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="lodName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="begPos" DataType="Array"/>
        <ParamInfo Name="endPos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="is3DEN" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the Eden Editor is currently being used." Syntax="is3DEN">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="is3DENMultiplayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the Eden Editor is in multiplayer mode." Syntax="is3DENMultiplayer">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="is3DENPreview" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the Eden Editor is currently in mission preview mode, single player or multiplayer." Syntax="is3DENPreview">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isAbleToBreathe" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater." Syntax="isAbleToBreathe unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isActionMenuVisible" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if scroll menu is visible." Syntax="isActionMenuVisible">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isAgent" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if team member is an agent." Syntax="isAgent teamMember">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isAimPrecisionEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - True if affected, false if not" Descr="Returns true if procedural aiming precision affects weapon sway." Syntax="isAimPrecisionEnabled unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isArray" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if config entry represents array." Syntax="  isArray config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isAutoHoverOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return true if vehicle has enabled auto hover." Syntax="isAutoHoverOn vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isAutonomous" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if UAV is in autonomous mode." Syntax="isAutonomous uav">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isAutotest" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if game was started with autotest parameter" Syntax="isAutotest">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isBleeding" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns whether the unit is bleeding." Syntax="isBleeding unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isBurning" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns whether the unit is burning." Syntax="isBurning unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isClass" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if config entry represents config class." Syntax=" isClass config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isCollisionLightOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if vehicle collision lights are on otherwise false." Syntax="isCollisionLightOn vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isCopilotEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if copilots actions are enabled." Syntax="isCopilotEnabled vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isDLCAvailable" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the DLC is marked as available." Syntax="isDLCAvailable appid">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="appid" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isDamageAllowed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command." Syntax="isDamageAllowed object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isDedicated" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return true if the machine (executing the command) is a dedicated multiplayer server. In single player returns false." Syntax="isDedicated">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isEngineOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if engine is on, false if it is off." Syntax="isEngineOn vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isEqualTo" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Performs strict comparison between var1 and var2 and returns true if equal, otherwise false." Syntax="val1 isEqualTo val2">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="val1" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="val2" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isEqualType" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Compares 2 values by their type. A much faster alternative to typeName a == typeName b." Syntax="val1 isEqualType val2">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="val1" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="val2" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isEqualTypeAll" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Compares types of all elements of an array to the type of a single value." Syntax="arr isEqualTypeAll val">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arr" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="val" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isEqualTypeAny" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Compares type of given value to every type in the given array and if match is found, true is returned." Syntax="val isEqualTypeAny types">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="val" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="types" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isEqualTypeArray" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Compares types of all elements of one array to types of all elements of another array." Syntax="arr1 isEqualTypeArray arr2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arr1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="arr2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isEqualTypeParams" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Compares types of all elements of input array to types of all elements of template array." Syntax="input isEqualTypeParams template">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="input" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="template" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isFilePatchingEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if file patching is enabled otherwise false" Syntax="isFilePatchingEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isFinal" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - True if final, false if not" Descr="Checks if code or a variable was compiled final with compileFinal." Syntax="isFinal code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isFlashlightOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if there is a linked and enabled flashlight on a given weapon." Syntax="unit isFlashlightOn weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isFlatEmpty" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - Empty array [] if check failed or PositionASL if succeded." Descr="Checks given position against given filter params." Syntax="position isFlatEmpty [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="minDistance" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="mode" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="maxGradient" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="maxGradientRadius" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="overLandOrWater" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="shoreLine" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="ignoreObject" DataType="Object" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isForcedWalk" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if player is forced to walk with forceWalk." Syntax="isForcedWalk unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isFormationLeader" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if unit is subgroup leader." Descr="Returns true if the specified unit is subgroup leader." Syntax="isFormationLeader unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isGameFocused" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns false if the game window lost focus, due to user Alt+Tab-ing for example." Syntax="isGameFocused">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isGamePaused" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the game simulation is paused due to some system event like a dialog or pause menu or when user has Alt+Tab-ed (except when -nopause s" Syntax="isGamePaused">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isGroupDeletedWhenEmpty" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true the group is marked for auto-deletion when empty" Descr="Checks if the given group marked for auto-deletion when empty. See deleteGroupWhenEmpty." Syntax="isGroupDeletedWhenEmpty group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isHidden" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return whether the person is hidden (reached the hiding position)." Syntax="isHidden person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isIRLaserOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if there is a linked and enabled IR on the given weapon." Syntax="unit isIRLaserOn weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isInRemainsCollector" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if unit or vehicle is queued for disposal after death." Syntax="isInRemainsCollector remain">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="remain" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isInstructorFigureEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="True if instructor figure is enabled in Game Options." Syntax="isInstructorFigureEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isKeyActive" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the given key is active in the current user profile.See keys, keysLimit and doneKeys in the description.ext file of the missions." Syntax="isKeyActive keyName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="keyName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isKindOf" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the object is (a subtype) of the given type." Syntax="object isKindOf typeName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="typeName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isKindOf" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the object is (a subtype) of the given type." Syntax="typeName1 isKindOf typeName2">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="typeName1" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="typeName2" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isKindOf" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the object is (a subtype) of the given type." Syntax="typeName1 isKindOf [typeName2, targetConfig]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="typeName1" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="typeName2" DataType="String"/>
        <ParamInfo Name="targetConfig" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isLaserOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean: True when laser is on, otherwise false" Descr="Returns true if the vehicle has its laser turned on." Syntax="isLaserOn vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isLightOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if vehicle headlights are on otherwise false." Syntax="isLightOn vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isLightOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if vehicle headlights are on otherwise false." Syntax="isLightOn [vehicle, turret]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="turret" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isLocalized" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given string name is localized." Syntax="isLocalized stringName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="stringName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isManualFire" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if manual fire is on.Always returns false for a soldier." Syntax="isManualFire vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isMarkedForCollection" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the object is marked for weapons collection." Syntax=" isMarkedForCollection object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isMultiplayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return true if multiPlayer." Syntax="isMultiplayer">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isMultiplayerSolo" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option)." Syntax="isMultiplayerSolo">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isNil" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if variable is nil" Descr="Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined." Syntax="isNil variableName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="variableName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNil" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if code returns something other than Nothing" Descr="Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined." Syntax="isNil code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Display"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Handle">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Handle"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNull" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the tested item is Null." Syntax="isNull entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="SqxObject">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="SqxObject"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isNumber" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if config entry represents number." Syntax=" isNumber config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isObjectHidden" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if hidden, false if visible" Descr="Checks visibility of a given object on the local machine." Syntax="isObjectHidden object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isObjectRTD" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if RTD model is loaded" Syntax="isObjectRTD helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isOnRoad" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given position is on road. Same as roadAt, only return is boolean instead of road object." Syntax="isOnRoad position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isOnRoad" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if given position is on road. Same as roadAt, only return is boolean instead of road object." Syntax="isOnRoad position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isPipEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if Picture in Picture (Render to Texture) is enabled." Syntax="isPipEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isPlayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if given person is a human player." Syntax="isPlayer person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isRealTime" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the mission editor is operating in real time mode." Syntax="isRealTime map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isRemoteExecuted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false." Syntax="isRemoteExecuted">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isRemoteExecutedJIP" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set)." Syntax="isRemoteExecutedJIP">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isSensorTargetConfirmed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - True if confirmed target, otherwise false" Descr="Returns if given unit is confirmed target for given side." Syntax="unit isSensorTargetConfirmed side">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isServer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the machine (executing the command) is the server in a multiplayer game or is running single player." Syntax="isServer">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isShowing3DIcons" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the editor is set to draw 3D icons." Syntax="isShowing3DIcons map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isSimpleObject" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if given object is simple object" Syntax="isSimpleObject object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isSprintAllowed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if player is allowed to sprint" Syntax="isSprintAllowed unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isStaminaEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if stamina depletion is enabled" Syntax="isStaminaEnabled unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isSteamMission" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the current mission is a Steam Workshop mission." Syntax="isSteamMission">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isStreamFriendlyUIEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="True if stream friendly UI is enabled in Game Options." Syntax="isStreamFriendlyUIEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isStressDamageEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean Returns true if enabled, otherwise false" Descr="Returns true if stress damage is enabled in the game settings." Syntax="isStressDamageEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isText" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if config entry represents text." Syntax=" isText config">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isTouchingGround" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if object is touching the ground." Syntax="isTouchingGround object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isTurnedOut" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if given unit is turned out, otherwise false." Syntax="isTurnedOut unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isTutHintsEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="True if tutorial hints are enabled in Game Options." Syntax="isTutHintsEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isUAVConnectable" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if UAV is connectable by AV terminal(s)." Syntax="object isUAVConnectable [uav, checkAllItems]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Any"/>
        <ParamInfo Name="checkAllItems" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isUAVConnected" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if UAV is connected to some terminal." Syntax="isUAVConnected uav">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isUIContext" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the script originated from some UI control event, for example from &quot;onButtonDown&quot; EH." Syntax="isUIContext">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="isUniformAllowed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether given uniform can be dressed by target soldier." Syntax="unit isUniformAllowed type">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isVehicleCargo" ReturnType="Object" ReturnName="result" ReturnDescr="Object - transporting vehicle" Descr="Return transporting vehicle if vehicle is loaded in one." Syntax="isVehicleCargo cargo">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargo" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isVehicleRadarOn" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if vehicle has active sensors on" Syntax="isVehicleRadarOn vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isVehicleSensorEnabled" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns class name (to identify list based on component name) and info if given sensor is enabled" Syntax="vehicle isVehicleSensorEnabled componentName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="componentName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isWalking" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if walk is toggled (W+S in Arma 3)." Syntax="isWalking unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isWeaponDeployed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if weapon is currently deployed." Syntax="isWeaponDeployed unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="isWeaponRested" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if weapon is currently rested." Syntax="isWeaponRested unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="itemCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Format: [&quot;ItemType1&quot;,&quot;ItemType2&quot;,&quot;ItemType3&quot;..." Descr="Get array with items from ammo box (or any general weapon holder container)." Syntax="itemCargo object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="items" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array of names of all special items of a vehicle or a soldier." Syntax="items unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="itemsWithMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns combined array including all unit's items and all unit's magazines." Syntax="itemsWithMagazines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="join" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Join all units in the array to given group." Syntax="unitArray join group">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="join" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Join all units in the array to given group." Syntax="unitArray join group">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="joinAs" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Joins the unit to the given group, if position id is available, this one is used." Syntax="unit joinAs [group, id]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="joinAsSilent" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining." Syntax="unit joinAsSilent [group, id]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="joinSilent" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the grpNull group (e." Syntax="unitArray joinSilent group">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="joinSilent" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the grpNull group (e." Syntax="unitArray joinSilent group">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="joinString" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Joins array into String with provided separator." Syntax="array joinString separator">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="separator" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbAddDatabase" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Register knowledge base database to given person." Syntax="person kbAddDatabase fileName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fileName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbAddDatabaseTargets" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Register target list knowledge base database to given person." Syntax="person kbAddDatabaseTargets fileName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fileName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbAddTopic" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Register conversation topic to given person." Syntax="person kbAddTopic [topicName, conversationFile, fsmFile, eventHandler]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="topicName" DataType="String"/>
        <ParamInfo Name="conversationFile" DataType="String"/>
        <ParamInfo Name="fsmFile" DataType="String" IsOptional="True"/>
        <ParamInfo Name="eventHandler" DataType="Any" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbHasTopic" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if conversation topic was registered to given person." Syntax="person kbHasTopic topicName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="topicName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbReact" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Pass a non-verbal communication to the receiver." Syntax="person kbReact [receiver, topicName, sentenceID(, argumentArray1, argumentArray2, …)]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="receiver" DataType="Object"/>
        <ParamInfo Name="topicName" DataType="String"/>
        <ParamInfo Name="sentenceID" DataType="String"/>
        <ParamInfo Name="argumentArray1" DataType="Any"/>
        <ParamInfo Name="argumentArray2" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbRemoveTopic" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unregister conversation topic from given person." Syntax="person kbRemoveTopic topicName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="topicName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbTell" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Make the person tell to the receiver the sentence." Syntax="person kbTell [receiver, topicName, sentenceClass(, argumentArray1, argumentArray2, (…), forceRadio)]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="receiver" DataType="Object"/>
        <ParamInfo Name="topicName" DataType="String"/>
        <ParamInfo Name="sentenceClass" DataType="String"/>
        <ParamInfo Name="argumentArray1" DataType="Any"/>
        <ParamInfo Name="argumentArray2" DataType="Any"/>
        <ParamInfo Name="forceRadio" DataType="Any" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="kbWasSaid" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if given item was said by person to someone." Syntax="person kbWasSaid [receiver, topic, sentenceID, maxAge]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="receiver" DataType="Object"/>
        <ParamInfo Name="topic" DataType="String"/>
        <ParamInfo Name="sentenceID" DataType="String"/>
        <ParamInfo Name="maxAge" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="keyImage" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code." Syntax="keyImage dikCode">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="dikCode" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="keyName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of a button (on the keyboard, mouse or joystick) with the given code." Syntax="keyName dikCode">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="dikCode" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="knowsAbout" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number in the range of 0..4, where 4 is maximum knowledge." Descr="Checks if a group or a side knows about target. If who is a unit, unit's group is considered, if who is a vehicle, commander's group is considered." Syntax="who knowsAbout target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="who" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="knowsAbout" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number in the range of 0..4, where 4 is maximum knowledge." Descr="Checks if a group or a side knows about target. If who is a unit, unit's group is considered, if who is a vehicle, commander's group is considered." Syntax="who knowsAbout target">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="who" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="knowsAbout" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number in the range of 0..4, where 4 is maximum knowledge." Descr="Checks if a group or a side knows about target. If who is a unit, unit's group is considered, if who is a vehicle, commander's group is considered." Syntax="who knowsAbout target">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="who" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="land" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force helicopter landing." Syntax="helicopter land mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopter" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="landAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order an AI airplane to land at a given airport. ID is the number to identify which airport on the island you want. Since Arma 3 v1." Syntax="plane landAt id">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="plane" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="landAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Order an AI airplane to land at a given airport. ID is the number to identify which airport on the island you want. Since Arma 3 v1." Syntax="plane landAt airportObject">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="plane" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="airportObject" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="landResult" ReturnType="String" ReturnName="result" ReturnDescr="String - Result, can be:&quot;Found&quot; (Position found)&quot;NotFound&quot; (Position not found" Descr="Return the result of helicopter landing position searching (performed, after land command)." Syntax="landResult helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="language" ReturnType="String" ReturnName="result" ReturnDescr="String - See supported languages for possible values" Descr="Returns current game language." Syntax="language">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="laserTarget" ReturnType="Object" ReturnName="result" ReturnDescr="Object - laser target or objNull if no laser target exists" Descr="Returns laser target object created by given unit (gunner in vehicle or on foot) when using &quot;Laserdesignator&quot; or another laser targeting device." Syntax="laserTarget unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbAdd" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - row index" Descr="Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.It returns the index of the newly added item." Syntax="lbAdd [idc, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbAdd" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - row index" Descr="Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.It returns the index of the newly added item." Syntax="control lbAdd text">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clear all items in listbox or combobox with id idc of topmost user dialog." Syntax="lbClear idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clear all items in listbox or combobox with id idc of topmost user dialog." Syntax="lbClear control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbColor" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Color (RGBA)" Descr="Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbColor [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbColor" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Color (RGBA)" Descr="Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbColor index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbColorRight" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Color (RGBA)" Descr="Returns the text color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbColorRight [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbColorRight" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Color (RGBA)" Descr="Returns the text color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbColorRight index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbCurSel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbCurSel idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbCurSel" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbCurSel control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax=" lbData [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbData index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbDelete" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog." Syntax="lbDelete [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbDelete" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbDelete index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbIsSelected" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether given row of the given listbox is selected." Syntax="control lbIsSelected index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbPicture [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbPicture index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbPictureRight" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the right picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbPictureRight [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbPictureRight" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the right picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbPictureRight index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSelection" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns Array of selected rows indices in the given listbox of style LB_MULTI (multi-selection). For single selection listbox use lbCurSel instead." Syntax="lbSelection control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.Colour is in format Color." Syntax="lbSetColor  [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.Colour is in format Color." Syntax="control lbSetColor [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetColorRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog to color." Syntax="lbSetColorRight  [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetColorRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog to color." Syntax="control lbSetColorRight [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetCurSel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbSetCurSel [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetCurSel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbSetCurSel index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given d" Syntax="lbSetData [idc, index, data]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given d" Syntax="control lbSetData [index, data]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name." Syntax="lbSetPicture [idc, index, name]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name." Syntax="control lbSetPicture [index, name]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="lbSetPictureColor [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="control lbSetPictureColor [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureColorDisabled" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="lbSetPictureColorDisabled [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureColorDisabled" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="control lbSetPictureColorDisabled [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureColorSelected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="lbSetPictureColorSelected [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureColorSelected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="control lbSetPictureColorSelected [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbSetPictureRight [idc, index, name]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbSetPictureRight [index, name]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRightColor" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="lbSetPictureRightColor [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRightColor" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color." Syntax="control lbSetPictureRightColor [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRightColorDisabled" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to th" Syntax="lbSetPictureRightColorDisabled [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRightColorDisabled" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to th" Syntax="control lbSetPictureRightColorDisabled [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRightColorSelected" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog t" Syntax="lbSetPictureRightColorSelected [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetPictureRightColorSelected" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog t" Syntax="control lbSetPictureRightColorSelected [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetSelectColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color." Syntax="lbSetSelectColor  [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetSelectColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color." Syntax="control lbSetSelectColor [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetSelectColorRight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topm" Syntax="lbSetSelectColorRight  [idc, index, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetSelectColorRight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topm" Syntax="control lbSetSelectColorRight [index, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetSelected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the selection state of the given row of the given listbox of style LB_MULTI. For single selection listbox use lbSetCurSel instead." Syntax="control lbSetSelected [index, selected]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="selected" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetText" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the text on the left side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbSetText [idc, index, name]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetText" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the text on the left side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbSetText [index, name]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetTextRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the text on the right side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbSetTextRight [index, name]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetTooltip" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data." Syntax="lbSetTooltip [idc, index, tooltip]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="tooltip" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetTooltip" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data." Syntax="control lbSetTooltip [index, tooltip]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="tooltip" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given valu" Syntax="lbSetValue [idc, index, value]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given valu" Syntax="control lbSetValue [index, value]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSize" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return number of items of listbox or combobox with id idc of topmost user dialog." Syntax="lbSize idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSize" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return number of items of listbox or combobox with id idc of topmost user dialog." Syntax="lbSize control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts listbox entries alphabetically ascending by their text. Alternative syntax (available since ARMA 3  v1.18) allows descending sorting as well." Syntax="lbSort control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts listbox entries alphabetically ascending by their text. Alternative syntax (available since ARMA 3  v1.18) allows descending sorting as well." Syntax="lbSort [control, sortOrder]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
        <ParamInfo Name="sortOrder" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts listbox entries alphabetically ascending by their text. Alternative syntax (available since ARMA 3  v1.18) allows descending sorting as well." Syntax="lbSort idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts listbox entries alphabetically ascending by their text. Alternative syntax (available since ARMA 3  v1.18) allows descending sorting as well." Syntax="lbSort [idc, sortOrder]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="sortOrder" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSortByValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts the Listbox Entries by their assigned Values.The Entries getting listed by their Negativity (most negative Value on Top)." Syntax="lbSortByValue control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbSortByValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts the Listbox Entries by their assigned Values.The Entries getting listed by their Negativity (most negative Value on Top)." Syntax="lbSortByValue idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbText [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbText index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbTextRight" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the shown right text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbTextRight [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbTextRight" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the shown right text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbTextRight index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="lbValue [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lbValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog." Syntax="control lbValue index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leader" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the group leader for the given unit or group. For dead units, objNull is returned." Syntax=" leader unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leader" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the group leader for the given unit or group. For dead units, objNull is returned." Syntax=" leader unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardDeInit" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized." Syntax="leaderboardDeInit boardName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="boardName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardGetRows" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name," Syntax="leaderboardGetRows boardName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="boardName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardInit" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Initialize the leaderboard structure for board with given name. Returns true if board is already initialized." Syntax="leaderboardInit boardName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="boardName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardRequestRowsFriends" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Requests given leaderboard to download friends rows from the given leaderboard" Syntax="leaderboardRequestRowsFriends  boardName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="boardName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardState" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="returns state of the board with given name. 0: Busy (async. operation in progress); 1: Async. operation ended with success; 2: Async." Syntax="leaderboardState boardname">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="boardname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardsRequestUploadScore" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional." Syntax="leaderboardsRequestUploadScore [boardName, score, [details]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="boardName" DataType="String"/>
        <ParamInfo Name="score" DataType="Scalar"/>
        <ParamInfo Name="[details]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaderboardsRequestUploadScoreKeepBest" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Starts async. operation to upload score to board with given name, value is only stored to board if it's better than one already in the board." Syntax="leaderboardsRequestUploadScoreKeepBest [boardName, score, [details]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="boardName" DataType="String"/>
        <ParamInfo Name="score" DataType="Scalar"/>
        <ParamInfo Name="[details]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaveVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Ceases the using of the vehicle by a group and unassigns vehicle from the group." Syntax="group leaveVehicle vehicle">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="leaveVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Ceases the using of the vehicle by a group and unassigns vehicle from the group." Syntax="group leaveVehicle vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="libraryCredits" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [array1, array2, (.." Descr="Returns the credits for the libraries used by the game." Syntax="libraryCredits">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="libraryDisclaimers" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [array1] - only has one element at the moment, but this number might gro" Descr="Returns the library disclaimers." Syntax="libraryDisclaimers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="lifeState" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the life state of the given unit." Syntax="lifeState unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lightAttachObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach light to given object at given position on object." Syntax="light lightAttachObject [object, position]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lightDetachObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Detach light from object." Syntax="lightDetachObject light">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lightIsOn" ReturnType="String" ReturnName="result" ReturnDescr="String - Can be one of:&quot;ON&quot; - light is on&quot;OFF&quot; - light is off&quot;AUTO&quot; - applica" Descr="Check if lampost is on (shining). For working with CfgNonAIVehicles class &quot;StreetLamp&quot; only." Syntax="lightIsOn lamppost">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="lamppost" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lightnings" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the current lightnings value." Syntax="lightnings">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="limitSpeed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Limit speed of given vehicle or person to given value (in km/h)." Syntax="objectName limitSpeed speed">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="speed" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lineBreak" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Creates a structured text containing a line break." Syntax="lineBreak">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="lineIntersects" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if intersection" Descr="Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.NOTE: Doesn't work under water." Syntax="lineIntersects [begPos, endPos, objIgnore1, objIgnore2]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="begPos" DataType="Array"/>
        <ParamInfo Name="endPos" DataType="Array"/>
        <ParamInfo Name="objIgnore1" DataType="Object" IsOptional="True"/>
        <ParamInfo Name="objIgnore2" DataType="Object" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lineIntersectsObjs" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - intersecting objects" Descr="Returns list of objects intersected by given line from begPos to endPos." Syntax="lineIntersectsObjs [begPos, endPos, withObj, ignoreObj, sortByDistance, flags]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="begPos" DataType="Array"/>
        <ParamInfo Name="endPos" DataType="Array"/>
        <ParamInfo Name="withObj" DataType="Object"/>
        <ParamInfo Name="ignoreObj" DataType="Object"/>
        <ParamInfo Name="sortByDistance" DataType="Boolean"/>
        <ParamInfo Name="flags" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lineIntersectsSurfaces" ReturnType="Array" ReturnName="Position" ReturnDescr="Array of intersections in format [[intersectPosASL, surfaceNormal, intersectObj," Descr="Returns list of intersections with surfaces from begPosASL to endPosASL. If there is ground intersection, it is also included. Works on units." Syntax="lineIntersectsSurfaces [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="begPosASL" DataType="Array"/>
        <ParamInfo Name="endPosASL" DataType="Array"/>
        <ParamInfo Name="ignoreObj1" DataType="Object" IsOptional="True"/>
        <ParamInfo Name="ignoreObj2" DataType="Object" IsOptional="True"/>
        <ParamInfo Name="sortMode" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="maxResults" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="LOD1" DataType="String" IsOptional="True"/>
        <ParamInfo Name="LOD2" DataType="String" IsOptional="True"/>
        <ParamInfo Name="returnUnique" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lineIntersectsWith" ReturnType="Array" ReturnName="result" ReturnDescr="Array - intersecting objects" Descr="Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted." Syntax="lineIntersectsWith [begPos, endPos, objIgnore1, objIgnore2, sortByDistance]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="begPos" DataType="Array"/>
        <ParamInfo Name="endPos" DataType="Array"/>
        <ParamInfo Name="objIgnore1" DataType="Object" IsOptional="True"/>
        <ParamInfo Name="objIgnore2" DataType="Object" IsOptional="True"/>
        <ParamInfo Name="sortByDistance" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="linearConversion" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - respectful value from &quot;to&quot; range" Descr="Converts given value from given &quot;from&quot; range to wanted &quot;to&quot; range." Syntax="linearConversion [minFrom, maxFrom, value, minTo, maxTo, clip]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="minFrom" DataType="Scalar"/>
        <ParamInfo Name="maxFrom" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Scalar"/>
        <ParamInfo Name="minTo" DataType="Scalar"/>
        <ParamInfo Name="maxTo" DataType="Scalar"/>
        <ParamInfo Name="clip" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="linkItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced." Syntax="unit linkItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="list" ReturnType="Array" ReturnName="result" ReturnDescr="Array or Nothing" Descr="List of units that would activate given Trigger.It returns nothing before the simulation started, i.e. in (undelayed) init.sqf files." Syntax="  list trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="list" ReturnType="Nothing" ReturnName="result" ReturnDescr="Array or Nothing" Descr="List of units that would activate given Trigger.It returns nothing before the simulation started, i.e. in (undelayed) init.sqf files." Syntax="  list trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="listObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return the list of all objects of given type." Syntax="map listObjects type">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="listRemoteTargets" ReturnType="Array" ReturnName="result" ReturnDescr="Array containing [target name, last detected time]" Descr="Return list of datalink targets and time for which they will be/were known" Syntax="listRemoteTargets side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="listVehicleSensors" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns an array of the sensors in the given vehicle's config (configfile &gt;&gt; CfgVehicles &gt;&gt; vehicle &gt;&gt; Components &gt;&gt; SensorsManagerComponent &gt;&gt; Compon" Syntax="listVehicleSensors vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ln" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Natural logarithm of x." Syntax="  ln x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbAddArray" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - index" Descr="Adds list of rows of strings." Syntax="lnbAddArray [idc, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Any"/>
        <ParamInfo Name="[[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbAddColumn" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number or nil" Descr="Adds an column at given position. It returns the index of the newly added column." Syntax="_ctrl lnbAddColumn position">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="_ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbAddColumn" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number or nil" Descr="Adds an column at given position. It returns the index of the newly added column." Syntax="lnbAddColumn [idc(Number) or Control,position(Number)]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idcNumberorControl" DataType="Scalar"/>
        <ParamInfo Name="positionNumber" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbAddRow" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Row index" Descr="Adds an row of strings." Syntax="lnbAddRow [idc, data]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="data" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbAddRow" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Row index" Descr="Adds an row of strings." Syntax="ctrl lnbAddRow data">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="data" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clears all items in the given listbox or combobox." Syntax="lnbClear idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clears all items in the given listbox or combobox." Syntax="lnbClear ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbColor" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color." Syntax="lnbColor [idc, [row, column]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbColor" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color." Syntax="control lnbColor [row, column]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
        <ParamInfo Name="column" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbCurSelRow" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the index of the selected row id 2D listbox." Syntax="lnbCurSelRow idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbCurSelRow" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the index of the selected row id 2D listbox." Syntax="lnbCurSelRow ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the additional text (invisible) in an item with the given position of the 2D listbox." Syntax="lnbData [idc, [row, column]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Any"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the additional text (invisible) in an item with the given position of the 2D listbox." Syntax="ctrl lnbData [row, column]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
        <ParamInfo Name="column" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbDeleteColumn" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes column with given index from ListNBox control." Syntax="lnbDeleteColumn [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbDeleteColumn" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes column with given index from ListNBox control." Syntax="ctrl lnbDeleteColumn index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbDeleteRow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes row with the given index from the given listbox or combobox." Syntax="_ctrl lnbDeleteRow row">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="_ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbGetColumnsPosition" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use lnbSetColumnsPos to set positions." Syntax="lnbGetColumnsPosition _ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="_ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the picture name or path of the item with the given position of the 2D listbox." Syntax="lnbPicture [idc, [row, column]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the picture name or path of the item with the given position of the 2D listbox." Syntax="control lnbPicture [row, column]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
        <ParamInfo Name="column" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the item with the given position of the 2D listbox. Color is in format Color." Syntax="lnbSetColor [idc, [row, column], color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the item with the given position of the 2D listbox. Color is in format Color." Syntax="ctrl lnbSetColor [[row, column], color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetColumnsPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets relative screen X for ListNBox control columns positions." Syntax="lnbSetColumnsPos [idc, positions]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="positions" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetColumnsPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets relative screen X for ListNBox control columns positions." Syntax="ctrl lnbSetColumnsPos positions">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="positions" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetCurSelRow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the row with the given index of the 2D listbox." Syntax="lnbSetCurSelRow [idc, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetCurSelRow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the row with the given index of the 2D listbox." Syntax="ctrl lnbSetCurSelRow index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional text (invisible) in the item with the given position of the 2D listbox." Syntax="lnbSetData [idc, [row, column], data]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional text (invisible) in the item with the given position of the 2D listbox." Syntax="ctrl lnbSetData [[row, column], data]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the picture in the item with the given position of the 2D listbox.Name is the picture name." Syntax="lnbSetPicture [idc, [row, column], picturePathOrName]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="picturePathOrName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the picture in the item with the given position of the 2D listbox.Name is the picture name." Syntax="ctrl lnbSetPicture [[row, column], picturePathOrName]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="picturePathOrName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPictureColor" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the cell picture's colour." Syntax="lnbSetPictureColor [idc, [row, column], colour]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="colour" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPictureColor" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the cell picture's colour." Syntax="ctrl lnbSetPictureColor [[row, column], colour]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="colour" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPictureColorSelected" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the cell picture's colour on cell selection." Syntax="lnbSetPictureColorSelected [idc, [row, column], colour]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="colour" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPictureColorSelected" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the cell picture's colour on cell selection." Syntax="ctrl lnbSetPictureColorSelected [[row, column], colour]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="colour" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPictureRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the cell's right-picture. The picture is set to the end of the row, the column parameter does not matter." Syntax="lnbSetPictureRight [idc, [row, column], path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="path" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetPictureRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the cell's right-picture. The picture is set to the end of the row, the column parameter does not matter." Syntax="lnbSetPictureRight [idc, [row, column], path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="lnbSetText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional text (invisible) in the item with the given position of the 2D listbox." Syntax="lnbSetText [idc, [row, column], data]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional text (invisible) in the item with the given position of the 2D listbox." Syntax="ctrl lnbSetText [[row, column], data]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetTextRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets cell's right-aligned text. Does not replace cell's text." Syntax="lnbSetTextRight [idc, [row, column], text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetTextRight" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets cell's right-aligned text. Does not replace cell's text." Syntax="ctrl lnbSetTextRight [[row, column], text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetTooltip" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets tooltip on the item with the given row and column of the 2D listbox." Syntax="lnbSetTooltip [idc, [row, column], text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetTooltip" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets tooltip on the item with the given row and column of the 2D listbox." Syntax="ctrl lnbSetTooltip [[row, column], text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional integer value in the item with the position index of the 2D listbox." Syntax="lnbSetValue [idc, [row, column], value]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the additional integer value in the item with the position index of the 2D listbox." Syntax="control lnbSetValue [[row, column], value]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[row, column]" DataType="Array"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSize" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [rows, columns]" Descr="Returns size of 2D listbox or combobox as [rows, columns]." Syntax="lnbSize ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSize" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [rows, columns]" Descr="Returns size of 2D listbox or combobox as [rows, columns]." Syntax="lnbSize ctrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts given multicolumn listbox by lnbText in given column in ascending or descending order." Syntax="lnbSort [idc, column, reversed]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="column" DataType="Scalar"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts given multicolumn listbox by lnbText in given column in ascending or descending order." Syntax="control lnbSort [column, reversed]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="column" DataType="Scalar"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSortByValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order." Syntax="lnbSortByValue [idc, column, reversed]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="column" DataType="Scalar"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbSortByValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order." Syntax="control lnbSortByValue [column, reversed]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="column" DataType="Scalar"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the shown text in the item with the given position of the given 2D listbox." Syntax="control lnbText [row,column]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Any"/>
        <ParamInfo Name="column" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the additional integer value in the item with the given position of the 2D listbox." Syntax="lnbValue [idc, [row, column]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[row, column]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lnbValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the additional integer value in the item with the given position of the 2D listbox." Syntax="ctrl lnbValue [row, column]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="row" DataType="Scalar"/>
        <ParamInfo Name="column" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="load" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current sum of mass from items stored in all unit's containers." Syntax="load unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadAbs" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current sum of mass from items stored in all unit's containers, linked items and weapons." Syntax="loadAbs unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadBackpack" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current sum of mass from items stored in a backpack." Syntax="loadBackpack unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadFile" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return content of given filename." Syntax="loadFile fileName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fileName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadGame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Load a game from the autosave. If failed, restart the mission." Syntax="loadGame">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="loadIdentity" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Loads person's identity from Objects.sav file in campaign directory (from entry name)." Syntax="person loadIdentity name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadMagazine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Initiates the loading action on given weapon of the turret of a transport." Syntax="transport loadMagazine [turretPath, weaponName, magazineName]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="transport" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadOverlay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates the load overlay dialog for the specified type of overlay." Syntax="map loadOverlay config">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadStatus" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Loads object's properties from Objects.sav file in campaign directory (from entry name)." Syntax="obj loadStatus entryName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entryName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadUniform" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current sum of mass from items stored in a uniform." Syntax="loadUniform unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="loadVest" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current sum of mass from items stored in a vest." Syntax="loadVest unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="local" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts)." Syntax="local object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="local" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts)." Syntax="local object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="localNamespace" ReturnType="Namespace" ReturnName="result" ReturnDescr="Namespace" Descr="Returns local Namespace attached to the mission." Syntax="localNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="localize" ReturnType="String" ReturnName="result" ReturnDescr="String - text found in corresponding entry in stringtable file" Descr="Used to internationalise text messages. A string is returned from Stringtable.csv (or Stringtable.xml) which corresponds to the stringName." Syntax="localize stringName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="stringName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="locationPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,z], where z is -1 * getTerrainHeightASL at the location" Descr="Returns the position of a location. If the location is attached to an object, that object's position is returned." Syntax="locationPosition location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lock" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param." Syntax="vehicleName lock locked">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="locked" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lock" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param." Syntax="vehicleName lock lockstate">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="lockstate" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockCameraTo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target." Syntax="vehicle lockCameraTo [target, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Any"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local." Syntax="vehicle lockCargo lock">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local." Syntax="vehicle lockCargo [index, lock]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockDriver" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock the driver position of the vehicle. This command must be executed where vehicle is local." Syntax="vehicle lockDriver lock">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockIdentity" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true, if it was applied" Descr="Locks the identity of a person. This will disable default identity." Syntax="lockIdentity unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockInventory" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Lock or unlock a vehicle's inventory access. This command can also lock backpack a unit is wearing to prevent access by a third party." Syntax="vehicle lockInventory lock">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local." Syntax="vehicle lockTurret [turret path,lock]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretpath" DataType="Scalar"/>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockWP" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes." Syntax="groupName lockWP lock">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockWP" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes." Syntax="groupName lockWP lock">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="lock" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="locked" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - since 0." Descr="Check if vehicle is locked for Persons. If it is locked, Persons cannot mount / dismount without order." Syntax="locked vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockedCargo" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether cargo position of the vehicle is locked." Syntax="vehicle lockedCargo cargoIndex">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="cargoIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockedDriver" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether driver position of the vehicle turret is locked." Syntax="lockedDriver vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockedInventory" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Get a vehicle's inventory lock state. Can also be used on a unit's backback (see lockInventory)." Syntax="lockedInventory vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lockedTurret" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether gunner position of the vehicle turret is locked." Syntax="vehicle lockedTurret turretPath">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="log" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Base-10 logarithm of x." Syntax=" log x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="logEntities" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a log file containing the list of all game entities in scene. File is created in the same directory as .rpt file." Syntax="logEntities">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="logNetwork" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - handle for the logging" Descr="Registers new log file recording a network traffic and returns handle of the log." Syntax="logNetwork logFile">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="logFile" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="logNetworkTerminate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Terminates a network log file started with logNetwork with the given handle" Syntax="logNetworkTerminate handle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="handle" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lookAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit(s) is/are looking at (target or position)." Syntax="unit(s) lookAt position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lookAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit(s) is/are looking at (target or position)." Syntax="unit(s) lookAt position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lookAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit(s) is/are looking at (target or position)." Syntax="unit(s) lookAt position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lookAt" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Control what the unit(s) is/are looking at (target or position)." Syntax="unit(s) lookAt position">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit(s)" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="lookAtPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Center the map on,and point the camera at,the position." Syntax="map lookAtPos position">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazineCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Format: [&quot;MagType1&quot;,&quot;MagType1&quot;,&quot;MagType2&quot;..." Descr="Get array with magazines from ammo box (or any general weapon holder container)." Syntax="magazineCargo object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazineTurretAmmo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns ammo count of given type from given turret    Broken when vehicle has multiple magazines of the same type" Syntax="vehicle magazineTurretAmmo [magazineClass, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineClass" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of type names of all vehicle's magazines." Syntax="magazines vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of type names of all vehicle's magazines." Syntax="magazines [vehicle, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesAllTurrets" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in the following format: [[className, turretPath, ammoCount, id, creator" Descr="Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts." Syntax="magazinesAllTurrets vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesAmmo" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes)." Syntax="magazinesAmmo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesAmmo" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes)." Syntax="magazinesAmmo [vehicle, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesAmmoCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines." Syntax="magazinesAmmoCargo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesAmmoFull" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of arrays of all vehicle's magazines with extended information about them.Output format:[[magazine1],[magazine2],[magazine3]..." Syntax="magazinesAmmoFull vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesAmmoFull" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array of arrays of all vehicle's magazines with extended information about them.Output format:[[magazine1],[magazine2],[magazine3]..." Syntax="magazinesAmmoFull [vehicle, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetail" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids." Syntax="magazinesDetail vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetail" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids." Syntax="magazinesDetail [vehicle, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetailBackpack" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with the type names of all the unit's backpack magazines." Syntax="magazinesDetailBackpack unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetailBackpack" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with the type names of all the unit's backpack magazines." Syntax="magazinesDetailBackpack [unit, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetailUniform" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with the type names of all the unit's uniform magazines." Syntax="magazinesDetailUniform unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetailUniform" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with the type names of all the unit's uniform magazines." Syntax="magazinesDetailUniform [unit, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetailVest" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with the type names of all the unit's vest magazines." Syntax="magazinesDetailVest unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesDetailVest" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns an array with the type names of all the unit's vest magazines." Syntax="magazinesDetailVest [unit, includeEmpty]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesTurret" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns all magazines of given turret. Use turret path [-1] for driver's turret." Syntax="vehicle magazinesTurret turretPath">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="magazinesTurret" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns all magazines of given turret. Use turret path [-1] for driver's turret." Syntax="vehicle magazinesTurret [turretPath, includeEmpty]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
        <ParamInfo Name="includeEmpty" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mapAnimAdd" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add next frame to map animation." Syntax="mapAnimAdd [time, zoom, position]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
        <ParamInfo Name="zoom" DataType="Scalar"/>
        <ParamInfo Name="position" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mapAnimClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Clear map animation." Syntax="mapAnimClear">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="mapAnimCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Play map animation." Syntax="mapAnimCommit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="mapAnimDone" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if map animation is finished." Syntax=" mapAnimDone">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="mapCenterOnCamera" ReturnType="Nothing" ReturnName="Position" ReturnDescr="Nothing" Descr="mapCenterOnCamera  syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once." Syntax="mainmap mapCenterOnCamera enable">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="mainmap" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mapCenterOnCamera" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - PositionWorld of the map center (camera focus object) in render scope" Descr="mapCenterOnCamera  syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once." Syntax="mapCenterOnCamera minimap">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="minimap" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mapGridPosition" ReturnType="String" ReturnName="result" ReturnDescr="String - grid position" Descr="Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world." Syntax="mapGridPosition param">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="param" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mapGridPosition" ReturnType="String" ReturnName="result" ReturnDescr="String - grid position" Descr="Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world." Syntax="mapGridPosition param">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="param" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markAsFinishedOnSteam" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise." Syntax="markAsFinishedOnSteam">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="markerAlpha" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Gets the marker alpha. See setMarkerAlpha." Syntax="markerAlpha markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerBrush" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the marker brush. See setMarkerBrush." Syntax="markerBrush name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerColor" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns marker color for given marker. See setMarkerColor. Note: This function is identical to getMarkerColor." Syntax="markerColor markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Get marker direction." Syntax=" markerDir markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x, y, 0]" Descr="Get marker Position. Note: This function is identical to getMarkerPos." Syntax="markerPos markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGL if preserveElevation is true or [x, y, 0] if preserve" Descr="Get marker Position. Note: This function is identical to getMarkerPos." Syntax="markerPos [markerName, preserveElevation]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
        <ParamInfo Name="preserveElevation" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerShape" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the marker shape. See setMarkerShape for a list of strings that can be returned." Syntax="markerShape name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerSize" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [a-axis, b-axis], where:a-axis: Number - 1/2 width of marker" Descr="Get marker size. Note: This function is identical to getMarkerSize." Syntax="markerSize markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Get marker text." Syntax=" markerText markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="markerType" ReturnType="String" ReturnName="result" ReturnDescr="String. See cfgMarkers." Descr="Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers." Syntax=" markerType markerName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="matrixMultiply" ReturnType="Array" ReturnName="result" ReturnDescr="Array - resulting matrix of the size n(rows) ✕ m(columns)" Descr="Resulting matrix of matrix multiplication.First matrix must be of size N✕K, while the second must be of size K✕M." Syntax="matrix1 matrixMultiply matrix2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="matrix1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="matrix2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="matrixTranspose" ReturnType="Array" ReturnName="result" ReturnDescr="Array - transposed matrix" Descr="Returns transposed input matrix" Syntax="matrixTranspose matrix">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="matrix" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="max" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="The greater of a,b" Syntax="a max b">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="a" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="b" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="members" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of members in given team." Syntax="members team">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuAction" ReturnType="String" ReturnName="result" ReturnDescr="String - Action" Descr="Returns action stored in item on given path." Syntax="menuAction [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuAction" ReturnType="String" ReturnName="result" ReturnDescr="String - Action" Descr="Returns action stored in item on given path." Syntax="control menuAction path">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuAdd" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Adds new submenu entry into item on given path." Syntax="menuAdd [idc, path, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuAdd" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Index of the item" Descr="Adds new submenu entry into item on given path." Syntax="control menuAdd [path, text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuChecked" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns if item on given path is checked or not." Syntax="menuChecked [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuChecked" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns if item on given path is checked or not." Syntax="control menuChecked path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all entries from given menu strip." Syntax="menuClear idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all entries from given menu strip." Syntax="menuClear control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuCollapse" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapses item on given path and all its childs." Syntax="menuCollapse [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuCollapse" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapses item on given path and all its childs." Syntax="control menuCollapse path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns data stored in menu entry on given path." Syntax="menuData [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns data stored in menu entry on given path." Syntax="control menuData path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuDelete" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Deletes menu entry on given path." Syntax="menuDelete [idc,path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuDelete" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Deletes menu entry on given path." Syntax="control menuDelete path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables disabled menu entry on given path." Syntax="menuEnable [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables disabled menu entry on given path." Syntax="control menuEnable path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns if menu entry on given path is enabled or not." Syntax="menuEnabled [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns if menu entry on given path is enabled or not." Syntax="control menuEnabled path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuExpand" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Expands given menu entry on given path and all its parents so entry is visible." Syntax="menuExpand [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuExpand" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Expands given menu entry on given path and all its parents so entry is visible." Syntax="control menuExpand path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuHover" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns path to menu entry mouse is currently hovering over." Syntax="menuHover idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuHover" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns path to menu entry mouse is currently hovering over." Syntax="menuHover control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns picture set into item on given path" Syntax="menuPicture [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns picture set into item on given path" Syntax="control  menuPicture path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new action into menu entry on given path." Syntax="menuSetAction [idc, path, action]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new action into menu entry on given path." Syntax="control menuSetAction [path, action]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetCheck" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets item on given path to be checked or not." Syntax="menuSetCheck [idc, path, checked]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="checked" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetCheck" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets item on given path to be checked or not." Syntax="control menuSetCheck [path, checked]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="checked" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new data into item on given path." Syntax="menuSetData [idc, path, data]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new data into item on given path." Syntax="control menuSetData [path, data]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new picture into menu entry on given path." Syntax="menuSetPicture [idc, path, picture]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="picture" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new picture into menu entry on given path." Syntax="control menuSetPicture [path, picture]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="picture" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetShortcut" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets shortcut of given menu strip entry." Syntax="menuSetShortcut [idc, path, shortcut]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="shortcut" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetShortcut" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets shortcut of given menu strip entry." Syntax="control menuSetShortcut [path, shortcut]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="shortcut" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetText" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets text of given menu strip entry." Syntax="menuSetText [idc, path, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetText" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets text of given menu strip entry." Syntax="control menuSetText [path, text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetURL" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets weblink (URL) of given menu strip entry." Syntax="menuSetURL [idc, path, link]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="link" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetURL" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets weblink (URL) of given menu strip entry." Syntax="control menuSetURL [path, link]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="link" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new value into menu entry on given path." Syntax="menuSetValue [idc, path, value]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets new value into menu entry on given path." Syntax="control menuSetValue [path, value]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuShortcut" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns shortcut related to menu entry on given path." Syntax="menuShortcut [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuShortcut" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns shortcut related to menu entry on given path." Syntax="control menuShortcut path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuShortcutText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a string containing shortcut text for menu item on the given path." Syntax="menuShortcutText [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuShortcutText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a string containing shortcut text for menu item on the given path." Syntax="control menuShortcutText path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSize" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns how many sub entries is in item on given path." Syntax="menuSize [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSize" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns how many sub entries is in item on given path." Syntax="control menuSize path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts subentries of item on given path by their text." Syntax="menuSort [idc, path, AtoZ]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="AtoZ" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts subentries of item on given path by their text." Syntax="control menuSort [path, AtoZ]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="AtoZ" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns current text set in menu entry on given path." Syntax="menuText [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns current text set in menu entry on given path." Syntax="control menuText path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuURL" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns current URL set in entry on given path." Syntax="menuURL [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuURL" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns current URL set in entry on given path." Syntax="control menuURL path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="menuValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current value set in menu entry on given path." Syntax="menuValue [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="min" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="The smaller of a,b" Syntax="a min b">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="a" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="b" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mineActive" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the given mine is active." Syntax="mineActive obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="mineDetectedBy" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if mine has been detected by a given side" Syntax="mine mineDetectedBy faction">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="mine" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="faction" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="missileTarget" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns a guided missile's target." Syntax="missileTarget munition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="munition" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="missileTargetPos" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - position in format PositionASL" Descr="Returns a guided missile's target position." Syntax="missileTargetPos munition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="munition" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="missionConfigFile" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Return root of mission Description.ext entries hierarchy." Syntax="missionConfigFile">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="missionDifficulty" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it's used one from player's options." Syntax="missionDifficulty">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="missionName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return currently loaded mission file (path to mission.pbo, relative to game exe)." Syntax="missionName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="missionNamespace" ReturnType="Namespace" ReturnName="result" ReturnDescr="Namespace" Descr="Returns the global namespace attached to mission." Syntax="missionNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="missionStart" ReturnType="Array" ReturnName="result" ReturnDescr="Array - real local date and time (similar to date format but with seconds)" Descr="Returns date and time when mission started in format [year, month, day, hour, minute, second]." Syntax="missionStart">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="missionVersion" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number: SQM version" Descr="Returns the version of the current mission." Syntax="missionVersion">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="mod" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Remainder of a divided by b." Syntax="a mod b">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="a" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="b" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="modParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array - retrieved requested data on success or empty array []" Descr="Returns list of mod paramters according to given options, values are in same order as the given options." Syntax="modParams [modClass, options]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="modClass" DataType="String"/>
        <ParamInfo Name="options" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="modelToWorld" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - translated world position, format PositionAGL" Descr="Translates relative position from object model space into world position." Syntax="model modelToWorld position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="model" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="modelToWorldVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - world position in format PositionAGL" Descr="Converts position from object model space to world space in render time scope." Syntax="object modelToWorldVisual modelPos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="modelPos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="modelToWorldVisualWorld" ReturnType="Array" ReturnName="result" ReturnDescr="Array - World position in format PositionASL" Descr="Converts position from object model space to world space in render time." Syntax="obj modelToWorldVisualWorld modelPos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="modelPos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="modelToWorldWorld" ReturnType="Array" ReturnName="result" ReturnDescr="Array:" Descr="Converts position from object model space to world space (usable by setPosWorld for example)." Syntax="obj modelToWorldWorld modelPos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="modelPos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moonIntensity" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the intensity of the moon's brightness in range 0...1." Syntax="moonIntensity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="moonPhase" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon." Syntax="moonPhase date">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="year" DataType="Scalar"/>
        <ParamInfo Name="month" DataType="Scalar"/>
        <ParamInfo Name="day" DataType="Scalar"/>
        <ParamInfo Name="hour" DataType="Scalar"/>
        <ParamInfo Name="minute" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="morale" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Checks a current morale level of the unit (-1..+1)." Syntax="morale unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="move" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a move waypoint on the given position (format Position or Position2D) and makes it the currently active group waypoint." Syntax="group move position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="move" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a move waypoint on the given position (format Position or Position2D) and makes it the currently active group waypoint." Syntax="group move position">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="move3DENCamera" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves Eden Editor camera to given position, with or without offset." Syntax="move3DENCamera [position,useOffset]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="useOffset" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInAny" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success, false on failure" Descr="Moves unit to the first available seat in a vehicle." Syntax="unit moveInAny vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Move soldier into vehicle cargo position (Immediate, no animation)." Syntax="unitName moveInCargo vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Move soldier into vehicle cargo position (Immediate, no animation)." Syntax="unitName moveInCargo [vehicle, CargoIndex]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="CargoIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInCommander" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Move soldier into vehicle commander position (Immediate, no animation)." Syntax="unitName moveInCommander vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInDriver" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Move soldier into vehicle driver position (Immediate, no animation)." Syntax="unit moveInDriver vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInGunner" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Move soldier into vehicle gunner position (Immediate, no animation)." Syntax="unitName moveInGunner vehicle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveInTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves the soldier into the vehicle's turret. (Immediately, without animation)." Syntax="unitName moveInTurret [vehicle, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveObjectToEnd" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects)." Syntax="map moveObjectToEnd object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves the soldier out of vehicle, immediately, without animation." Syntax="moveOut soldier">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current time of the most important RTM animation currently being played on the soldier." Syntax="moveTime soldier">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveTo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Low level command to person to move to given position." Syntax="person moveTo position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveToCompleted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if latest low level moveTo command is finished." Syntax="moveToCompleted person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="moveToFailed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if latest low level moveTo command failed." Syntax=" moveToFailed person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="musicVolume" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Checks the current music volume (set by fadeMusic)" Syntax="musicVolume">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="nMenuItems" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the total number of user-added menu items belonging to the given menu." Syntax="map nMenuItems menuName">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="menuName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nMenuItems" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the total number of user-added menu items belonging to the given menu." Syntax="map nMenuItems index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="name" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="The name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit." Syntax="name object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="name" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="The name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit." Syntax="name location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nameSound" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the nameSound of a person." Syntax="nameSound person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="name_location" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the location's name." Syntax="name object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="name_location" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the location's name." Syntax="name location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="namedProperties" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Arrays" Descr="Returns a list of named properties on Geometry LOD." Syntax="namedProperties object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - not sorted" Descr="Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed." Syntax="position nearEntities radius">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - not sorted" Descr="Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed." Syntax="position nearEntities radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - not sorted" Descr="Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed." Syntax="position nearEntities [type, radius]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="Any"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearEntities" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - not sorted" Descr="Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed." Syntax="position nearEntities [type, radius]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="Any"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one." Syntax="position nearObjects radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one." Syntax="position nearObjects radius">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one." Syntax="position nearObjects [typeName, radius]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="typeName" DataType="String"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one." Syntax="position nearObjects [typeName, radius]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="typeName" DataType="String"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearObjectsReady" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether all data are loaded to nearObjects will return in reasonable time." Syntax="position nearObjectsReady radius">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearObjectsReady" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether all data are loaded to nearObjects will return in reasonable time." Syntax="position nearObjectsReady radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearRoads" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - road segments within radius" Descr="Find the road segments within the circle of given radius." Syntax="pos nearRoads radius">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearRoads" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - road segments within radius" Descr="Find the road segments within the circle of given radius." Syntax="pos nearRoads radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearSupplies" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of Objects" Descr="Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius." Syntax="origin nearSupplies radius">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="origin" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearSupplies" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of Objects" Descr="Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius." Syntax="origin nearSupplies radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="origin" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearTargets" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - nested; consisting of:0: Position (perceived, includes judgment and mem" Descr="Returns a list of targets within the defined range.&quot;Targets&quot; are not restricted to enemy units." Syntax="unit nearTargets range">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="range" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestBuilding" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Finds the nearest building to a given object or position. A &quot;building&quot; is defined as an object that is of class &quot;House&quot; and contains a path LOD." Syntax="nearestBuilding position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestBuilding" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Finds the nearest building to a given object or position. A &quot;building&quot; is defined as an object that is of class &quot;House&quot; and contains a path LOD." Syntax="nearestBuilding position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestLocation" ReturnType="Location" ReturnName="Location" ReturnDescr="Location" Descr="Return the closest location of specified class to a given position.Checked range is unlimited (i.e. covers the whole map)." Syntax="nearestLocation [position, locationClass]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="locationClass" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestLocationWithDubbing" ReturnType="Location" ReturnName="Location" ReturnDescr="Location" Descr="Find the nearest location (to the given position) having it speech non-empty." Syntax="nearestLocationWithDubbing position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestLocationWithDubbing" ReturnType="Location" ReturnName="Location" ReturnDescr="Location" Descr="Find the nearest location (to the given position) having it speech non-empty." Syntax="nearestLocationWithDubbing position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestLocations" ReturnType="Array" ReturnName="result" ReturnDescr="Array of locations" Descr="Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest." Syntax="nearestLocations [position, [locationType1, locationType2, ...], radius, sortPosition]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="[locationType1, locationType2, ...]" DataType="Array"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="sortPosition" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object - Nearest object, objNull otherwise" Descr="Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters." Syntax="nearestObject [position, type]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object - Nearest object, objNull otherwise" Descr="Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters." Syntax="nearestObject position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object - nearest object, objNull otherwise" Descr="Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters." Syntax="position nearestObject type">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object - nearest object, objNull otherwise" Descr="Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters." Syntax="position nearestObject id">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of objects" Descr="Returns a list of nearest objects of the given types to the given position or object, within the specified distance." Syntax="nearestObjects [position, types, radius, 2Dmode]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="types" DataType="Array"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nearestTerrainObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of terrain objects" Descr="Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance." Syntax="nearestTerrainObjects [position, types, radius, sort, 2Dmode]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="types" DataType="Array"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="sort" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="2Dmode" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="needReload" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number Range: 0-1, 0: full mag, 1: empty mag" Descr="Return how much vehicle wants to reload its weapons." Syntax="needReload vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="netId" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Unique ID of object or group.  As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well." Syntax="netId var">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="var" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="netId" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Unique ID of object or group.  As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well." Syntax="netId var">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="var" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="newOverlay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates the new overlay dialog for the specified type of overlay." Syntax="map newOverlay config">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nextMenuItemIndex" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the next available menu item index." Syntax="nextMenuItemIndex map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="nextWeatherChange" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the remaining time (in seconds) over which the current weather change will occur." Syntax=" nextWeatherChange">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="nil" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Nil value. This value can be used to undefine existing variables." Syntax="nil">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="numberOfEnginesRTD" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the number of engines a helicopter has." Syntax="numberOfEnginesRTD helicopterRTD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="numberToDate" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Convert float number to a date." Syntax="numberToDate [year,time]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="year" DataType="Scalar"/>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="objStatus" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the status of an objective that was defined in briefing.html." Syntax="objectivenumber objStatus status">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="objectivenumber" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="status" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="objectCurators" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array with all curators which can edit given object." Syntax="objectCurators obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="objectFromNetId" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Get object with given unique ID. If object is a group use groupFromNetId." Syntax="objectFromNetId id">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="id" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="objectParent" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns parent of an object if the object is proxy, otherwise objNull." Syntax="objectParent object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onBriefingGroup" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing." Syntax="onBriefingGroup soundName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onBriefingNotes" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing." Syntax="onBriefingNotes soundName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onBriefingPlan" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing." Syntax="onBriefingPlan soundName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onBriefingTeamSwitch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select a sound declared in the Description.ext of the mission to be played the first time the TeamSwitch tab is selected in the briefing." Syntax="onBriefingTeamSwitch soundName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onCommandModeChanged" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command." Syntax="onCommandModeChanged code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onCommandModeChanged" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command." Syntax="onCommandModeChanged code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="code" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onDoubleClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when the user double clicks on the map." Syntax="map onDoubleClick command">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onEachFrame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Runs given statement every frame.  i Since Arma 3 v1." Syntax="onEachFrame statement">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="statement" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onEachFrame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Runs given statement every frame.  i Since Arma 3 v1." Syntax="onEachFrame statement">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="statement" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onGroupIconClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when player clicked on group marker (3D or in a map). The code executed once." Syntax="onGroupIconClick command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onGroupIconClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when player clicked on group marker (3D or in a map). The code executed once." Syntax="onGroupIconClick command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onGroupIconOverEnter" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when player moves pointer over group marker (3D or in a map)." Syntax="onGroupIconOverEnter command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onGroupIconOverEnter" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when player moves pointer over group marker (3D or in a map)." Syntax="onGroupIconOverEnter command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onGroupIconOverLeave" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once." Syntax="onGroupIconOverLeave command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onGroupIconOverLeave" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once." Syntax="onGroupIconOverLeave command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onHCGroupSelectionChanged" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when high command group selection has been changed." Syntax="onHCGroupSelectionChanged command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onHCGroupSelectionChanged" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when high command group selection has been changed." Syntax="onHCGroupSelectionChanged command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onMapSingleClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Define action performed when user clicks in map by executing command string." Syntax="onMapSingleClick command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onMapSingleClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Define action performed when user clicks in map by executing command string." Syntax="onMapSingleClick command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onMapSingleClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Define action performed when user clicks in map by executing command string." Syntax="params onMapSingleClick command">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="params" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onMapSingleClick" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Define action performed when user clicks in map by executing command string." Syntax="params onMapSingleClick command">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="params" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPlayerConnected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command will execute attached code whenever a player is connected to a MP session." Syntax="onPlayerConnected code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="code" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPlayerConnected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command will execute attached code whenever a player is connected to a MP session." Syntax="onPlayerConnected code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPlayerDisconnected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command will execute attached code whenever a player is leaving an MP session." Syntax="onPlayerDisconnected code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="code" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPlayerDisconnected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command will execute attached code whenever a player is leaving an MP session." Syntax="onPlayerDisconnected code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPreloadFinished" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start. i Since Arma 3 v1." Syntax="onPreloadFinished command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPreloadFinished" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start. i Since Arma 3 v1." Syntax="onPreloadFinished command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPreloadStarted" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start." Syntax="onPreloadStarted command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onPreloadStarted" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start." Syntax="onPreloadStarted command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="command" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onShowNewObject" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior." Syntax="map onShowNewObject command">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onTeamSwitch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when the team switch is finished." Syntax="onTeamSwitch commandset">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="commandset" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="onTeamSwitch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines an action performed when the team switch is finished." Syntax="onTeamSwitch commandset">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="commandset" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="openCuratorInterface" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force opens curator interface." Syntax="openCuratorInterface">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="openDLCPage" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - result" Descr="Opens a Steam page of the app with given appId." Syntax="openDLCPage dlcID">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="dlcID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="openMap" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - equivalent of visibleMap" Descr="Shows in-game map. If forced, cannot be closed." Syntax="openMap show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="openMap" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - equivalent of visibleMap" Descr="Shows in-game map. If forced, cannot be closed." Syntax="openMap [show, forced]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
        <ParamInfo Name="forced" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="openSteamApp" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Opens a Steam application, returns false if it wasn't possible to run the application." Syntax="openSteamApp appID">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="appID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="openYoutubeVideo" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=...." Syntax="openYoutubeVideo youTubeUrl">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="youTubeUrl" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="orderGetIn" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything." Syntax="unitArray orderGetIn order">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="unitArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="order" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="overcast" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the current overcast level. Zero is clear skies, one is maximum cloud cover." Syntax=" overcast">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="overcastForecast" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the overcast forecast." Syntax="overcastForecast">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="owner" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="On server machine, returns the ID of the client where the object is local. Otherwise returns 0. For use on clients clientOwner command is available." Syntax="owner object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="param" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - extracted value on success or default value otherwise." Descr="Extracts a single value with given index from input argument, similar to BIS_fnc_param." Syntax="param [index, defaultValue, expectedDataTypes, expectedArrayCount]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="defaultValue" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="expectedDataTypes" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="expectedArrayCount" DataType="Any" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="param" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - extracted value on success or default value otherwise." Descr="Extracts a single value with given index from input argument, similar to BIS_fnc_param." Syntax="argument param [index, defaultValue, expectedDataTypes, expectedArrayCount]">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="argument" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="defaultValue" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="expectedDataTypes" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="expectedArrayCount" DataType="Any" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="params" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - false if error occurred or default value has been used, otherwise true" Descr="Parses input argument into array of private variables, similar to BIS_fnc_param." Syntax="params [element1, element2,...elementN]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="element1" DataType="Any"/>
        <ParamInfo Name="element2" DataType="Any"/>
        <ParamInfo Name="...elementN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="params" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - false if error occurred or default value has been used, otherwise true" Descr="Parses input argument into array of private variables, similar to BIS_fnc_param." Syntax="argument params [element1, element2,...elementN]">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="argument" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="element1" DataType="Any"/>
        <ParamInfo Name="element2" DataType="Any"/>
        <ParamInfo Name="...elementN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="parseNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number." Syntax="parseNumber string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="parseNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - 0 if false, 1 if true" Descr="An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number." Syntax="parseNumber boolean">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="boolean" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="parseSimpleArray" ReturnType="Array" ReturnName="result" ReturnDescr="Array - valid array" Descr="Converts given, formatted as simple array, String into a valid Array." Syntax="parseSimpleArray stringArray">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="stringArray" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="parseText" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from stringtable." Syntax="parseText text">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="parsingNamespace" ReturnType="Namespace" ReturnName="result" ReturnDescr="Namespace" Descr="Returns the global namespace attached to config parser." Syntax="parsingNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="particlesQuality" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current settings for particles quality (configure-&gt;video-&gt;general-&gt;particles)." Syntax="particlesQuality">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="periscopeElevation" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [elevation, userisblocked], where:elevation: Number - current" Descr="Returns current periscope elevation value, see also elevatePeriscope." Syntax="periscopeElevation vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="pi" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="pi (180 degrees converted to Radians)." Syntax="pi">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="pickWeaponPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission)." Syntax="pickWeaponPool object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="pitch" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the pitch of a persons voice." Syntax="pitch person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="pixelGrid" ReturnType="Scalar" ReturnName="result" ReturnDescr="Scalar -" Descr="Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids." Syntax="pixelGrid">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="pixelGridBase" ReturnType="Scalar" ReturnName="result" ReturnDescr="Scalar -" Descr="Returns grid size based on screen resolution." Syntax="pixelGridBase">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="pixelGridNoUIScale" ReturnType="Scalar" ReturnName="result" ReturnDescr="Scalar -" Descr="Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids As mentioned in the name of this command, the user interfac" Syntax="pixelGridNoUIScale">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="pixelH" ReturnType="Scalar" ReturnName="result" ReturnDescr="Scalar -" Descr="Returns the height of one pixel for current resolution." Syntax="pixelH">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="pixelW" ReturnType="Scalar" ReturnName="result" ReturnDescr="Scalar -" Descr="Returns width of one pixel for current resolution." Syntax="pixelW">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="playAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person, a smooth transition to the given action will be initiated.For Arma 3 actions see: playAction/actions." Syntax="soldier playAction action">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playActionNow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded." Syntax="soldier playActionNow action">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playGesture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person,a smooth transition to the given move will be initiated." Syntax="soldier playGesture moveName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="moveName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playMission" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The mission is launched (from the main menu). Both campaign and mission are given as their directory name." Syntax="playMission [campaign, mission, skipBriefing]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="campaign" DataType="String"/>
        <ParamInfo Name="mission" DataType="Any"/>
        <ParamInfo Name="skipBriefing" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playMove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on person, smooth transition to given move will be done." Syntax="unitName playMove moveName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="moveName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playMoveNow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded." Syntax="soldier playMoveNow moveName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="moveName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playMusic" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays music defined in Description.ext#CfgMusic or config.cpp." Syntax="playMusic musicName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="musicName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playMusic" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays music defined in Description.ext#CfgMusic or config.cpp." Syntax="playMusic [musicName, start]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="musicName" DataType="String"/>
        <ParamInfo Name="start" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playScriptedMission" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Load the given world, launch an empty mission and execute the given, expression." Syntax="playScriptedMission [world,expression,config,ignoreChildWindow]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="world" DataType="String"/>
        <ParamInfo Name="expression" DataType="Code"/>
        <ParamInfo Name="config" DataType="Config" IsOptional="True"/>
        <ParamInfo Name="ignoreChildWindow" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playSound" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing, since Arma 3 v1.99." Descr="Selects sound from Description.ext#CfgSounds or config.cpp. For Arma 3 sounds see CfgSounds." Syntax="playSound soundName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playSound" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing, since Arma 3 v1.99." Descr="Selects sound from Description.ext#CfgSounds or config.cpp. For Arma 3 sounds see CfgSounds." Syntax="playSound [soundName, isSpeech, offset]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
        <ParamInfo Name="isSpeech" DataType="Boolean"/>
        <ParamInfo Name="offset" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playSound3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified." Syntax="playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance, offset]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
        <ParamInfo Name="soundSource" DataType="Object"/>
        <ParamInfo Name="isInside" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="soundPosition" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="volume" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="soundPitch" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="distance" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="offset" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playableSlotsNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the number of available slots in mission per side (both empty and taken)." Syntax="playableSlotsNumber side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="playableUnits" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides east, west, resistance/indepen" Syntax="playableUnits">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="playerRespawnTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the player remaining time to respawn." Syntax="playerRespawnTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="playerSide" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Returns the player's side. This is valid even when the player controlled person is dead (a difference from side player)." Syntax="playerSide">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="playersNumber" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return count of players playing on given side. Works only in multiplayer, in singleplayer always returns 0." Syntax="playersNumber side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="posScreenToWorld" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - world position in format [x,y,0]" Descr="Convert screen coordinates in map to world coordinates." Syntax="map posScreenToWorld [x, y]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="posWorldToScreen" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - screen coordinates in format [x, y]" Descr="Convert world coordinates to screen coordinates in map." Syntax="map posWorldToScreen position">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="position" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGLS" Descr="Synonym for getPos." Syntax="position object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="position" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format [x,y,z], where z is -1 * getTerrainHeightASL at the location" Descr="Synonym for getPos." Syntax="position location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="positionCameraToWorld" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - Camera world position, format PositionAGL" Descr="Transforms position from camera coordinate space to world coordinate space. Camera axes are relative to camera orientation." Syntax="positionCameraToWorld cameraPos">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="cameraPos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectAdjust" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set post process effect parameters" Syntax="effect ppEffectAdjust settings">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="settings" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectAdjust" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set post process effect parameters" Syntax="handle ppEffectAdjust settings">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="handle" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="settings" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Commit post process effect in given time." Syntax="effect ppEffectCommit commit">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="commit" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Commit post process effect in given time." Syntax="handle ppEffectCommit commit">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="handle" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="commit" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCommit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Commit post process effect in given time." Syntax="handles ppEffectCommit commit">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="handles" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="commit" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCommitted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether given post process effect is committed" Syntax="ppEffectCommitted effect">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCommitted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether given post process effect is committed" Syntax="ppEffectCommitted handle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="handle" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCreate" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - handle or -1 if failed" Descr="Creates Post process effects specified by effect name and priority." Syntax="ppEffectCreate [name, priority]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="priority" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectCreate" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Numbers [handle1, ..." Descr="Creates Post process effects specified by effect name and priority." Syntax="ppEffectCreate [[name1, priority1],...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[name1, priority1]" DataType="Array"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectDestroy" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroy Post process effects given by handle or array of handles." Syntax="ppEffectDestroy effect">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectDestroy" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroy Post process effects given by handle or array of handles." Syntax="ppEffectDestroy [effect1,...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="effect1" DataType="Scalar"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable Post process effects" Syntax="effect ppEffectEnable enable">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable Post process effects" Syntax="effect ppEffectEnable enable">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectEnable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable Post process effects" Syntax="effectArray ppEffectEnable enable">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="effectArray" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether given post process effect is enabled" Syntax="ppEffectEnabled effect">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ppEffectForceInNVG" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces use of Post process effects in NVG." Syntax="number ppEffectForceInNVG bool">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="number" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="precision" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the precision of the given entity, how is the entity able to be precise when moving to given target." Syntax="precision entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadCamera" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Preload all textures and models around given Position to avoid visual artifacts after camera is moved." Syntax="preloadCamera position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadObject" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when preload is finished" Descr="Preload all textures, materials and proxies needed to render given object." Syntax="distance preloadObject object">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadObject" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when preload is finished" Descr="Preload all textures, materials and proxies needed to render given object." Syntax="distance preloadObject classname">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="classname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadSound" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Makes sure that a sound can start playing without any delay once it is needed." Syntax="preloadSound soundName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="soundName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadTitleObj" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Object title -  Preload data the object can be defined in the Description.ext file." Syntax="preloadTitleObj [name, type, speed, showInMap]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadTitleRsc" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Resource title - Preload data.The resource can be defined in the Description.ext file." Syntax="preloadTitleRsc [name, type]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preloadTitleRsc" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Resource title - Preload data.The resource can be defined in the Description.ext file." Syntax="preloadTitleRsc [name, type, speed, showInMap]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preprocessFile" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and macros defined with #define." Syntax=" preprocessFile fileName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fileName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="preprocessFileLineNumbers" ReturnType="String" ReturnName="result" ReturnDescr="String - file content containing #line 1 &quot;aFilename&quot;" Descr="Returns the preprocessed content of the given file." Syntax="preprocessFileLineNumbers fileName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="fileName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="primaryWeapon" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of unit's primary weapon (empty string if none)." Syntax="primaryWeapon unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="primaryWeaponItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  [silencer, laserpointer/flashlight, optics, bipod]" Descr="Returns array with all items assigned to the primary weapon. This command is used for infantry weapons only." Syntax="primaryWeaponItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="primaryWeaponMagazine" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns array containing class name of currently loaded primary weapon magazine (or magazines in case of weapon having grenade launcher), otherwise it" Syntax="primaryWeaponMagazine unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="priority" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the priority of the task." Syntax="priority task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="processDiaryLink" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Open the diary screen on the record specified by link." Syntax="processDiaryLink link">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="link" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="processInitCommands" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Process statements stored using setVehicleInit. The statements will only be executed once even if processInitCommands is called multiple times." Syntax="processInitCommands">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="productVersion" ReturnType="Array" ReturnName="result" ReturnDescr="ArrayString - Product NameString - Product Name ShortNumber - Product Version" Descr="Returns the product's friendly name, identifier and version." Syntax="productVersion">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="profileName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns profile name." Syntax="profileName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="profileNameSteam" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of the current Steam profile." Syntax="profileNameSteam">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="profileNamespace" ReturnType="Namespace" ReturnName="result" ReturnDescr="Namespace" Descr="Returns the global namespace attached to the active user profile. Use setVariable and getVariable to save and load data to and from this Namespace." Syntax="profileNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="progressLoadingScreen" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])" Syntax="progressLoadingScreen progress">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="progress" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="progressPosition" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current position in the progress bar." Syntax="progressPosition control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="progressSetPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets progress position of the progress bar (DialogControls-ProgressBar)" Syntax="control progressSetPosition pos">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="publicVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Broadcasts missionNamespace variable and its value to all computers. The data is sent consequently and reliably to all clients." Syntax="publicVariable varName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="varName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="publicVariableClient" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Send the variable value to the client computer - same limitations regarding variable type as publicVariable." Syntax="clientID publicVariableClient varName">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="clientID" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="varName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="publicVariableServer" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Send the variable value to the server - same limitations regarding variable type as publicVariable." Syntax="publicVariableServer varName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="varName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="pushBack" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - index of inserted element" Descr="Insert an element to the back of the given array. This command modifies the original array." Syntax="array pushBack element">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="element" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="pushBackUnique" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - index of inserted element or -1" Descr="Adds element to the back of the given array but only if it is unique to the array." Syntax="array pushBackUnique element">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="element" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="putWeaponPool" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Transfer weapons and magazines from weapon pool into cargo of object obj. Used in campaign to transfer weapons into next mission." Syntax="putWeaponPool object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="queryItemsPool" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission)." Syntax="queryItemsPool name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="queryMagazinePool" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission)." Syntax=" queryMagazinePool name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="queryWeaponPool" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission)." Syntax=" queryWeaponPool name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rad" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - radians" Descr="Convert x from Degrees to Radians. 360 degrees is equal to 2 multiplied with pi." Syntax="rad value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioChannelAdd" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add the units to the custom radio channel." Syntax="index radioChannelAdd units">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioChannelCreate" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - created channel ID (used in customChat command), 0 if failed" Descr="Create a custom radio channel with the given color, label, call sign and registered characters." Syntax="radioChannelCreate [color, label, callSign, units, sentenceType]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="color" DataType="Array"/>
        <ParamInfo Name="label" DataType="String"/>
        <ParamInfo Name="callSign" DataType="String"/>
        <ParamInfo Name="units" DataType="Array"/>
        <ParamInfo Name="sentenceType" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioChannelInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array to format  [colour, label, callSign, units, sentenceType, exists] (see rad" Descr="Obtains custom radio channel's details, set by radioChannelCreate." Syntax="radioChannelInfo channelId">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="channelId" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioChannelRemove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove the characters from the custom radio channel." Syntax="index radioChannelRemove units">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioChannelSetCallSign" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the custom radio channel's call sign." Syntax="index radioChannelSetCallSign callSign">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="callSign" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioChannelSetLabel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the custom radio channel's label." Syntax="index radioChannelSetLabel label">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="label" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="radioVolume" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Checks the current radio volume (set by fadeRadio)." Syntax="radioVolume">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="rain" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current value of rain density in range 1..." Syntax="rain">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="rainbow" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current rainbow intensity." Syntax="rainbow">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="random" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Random real (floating point) value from 0 (inclusive) to x (not inclusive).Since Arma 3 v1.55." Syntax="random x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="random" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Random real (floating point) value from 0 (inclusive) to x (not inclusive).Since Arma 3 v1.55." Syntax="random [min, mid, max]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="min" DataType="Scalar"/>
        <ParamInfo Name="mid" DataType="Scalar"/>
        <ParamInfo Name="max" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="random" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - value from 0 to x" Descr="Random real (floating point) value from 0 (inclusive) to x (not inclusive).Since Arma 3 v1.55." Syntax="seed random x">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="seed" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="random" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - value from 0 to 1" Descr="Random real (floating point) value from 0 (inclusive) to x (not inclusive).Since Arma 3 v1.55." Syntax="seed random [x, y]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="seed" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rank" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the rank of the given unit." Syntax="rank unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rankId" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return the rank of the given unit for comparison." Syntax="rankId unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rating" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values)." Syntax=" rating unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rectangular" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if a location is rectangular (returns true) or elliptical (returns false)." Syntax="rectangular location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="registerTask" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks)." Syntax="teamMember registerTask entryName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entryName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="registeredTasks" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings - names of tasks" Descr="List all registered task types." Syntax="registeredTasks teamMember">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reload" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reload all weapons" Syntax="reload unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reloadEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check whether magazine is reloaded whenever emptied." Syntax="reloadEnabled unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remoteControl" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches on remote control of the unit. Command needs to be executed locally to the player. If driver is remote it will get transferred to players PC." Syntax="who remoteControl whom">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="who" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="whom" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remoteExec" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - Nil in case of error. String otherwise." Descr="Asks server to execute given scripted function or script command." Syntax="params remoteExec [functionName, targets, JIP]">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="params" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="functionName" DataType="String"/>
        <ParamInfo Name="targets" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="JIP" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remoteExec" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - Nil in case of error. String otherwise." Descr="Asks server to execute given scripted function or script command." Syntax="remoteExec [functionName, targets, JIP]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="functionName" DataType="String"/>
        <ParamInfo Name="targets" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="JIP" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remoteExecCall" ReturnType="Any" ReturnName="result" ReturnDescr="Anything -  Nil in case of error. String otherwise." Descr="Asks server to execute given scripted function or script command." Syntax="params remoteExecCall [functionName, targets, JIP]">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="params" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="functionName" DataType="String"/>
        <ParamInfo Name="targets" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="JIP" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remoteExecCall" ReturnType="Any" ReturnName="result" ReturnDescr="Anything -  Nil in case of error. String otherwise." Descr="Asks server to execute given scripted function or script command." Syntax="remoteExecCall [functionName, targets, JIP]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="functionName" DataType="String"/>
        <ParamInfo Name="targets" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="JIP" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remoteExecutedOwner" ReturnType="Scalar" ReturnName="id" ReturnDescr="Number" Descr="Returns clientOwner of the PC, which initiated Remote Execution call. If used in SP or outside of remote executed context, the command returns 0." Syntax="remoteExecutedOwner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="remove3DENConnection" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the connection was removed" Descr="Remove connection between entities." Syntax="remove3DENConnection [type, from, to]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="from" DataType="Array"/>
        <ParamInfo Name="to" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remove3DENEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes Eden Editor event handler of given type and ID.See the list of all Eden Editor Event Handlers." Syntax="remove3DENEventHandler [type,id]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="remove3DENLayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the layer was removed successfully (i.e." Descr="Remove Eden Editor editing layer." Syntax="remove3DENLayer layerID">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes user added action with given id index. This only removes actions added with the addAction command." Syntax="unit removeAction index">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAll3DENEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all Eden Editor event handlers of given type. See the list of all Eden Editor Event Handlers." Syntax="removeAll3DENEventHandlers type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllActions" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all unit's user added actions." Syntax="removeAllActions unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllAssignedItems" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which doesnt include goggles or headgear." Syntax="removeAllAssignedItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllContainers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all containers from the unit." Syntax="removeAllContainers unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllCuratorAddons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Restrict access to all addons for given curator." Syntax="removeAllCuratorAddons curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllCuratorCameraAreas" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Delete all curator camera areas." Syntax="removeAllCuratorCameraAreas curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllCuratorEditingAreas" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Delete all curator edit areas." Syntax="removeAllCuratorEditingAreas curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all event handlers of given type that were added by addEventHandler. Since VBS2 v1.24 can be applied on individual weapon rounds." Syntax="objectName removeAllEventHandlers handlerType">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="handlerType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllHandgunItems" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from weapon except magazine." Syntax="removeAllHandgunItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllItems" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all special items from the unit." Syntax="removeAllItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllItemsWithMagazines" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all itemsWithMagazines from the uniform, vest and backpack." Syntax="removeAllItemsWithMagazines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllMPEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all MP event handlers of the given type which were added by addMPEventHandler." Syntax="objectName removeAllMPEventHandlers event">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="event" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllMissionEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all mission event handlers of the given type which were added by addMissionEventHandler." Syntax="removeAllMissionEventHandlers type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllMusicEventHandlers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all music track event handlers of given type." Syntax="removeAllMusicEventHandlers type">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllOwnedMines" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes ownership of all owned mines/explosive devices of the given unit" Syntax="removeAllOwnedMines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllPrimaryWeaponItems" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from weapon except magazine." Syntax="removeAllPrimaryWeaponItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeAllWeapons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all weapons and magazines of the unit. On vehicles only ammo is removed Does not remove map, compass, radio." Syntax="removeAllWeapons unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeBackpack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes unit's backpack" Syntax="removeBackpack unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeBackpackGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes backpack from a unit." Syntax="removeBackpackGlobal unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeBinocularItem" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Removes given weapon item, including magazine, from the binocular weapon." Syntax="unit removeBinocularItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeCuratorAddons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Restrict curator use of given addons." Syntax="curatorObj removeCuratorAddons addons">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="addons" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeCuratorCameraArea" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes curator camera area." Syntax="curatorObj removeCuratorCameraArea cameraAreaID">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="cameraAreaID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeCuratorEditableObjects" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unregister objects which can be edited by a curator." Syntax="curatorObj removeCuratorEditableObjects [[objects],removeCrew]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[objects]" DataType="Array"/>
        <ParamInfo Name="removeCrew" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeCuratorEditingArea" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes editing area for given curator." Syntax="curatorObj removeCuratorEditingArea editAreaID">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="editAreaID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeDiaryRecord" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Remove a log record." Syntax="unit removeDiaryRecord [subject, diaryRecord]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="subject" DataType="String"/>
        <ParamInfo Name="diaryRecord" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeDiarySubject" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Remove a subject from a log 🏗This article is a work in progress!" Syntax="unit removeDiarySubject diaryPage">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="diaryPage" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeDrawIcon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes an icon for an editor object." Syntax="map removeDrawIcon [object,string identifier]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="stringidentifier" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeDrawLinks" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all drawn links for the given editor object for the given editor,object type." Syntax="map removeDrawLinks [from,param type]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Any"/>
        <ParamInfo Name="paramtype" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes event handler added by addEventHandler. When any handler is removed, all handler indices higher than the deleted one should be decremented." Syntax="objectName removeEventHandler [type, index]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeFromRemainsCollector" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes vehicles/units from disposal manager, added earlier with addToRemainsCollector" Syntax="removeFromRemainsCollector remains">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="remains" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeGoggles" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles." Syntax="removeGoggles unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeGroupIcon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove icon with given ID from group." Syntax="group removeGroupIcon iconID">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="iconID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeHandgunItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes given weapon item from the handgun weapon cargo space.As of Arma 3 DEV 1.37, this command also supports weapon magazines." Syntax="unit removeHandgunItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeHeadgear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes headgear from a unit. If unit has no headgear command quietly fails." Syntax="removeHeadgear unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes item from the inventory." Syntax="unit removeItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeItemFromBackpack" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes item from soldier's backpack." Syntax="unit removeItemFromBackpack item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeItemFromUniform" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes item from soldier's uniform. Can be used with magazines and weapons too." Syntax="unit removeItemFromUniform item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeItemFromVest" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes item from soldier's vest." Syntax="unit removeItemFromVest item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeItems" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items with given template from the inventory." Syntax="unit removeItems item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMPEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes MP event handler added by addMPEventHandler. Format of handler is [type,index]. Index is returned by addMPEventHandler." Syntax="unitName removeMPEventHandler [event, index]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="event" DataType="String"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMagazine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove magazine from the unit. Note: You may create invalid combinations with this function. When doing so, application behaviour is undefined." Syntax="unitName removeMagazine magazineName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMagazineGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes the magazine from the unit." Syntax="unit removeMagazineGlobal magazineName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMagazineTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes the magazine from the turret. Use turret path [-1] for driver's turret.Note: you may create invalid combinations by using this function." Syntax="vehicle removeMagazineTurret [magazineName, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMagazines" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove all magazines of given type from the unit.Note: You may create invalid combinations with this function." Syntax="unitName removeMagazines magazineName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMagazinesTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret." Syntax="vehicle removeMagazinesTurret [magazineName, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineName" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMenuItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes a previously added menu item." Syntax="map removeMenuItem index">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMissionEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes mission event handler added by addMissionEventHandler." Syntax="removeMissionEventHandler [type, index]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeMusicEventHandler" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes specified music track event handler." Syntax="removeMusicEventHandler [type, id]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeOwnedMine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes ownership over a remotely detonatable mine from the unit." Syntax="unit removeOwnedMine mine">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="mine" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removePrimaryWeaponItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes given weapon item from the primary weapon cargo space.As of Arma 3 DEV 1.37, this command also supports weapon magazines." Syntax="unit removePrimaryWeaponItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeSecondaryWeaponItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes given weapon item from the secondary weapon cargo space. This command also supports weapon magazines." Syntax="unit removeSecondaryWeaponItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeSimpleTask" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove a simple task from the list of simple tasks." Syntax="person removeSimpleTask task">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeSwitchableUnit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove a unit from the list of units available for Team Switch." Syntax="removeSwitchableUnit  unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeTeamMember" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global." Syntax="team removeTeamMember member">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="member" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeUniform" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes uniform from unit." Syntax="removeUniform unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeVest" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes vest from unit." Syntax="removeVest unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeWeapon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove weapon from a unit. The unit must be local to the computer where command is executed." Syntax="unit removeWeapon weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeWeaponAttachmentCargo" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Remove attachment linked to a weapon from the vehicle cargo space.   This is unoffical documentation." Syntax="object removeWeaponAttachmentCargo [weaponID,creatorID,attachment]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponID" DataType="Any"/>
        <ParamInfo Name="creatorID" DataType="Any"/>
        <ParamInfo Name="attachment" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeWeaponCargo" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Remove weapon from the vehicle cargo space.  This is unoffical documentation. All Information here is as it exists in the Engine." Syntax="object removeWeaponCargo [weaponID,creatorID]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponID" DataType="Any"/>
        <ParamInfo Name="creatorID" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeWeaponGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored." Syntax="unit removeWeaponGlobal weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="removeWeaponTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes weapon from the turret. Use turret path [-1] for driver's turret." Syntax="vehicle removeWeaponTurret [weaponName, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reportRemoteTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shares the target vehicle via datalink to the Side center for a given time." Syntax="side reportRemoteTarget [target, time]">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="requiredVersion" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned." Syntax="requiredVersion version">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="version" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="resetCamShake" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Stops any ongoing camera shake effects. Does not prevent new effects from being created." Syntax="resetCamShake">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="resetSubgroupDirection" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Resets direction of subgroup." Syntax="resetSubgroupDirection unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="resize" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Change array size. Can be used to add or remove elements from an array." Syntax="array resize count">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="resources" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the resources of a team member. Results are local to the PC on which command was executed." Syntax="resources member">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="member" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="respawnVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction." Syntax="vehicle respawnVehicle [delay, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="delay" DataType="Scalar"/>
        <ParamInfo Name="count" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="restartEditorCamera" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Restarts the mission editor camera (if it was deleted by a script,for example)." Syntax="restartEditorCamera map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reveal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered." Syntax="toWhom reveal target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="toWhom" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reveal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered." Syntax="toWhom reveal target">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="toWhom" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reveal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered." Syntax="toWhom reveal [target, accuracy]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="toWhom" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
        <ParamInfo Name="accuracy" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reveal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered." Syntax="toWhom reveal [target, accuracy]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="toWhom" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
        <ParamInfo Name="accuracy" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="revealMine" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side." Syntax="side revealMine mine">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="mine" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reverse" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Reverses given array by reference (modifies the original array, just like resize)." Syntax="reverse array">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="reversedMouseY" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return if mouse vertical axe is inverted." Syntax="reversedMouseY">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="roadAt" ReturnType="Object" ReturnName="result" ReturnDescr="Object - road segment or objNull" Descr="Returns road segment at given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean." Syntax="roadAt position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="roadAt" ReturnType="Object" ReturnName="result" ReturnDescr="Object - road segment or objNull" Descr="Returns road segment at given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean." Syntax="roadAt position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="roadsConnectedTo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - connected road segments" Descr="Find the road segments connected to the given road segment." Syntax="roadsConnectedTo roadSegment">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="roadSegment" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="roadsConnectedTo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects - connected road segments" Descr="Find the road segments connected to the given road segment." Syntax="roadsConnectedTo [roadSegment, extended]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="roadSegment" DataType="Object"/>
        <ParamInfo Name="extended" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="roleDescription" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns unit description set in Editor and visible on role selection screen in MP. Works in MP and SP." Syntax="roleDescription unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeAttachEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if allowed" Descr="Returns true if vehicle can be attached to ropes" Syntax="ropeAttachEnabled entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeAttachTo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach vehicle to rope with optional offset" Syntax="[entity, toPoint, ropeEndDownVector] ropeAttachTo rope">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
        <ParamInfo Name="toPoint" DataType="Any" IsOptional="True"/>
        <ParamInfo Name="ropeEndDownVector" DataType="Any" IsOptional="True"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeAttachedObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of attached entities on ropes" Descr="Returns list of attached objects on ropes" Syntax="ropeAttachedObjects ropesOwner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="ropesOwner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeAttachedTo" ReturnType="Object" ReturnName="result" ReturnDescr="Object - a transport from which the ropes originate, the ropes owner" Descr="Returns the object it is attached to by rope" Syntax="ropeAttachedTo cargo">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargo" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeCreate" ReturnType="Object" ReturnName="result" ReturnDescr="Object - created rope or objNull on failure" Descr="Create a rope (PhysX rope in Arma 3)." Syntax="ropeCreate [fromObject, fromPoint, toObject, toPoint, length, ropeStart, ropeEnd]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fromObject" DataType="Object"/>
        <ParamInfo Name="fromPoint" DataType="Any"/>
        <ParamInfo Name="toObject" DataType="Object"/>
        <ParamInfo Name="toPoint" DataType="Any"/>
        <ParamInfo Name="length" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="ropeStart" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="ropeEnd" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeCreate" ReturnType="Object" ReturnName="result" ReturnDescr="Object - created rope or objNull on failure" Descr="Create a rope (PhysX rope in Arma 3)." Syntax="ropeCreate [fromObject, fromPoint, length, ropeStart, ropeEnd]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fromObject" DataType="Object"/>
        <ParamInfo Name="fromPoint" DataType="Any"/>
        <ParamInfo Name="length" DataType="Scalar"/>
        <ParamInfo Name="ropeStart" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="ropeEnd" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeCut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Cut rope and detach rope from vehicle" Syntax="ropeCut [rope, length]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
        <ParamInfo Name="length" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeDestroy" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Destroy a rope." Syntax="ropeDestroy rope">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeDetach" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Detach a rope from an object." Syntax="attachedObject ropeDetach rope">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="attachedObject" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeEndPosition" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array in format [startPos, endPos], where:startPos: Array - rope start " Descr="Return rope end positions in Position3D format" Syntax="ropeEndPosition rope">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeLength" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind)" Syntax="ropeLength rope">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeUnwind" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unwind rope to target length." Syntax="ropeUnwind [rope, speed, length, relative]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
        <ParamInfo Name="speed" DataType="Scalar"/>
        <ParamInfo Name="length" DataType="Scalar"/>
        <ParamInfo Name="relative" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropeUnwound" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if unwinding is complete" Descr="False if unwinding in progress, otherwise true" Syntax="ropeUnwound rope">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="rope" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="ropes" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of the actual rope objects" Descr="Returns a vehicle's rope objects in an Array." Syntax="ropes ropesOwner">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="ropesOwner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rotorsForcesRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns force produced by rotors." Syntax="rotorsForcesRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="rotorsRpmRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns rotors RPM" Syntax="rotorsRpmRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="round" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Rounds up or down to the closest integer." Syntax=" round x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="runInitScript" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Launch init.sqs or init.sqf scripts." Syntax="runInitScript">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="safeZoneH" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the height of the screen in screen measurement units." Syntax="SafeZoneH">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="safeZoneW" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the width of the screen in screen measurement units." Syntax="safeZoneW">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="safeZoneWAbs" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns SafeZone width (of all monitors, in case there's more than one)" Syntax="safeZoneWAbs">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="safeZoneX" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the X of the left border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0" Syntax="SafeZoneX">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="safeZoneXAbs" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns SafeZone left border (of all monitors, in case there's more than one)" Syntax="safeZoneXAbs">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="safeZoneY" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the Y of the top border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0)" Syntax="SafeZoneY">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="save3DENInventory" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Saves current state of entitie's inventory to SQM." Syntax="save3DENInventory entities">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entities" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="saveGame" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Autosave game (used for Retry)." Syntax="saveGame">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="saveIdentity" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Saves person's identity to Objects.sav file in campaign directory as entry name." Syntax="unitName saveIdentity name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="saveJoysticks" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section." Syntax="saveJoysticks">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="saveOverlay" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Save the current overlay." Syntax="saveOverlay map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="saveProfileNamespace" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Saves the variables stored in profileNamespace to the persistent active user profile." Syntax="saveProfileNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="saveStatus" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Saves object's properties to Objects.sav file in campaign directory as entry name." Syntax="object saveStatus name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="saveVar" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Save variable value into the campaign space. This variable is available to all following missions in the campaign." Syntax="saveVar varname">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="varname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="savingEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if saving the game is enabled." Syntax="savingEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="say" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unit will say given sound.When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate ." Syntax="from say sound">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unit will say given sound.When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate ." Syntax="from say [sound, maxTitlesDistance, speed]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="maxTitlesDistance" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unit will say given sound.When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate ." Syntax="[from, to] say sound">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
        <ParamInfo Name="to" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unit will say given sound.When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate ." Syntax="[from, to] say [sound, maxTitlesDistance, speed]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
        <ParamInfo Name="to" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="maxTitlesDistance" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say2D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays given sound in 2D" Syntax="from say2D sound">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say2D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays given sound in 2D" Syntax="from say2D [sound, maxTitlesDistance, speed]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="maxTitlesDistance" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say2D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays given sound in 2D" Syntax="[from, to] say2D sound">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
        <ParamInfo Name="to" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say2D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Plays given sound in 2D" Syntax="[from, to] say2D [sound, maxTitlesDistance, speed]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
        <ParamInfo Name="to" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="maxTitlesDistance" DataType="Scalar"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing, since Arma 3 v1.99." Descr="Unit or object will say given sound in 3D Space." Syntax="from say3D sound">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing, since Arma 3 v1.99." Descr="Unit or object will say given sound in 3D Space." Syntax="from say3D [sound, maxDistance, pitch, isSpeech, offset]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="maxDistance" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="pitch" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="isSpeech" DataType="Boolean"/>
        <ParamInfo Name="offset" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing, since Arma 3 v1.99." Descr="Unit or object will say given sound in 3D Space." Syntax="[from, to] say3D sound">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
        <ParamInfo Name="to" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="say3D" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing, since Arma 3 v1.99." Descr="Unit or object will say given sound in 3D Space." Syntax="[from, to] say3D [sound, maxDistance, pitch, isSpeech, offset]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="from" DataType="Object"/>
        <ParamInfo Name="to" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="maxDistance" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="pitch" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="isSpeech" DataType="Boolean"/>
        <ParamInfo Name="offset" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="scopeName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like breakOut and breakTo." Syntax="scopeName name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="score" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the person's score in MP." Syntax="score unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="scoreSide" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns score for the given side." Syntax="scoreSide side">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="screenToWorld" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - PositionAGL, world position on surface [x,y,0]" Descr="Returns the position on landscape (PositionAGL) corresponding to the given point on screen (in UI coordinates)." Syntax="screenToWorld screen">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="screen" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="screenshot" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if success" Descr="Captures a screenshot and stores it to given filename. PNG is the only available format and the file must have .png extension." Syntax="screenshot filename">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="scriptDone" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if a script is finished running using the Script_(Handle) returned by execVM or spawn." Syntax="scriptDone handle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Handle">
      <ParamInfos>
        <ParamInfo Name="handle" DataType="Handle"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="scriptName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assign a user friendly name to the VM script this command is executed from.Once name is assigned, it cannot be changed." Syntax="scriptName name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="scudState" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Current state of given Scud launcher." Syntax="  scudState scudName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="scudName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="secondaryWeapon" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of a unit's secondary weapon (empty string if none)." Syntax="secondaryWeapon unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="secondaryWeaponItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  [silencer, laserpointer/flashlight, optics, bipod]" Descr="Returns array with all items assigned to the secondary weapon. This command is used for infantry weapons only." Syntax="secondaryWeaponItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="secondaryWeaponMagazine" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns either single element array, containing class name of currently loaded in the secondary weapon magazine, or an empty array if unit has no seco" Syntax="secondaryWeaponMagazine unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="select" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - a reference to array element given by its index" Descr="Selects an element from an array, config entry from Config or substring from a string or a range from an array." Syntax="array  select index">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="select" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - a reference to array element given by its index (false - 0, true - 1)" Descr="Selects an element from an array, config entry from Config or substring from a string or a range from an array." Syntax="array  select boolean">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="boolean" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="select" ReturnType="Config" ReturnName="result" ReturnDescr="Config" Descr="Selects an element from an array, config entry from Config or substring from a string or a range from an array." Syntax="config  select index">
    <PreArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="select" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Selects an element from an array, config entry from Config or substring from a string or a range from an array." Syntax="string select [start, length]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="start" DataType="Scalar"/>
        <ParamInfo Name="length" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="select" ReturnType="Array" ReturnName="result" ReturnDescr="Array - a new array from selection" Descr="Selects an element from an array, config entry from Config or substring from a string or a range from an array." Syntax="array select [start, count]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="start" DataType="Scalar"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="select" ReturnType="Array" ReturnName="result" ReturnDescr="Array - a new array of all elements from the original array that satisfied expre" Descr="Selects an element from an array, config entry from Config or substring from a string or a range from an array." Syntax="array select expression">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="expression" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectBestPlaces" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - in Format [[position: Position2D, expressionResult: Number], ..." Descr="Find the places with the maximum value of expression in the given area. Places can be on water. Results are sorted by value." Syntax="selectBestPlaces [position, radius, expression, precision, sourcesCount]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="expression" DataType="String"/>
        <ParamInfo Name="precision" DataType="Scalar"/>
        <ParamInfo Name="sourcesCount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectDiarySubject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select the subject page in a log." Syntax="person selectDiarySubject subject">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="subject" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectEditorObject" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Select an editor object. Does not un-select previously selected objects." Syntax="map selectEditorObject object">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="object" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectLeader" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Select a group's leader. In MP the group has to be local to the PC executing the command." Syntax="group selectLeader unitName">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectMax" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - element with maximum numerical value" Descr="Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme." Syntax="selectMax array">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectMin" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - element with minimum numerical value" Descr="Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme." Syntax="selectMin array">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectNoPlayer" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches player to no unit, makes player return objNull. SP only, the command is completely ignored in MP." Syntax="selectNoPlayer">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="selectPlayer" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves player into given unit. In Arma 3 it is now not possible to selectPlayer into unit occupied by another player." Syntax="selectPlayer unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectRandom" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - random selected value or Nothing if array is empty" Descr="Returns a random element from the given array." Syntax="selectRandom array">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectRandomWeighted" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - random weighted value or Nothing if array is empty or all weights are" Descr="Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted." Syntax="selectRandomWeighted valuesAndWeights">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="valuesAndWeights" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectRandomWeighted" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - random weighted value or Nothing if any of arrays is empty or all wei" Descr="Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted." Syntax="values selectRandomWeighted weights">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="values" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weights" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectWeapon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the given weapon.Note: For weapons that have more than one muzzle, you have to input the muzzlename and not the weaponName." Syntax="unitName selectWeapon muzzleName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="muzzleName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectWeaponTurret" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63." Syntax="vehicle selectWeaponTurret [weapon, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectedEditorObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of currently selected editor objects." Syntax="selectedEditorObjects map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectionNames" ReturnType="Array" ReturnName="result" ReturnDescr="Array - List of selection names" Descr="Returns the list of model selections" Syntax="selectionNames object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectionNames" ReturnType="Array" ReturnName="result" ReturnDescr="Array - List of selection names" Descr="Returns the list of model selections" Syntax="object selectionNames LOD">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="LOD" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectionPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - in format PositionRelative ([x,y,z] relative position in model space)" Descr="Search for selection in the object model (first in the memory level, then in geometry LODs).Returns position in model space." Syntax="object selectionPosition selectionName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="selectionName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="selectionPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - [x,y,z] relative position in model space" Descr="Search for selection in the object model (first in the memory level, then in geometry LODs).Returns position in model space." Syntax="object selectionPosition [selectionName, LODName]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="selectionName" DataType="String"/>
        <ParamInfo Name="LODName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sendAUMessage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Send the command to the list of clients." Syntax="sendAUMessage [clientList, command]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="clientList" DataType="Array"/>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sendSimpleCommand" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends a simple command to the vehicle's driver / gunner." Syntax="vehicleName sendSimpleCommand command">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sendTask" ReturnType="Task" ReturnName="result" ReturnDescr="Task" Descr="Create a new AI task (subtask of parentTask). Type is name of registered task type." Syntax="sender sendTask [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="sender" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="receiver" DataType="Any"/>
        <ParamInfo Name="[type]or[type,parentTask]" DataType="Array"/>
        <ParamInfo Name="priority" DataType="Scalar"/>
        <ParamInfo Name="name1" DataType="String"/>
        <ParamInfo Name="value1" DataType="String"/>
        <ParamInfo Name="name2" DataType="String"/>
        <ParamInfo Name="value2" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sendTaskResult" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Send a result of the task to the task sender." Syntax="task sendTaskResult [state,result,sentence]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Any"/>
        <ParamInfo Name="result" DataType="Any"/>
        <ParamInfo Name="sentence" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sendUDPMessage" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Send message to given address using UDP protocol." Syntax="sendUDPMessage [ip, port, message]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="ip" DataType="String"/>
        <ParamInfo Name="port" DataType="Scalar"/>
        <ParamInfo Name="message" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="serverCommand" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - always true for some reason (since Arma 3 v1." Descr="Executes a server command on the server. In order to be able to execute admin command the user must be logged in as admin." Syntax="serverCommand command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="serverCommand" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if password is correct" Descr="Executes a server command on the server. In order to be able to execute admin command the user must be logged in as admin." Syntax="password serverCommand command">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="password" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="serverCommandAvailable" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the serverCommand can be performed on the machine, false if not." Syntax="serverCommandAvailable command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="serverCommandExecutable" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false." Syntax="serverCommandExecutable command">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="serverName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of the hosting server in MP, &quot;&quot; in SP." Syntax="serverName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="serverTime" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Server time synchronized to clients. Returns always 0 in Singleplayer.Note that in ArmA2 1." Syntax="serverTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="set" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the element at the given (zero-based) index of the array.If the element does not exist, resize index+1 is called to create it." Syntax="array set [index, value]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set one of entity attributes. ! Attributes are available only within the Eden Editor workspace." Syntax="entity set3DENAttribute [class, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set one of entity attributes. ! Attributes are available only within the Eden Editor workspace." Syntax="entity set3DENAttribute [class, value]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set one of entity attributes. ! Attributes are available only within the Eden Editor workspace." Syntax="entity set3DENAttribute [class, value]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set one of entity attributes. ! Attributes are available only within the Eden Editor workspace." Syntax="entity set3DENAttribute [class, value]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENAttributes" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set entity attributes.An attribute is identified by its property (data when it's engine-drive attribute) value in config." Syntax="set3DENAttributes [[&lt;entities1&gt;,&lt;class1&gt;,&lt;value1&gt;], ..., [&lt;entitiesN&gt;,&lt;classN&gt;,&lt;valueN&gt;]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[entities1,class1,value1]" DataType="Array"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="[entitiesN,classN,valueN]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENGrid" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the grid increment for the given transformation type." Syntax="set3DENGrid [type,value]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENIconsVisible" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Toggle visibility of Eden Editor icons." Syntax="set3DENIconsVisible [showMap, showScene]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="showMap" DataType="Boolean"/>
        <ParamInfo Name="showScene" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENLayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the entity was moved succesfully" Descr="Set layer for Eden Entity." Syntax="entity set3DENLayer layerID">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENLayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the entity was moved succesfully" Descr="Set layer for Eden Entity." Syntax="entity set3DENLayer layerID">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENLayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the entity was moved succesfully" Descr="Set layer for Eden Entity." Syntax="entity set3DENLayer layerID">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENLayer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the entity was moved succesfully" Descr="Set layer for Eden Entity." Syntax="entity set3DENLayer layerID">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layerID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENLinesVisible" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Toggle visibility of Eden Editor lines." Syntax="set3DENLinesVisible [showMap, showScene]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="showMap" DataType="Boolean"/>
        <ParamInfo Name="showScene" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENLogicType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the new type of Logic object(s)." Syntax="objects set3DENLogicType classname">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="classname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENMissionAttribute" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set scenario attribute.An attribute is identified by its property (data when it's engine-drive attribute) value in config." Syntax=" set3DENMissionAttribute [&lt;class&gt;,&lt;value&gt;]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENMissionAttributes" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if the value was set" Descr="Set scenario attributes.An attribute is identified by its property (data when it's engine-drive attribute) value in config." Syntax="set3DENMissionAttributes [[&lt;section&gt;,&lt;class1&gt;,&lt;value1&gt;], ..., [&lt;section &gt;,&lt;classN&gt;,&lt;valueN&gt;]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[section,class1,value1]" DataType="Array"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="[section ,classN,valueN]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENModelsVisible" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables lines visibility in 3DEN" Syntax="set3DENModelsVisible [map, scene]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Boolean"/>
        <ParamInfo Name="scene" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENObjectType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the classname of one or more given Eden Editor objects." Syntax="objects set3DENObjectType classname">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="classname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="set3DENSelected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes selection in 3den to what is inside entities array." Syntax="set3DENSelected entities">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="entities" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAccTime" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer." Syntax="setAccTime accFactor">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="accFactor" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setActualCollectiveRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).0: collective fully down~0." Syntax="helicopterRTD setActualCollectiveRTD value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAirplaneThrottle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets a wanted throttle position, works only on player's vehicle." Syntax="airplane setAirplaneThrottle value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="airplane" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAirportSide" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set owning side of the airport. ID is the number to identify which airport on the island you want to check." Syntax="id setAirportSide side">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAirportSide" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set owning side of the airport. ID is the number to identify which airport on the island you want to check." Syntax="target setAirportSide side">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAmmo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed." Syntax="unit setAmmo [weapon, count]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
        <ParamInfo Name="count" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAmmoCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo." Syntax="vehicleName setAmmoCargo ammoCargo">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="ammoCargo" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAmmoOnPylon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set count of ammo in magazine on pylon" Syntax="vehicle setAmmoOnPylon [pylon, ammocount]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Any"/>
        <ParamInfo Name="ammocount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAnimSpeedCoef" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets a coefficient for animation speed" Syntax="unit setAnimSpeedCoef coef">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="coef" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAperture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets custom camera aperture (-1 to do it automatically)." Syntax="setAperture aperture">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="aperture" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setApertureNew" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets custom camera aperture ([-1] to do it automatically)." Syntax="setApertureNew [min, std, max, stdLum]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="min" DataType="Scalar"/>
        <ParamInfo Name="std" DataType="Scalar"/>
        <ParamInfo Name="max" DataType="Scalar"/>
        <ParamInfo Name="stdLum" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setArmoryPoints" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to armoryPoints entry. If entry doesn't exist, it is created." Syntax="setArmoryPoints points">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="points" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAttributes" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Returns a structured text created by the given structured or plain text by setting attributes to the given values." Syntax="text setAttributes [name1, value1, name2, value2, ...]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name1" DataType="String"/>
        <ParamInfo Name="value1" DataType="String"/>
        <ParamInfo Name="name2" DataType="String"/>
        <ParamInfo Name="value2" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setAutonomous" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets UAV autonomous mode." Syntax="uav setAutonomous bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setBehaviour" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group." Syntax="groupName setBehaviour behaviour">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="behaviour" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setBehaviour" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group." Syntax="groupName setBehaviour behaviour">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="behaviour" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setBehaviourStrong" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets group behaviour mode &amp; forces it to a group. If a unit is given as argument, behaviour is set for the unit's group." Syntax="groupName setBehaviourStrong behaviour">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="behaviour" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setBehaviourStrong" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets group behaviour mode &amp; forces it to a group. If a unit is given as argument, behaviour is set for the unit's group." Syntax="groupName setBehaviourStrong behaviour">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="behaviour" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setBleedingRemaining" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets for how many seconds injured unit leaves blood trail. The unit damage must be &gt;= 0." Syntax="unit setBleedingRemaining time">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setBrakesRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Enable landing gear wheel brakes for a helicopter." Syntax="helicopterRTD setBrakesRTD [value, wheelIndex]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
        <ParamInfo Name="wheelIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCamShakeDefParams" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12." Syntax="setCamShakeDefParams [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="power" DataType="Scalar"/>
        <ParamInfo Name="duration" DataType="Scalar"/>
        <ParamInfo Name="frequency" DataType="Scalar"/>
        <ParamInfo Name="minSpeed" DataType="Scalar"/>
        <ParamInfo Name="minMass" DataType="Scalar"/>
        <ParamInfo Name="caliberCoefHit" DataType="Scalar"/>
        <ParamInfo Name="vehicleCoef" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCamShakeParams" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set camera shake parameters. Will not have any effect until shake is started via addCamShake." Syntax="setCamShakeParams  [posCoef, vertCoef, horzCoef, bankCoef, interpolation]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="posCoef" DataType="Scalar"/>
        <ParamInfo Name="vertCoef" DataType="Scalar"/>
        <ParamInfo Name="horzCoef" DataType="Scalar"/>
        <ParamInfo Name="bankCoef" DataType="Scalar"/>
        <ParamInfo Name="interpolation" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCamUseTI" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates thermal vision." Syntax="Bool setCamUseTI modeIndex">
    <PreArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="Bool" DataType="Boolean"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="modeIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCamUseTi" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Activates thermal vision." Syntax="Bool setCamUseTI modeIndex">
    <PreArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="Bool" DataType="Boolean"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="modeIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCameraInterest" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50." Syntax="entity setCameraInterest interest">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="interest" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCaptive" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Mark a unit as captive. If unit is a vehicle, commander is marked." Syntax="unitName setCaptive status">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="status" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCaptive" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Mark a unit as captive. If unit is a vehicle, commander is marked." Syntax="unitName setCaptive statusNumber">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="statusNumber" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCenterOfMass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the center of mass of an object smoothly during the given time (in seconds)." Syntax="myObject setCenterOfMass [centerOfMass, time]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="myObject" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="centerOfMass" DataType="Array"/>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCenterOfMass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the center of mass of an object smoothly during the given time (in seconds)." Syntax="myObject setCenterOfMass centerOfMass">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="myObject" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="centerOfMass" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCollisionLight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches collision lights of a vehicle on/off." Syntax="vehicle setCollisionLight set">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="set" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCombatMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group combat mode (engagement rules)." Syntax="group setCombatMode mode">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCombatMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group combat mode (engagement rules)." Syntax="group setCombatMode mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCompassOscillation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets compass oscillation." Syntax="setCompassOscillation [angle, frequencyMin, frequencyMax]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="frequencyMin" DataType="Scalar"/>
        <ParamInfo Name="frequencyMax" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setConvoySeparation" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the distance to keep to following vehicle." Syntax="vehicle setConvoySeparation distance">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCuratorCameraAreaCeiling" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets maximal height to which curator camera can move." Syntax="curatorObj setCuratorCameraAreaCeiling height">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCuratorCoef" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action)." Syntax="curatorObj setCuratorCoef [action,coef]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
        <ParamInfo Name="coef" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCuratorEditingAreaType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set whether curator can edit in all editing areas (true) or outside of them (false)." Syntax="curatorObj setCuratorEditingAreaType bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCuratorWaypointCost" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets cost of waypoints (used for placing, editing and deleting)." Syntax="curatorObj setCuratorWaypointCost cost">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="cost" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCurrentChannel" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI." Syntax="setCurrentChannel channel">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="channel" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCurrentTask" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the task as a current task of the person." Syntax="object setCurrentTask task">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCurrentWaypoint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the currently active waypoint for a group." Syntax="groupName setCurrentWaypoint waypoint">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCurrentWaypoint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the currently active waypoint for a group." Syntax="groupName setCurrentWaypoint waypoint">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCustomAimCoef" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set custom aim precision coefficient for weapon sway" Syntax="unit setCustomAimCoef coef">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="coef" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCustomSoundController" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Sets value of the specified custom sound controller to be used in simple expressions in config." Syntax="setCustomSoundController [vehicle, controller, value]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="controller" DataType="String"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setCustomWeightRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Add virtual custom weight to a helicopter's center of gravity." Syntax="helicopterRTD setCustomWeightRTD weight">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="weight" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDamage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead." Syntax="object setDamage damage">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="damage" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDamage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead." Syntax="object setDamage [damage, useEffects]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="damage" DataType="Scalar"/>
        <ParamInfo Name="useEffects" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDammage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Damage / repair object.Damage 0 means fully functional, damage 1 means completely destroyed / dead." Syntax="object setDammage damage">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="damage" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the actual mission date and time." Syntax="setDate date">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="year" DataType="Scalar"/>
        <ParamInfo Name="month" DataType="Scalar"/>
        <ParamInfo Name="day" DataType="Scalar"/>
        <ParamInfo Name="hour" DataType="Scalar"/>
        <ParamInfo Name="minute" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDebriefingText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets debriefing text for endType defined in CfgDebriefing." Syntax="endType setDebriefingText [title, description]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="endType" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="title" DataType="String"/>
        <ParamInfo Name="description" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDefaultCamera" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)" Syntax="setDefaultCamera [position, direction]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="direction" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDestination" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the destination for path planning of the pilot." Syntax="object setDestination [position, planningMode, forceReplan]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="planningMode" DataType="String"/>
        <ParamInfo Name="forceReplan" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDetailMapBlendPars" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance." Syntax="setDetailMapBlendPars [fullDetail, noDetail]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fullDetail" DataType="Scalar"/>
        <ParamInfo Name="noDetail" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDiaryRecordText" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Set text of a log record." Syntax="unit setDiaryRecordText [[subject, diaryRecord], [title, text]]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[subject, diaryRecord]" DataType="Array"/>
        <ParamInfo Name="[title, text]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets object heading. Angles are measured in degrees clockwise from north." Syntax="object setDir heading">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="heading" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDirection" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set's the orientation of a location. It's area and map icon (if it's type uses an icon) will be rotated to this orientation." Syntax="location setDirection direction">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="direction" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDrawIcon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map." Syntax="map setDrawIcon [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="texture" DataType="Any"/>
        <ParamInfo Name="color" DataType="Any"/>
        <ParamInfo Name="offset" DataType="Any"/>
        <ParamInfo Name="width" DataType="Any"/>
        <ParamInfo Name="height" DataType="Any"/>
        <ParamInfo Name="maintainsize" DataType="Any"/>
        <ParamInfo Name="angle" DataType="Any"/>
        <ParamInfo Name="stringidentifier" DataType="Any"/>
        <ParamInfo Name="shadow" DataType="Any"/>
        <ParamInfo Name="is3D" DataType="Any"/>
        <ParamInfo Name="drawline" DataType="Any"/>
        <ParamInfo Name="priority" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDriveOnPath" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the path to follow for AI driver" Syntax="vehicleName setDriveOnPath points">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="points" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDropInterval" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is 18000." Syntax="particleSource setDropInterval interval">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="particleSource" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="interval" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDynamicSimulationDistance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets activation distance of Arma_3_Dynamic_Simulation for given category" Syntax="category setDynamicSimulationDistance distance">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="category" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setDynamicSimulationDistanceCoef" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets activation distance multiplier of Arma_3_Dynamic_Simulation for the given class" Syntax="class setDynamicSimulationDistanceCoef multiplier">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="multiplier" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setEditorMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets map mode to MAP,3D or PREVIEW." Syntax="map setEditorMode mode">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setEditorObjectScope" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="This command defines the level of access a user has to editor objects." Syntax="map setEditorObjectScope [objects, editorType, condition, scope, subordinatesAlso]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
        <ParamInfo Name="editorType" DataType="String"/>
        <ParamInfo Name="condition" DataType="String"/>
        <ParamInfo Name="scope" DataType="String"/>
        <ParamInfo Name="subordinatesAlso" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setEffectCondition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result." Syntax="trigger setEffectCondition statement">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="statement" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setEffectCondition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result." Syntax="waypoint setEffectCondition statement">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="statement" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setEffectiveCommander" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets effectiveCommander of the given vehicle. Effective commander is the person who commands the vehicle, i.e. gives commands to the driver." Syntax="vehicle setEffectiveCommander person">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setEngineRPMRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="engine index 1: engine #2engine index 2: engine #3engine index -1: all enginesFor this command to have any effect, the Arma 3 Advanced Helicopter F" Syntax="helicopterRTD setEngineRPMRTD [value, engineIndex]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
        <ParamInfo Name="engineIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFSMVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given FSM.The FSM handle is the number returned by the execFSM command." Syntax="handle setFSMVariable [name, value]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="handle" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFace" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set person's face. For a list of available faces, check Category:CfgIdentities." Syntax="person setFace face">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="face" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFaceAnimation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set facial animation phase (eye blinking), blink is in the range from 0 to 1." Syntax="person setFaceAnimation blink">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="blink" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFatigue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the person's fatigue, from 0 to 1." Syntax="unit setFatigue value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFeatureType" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Enable/disable object as a feature/landmark." Syntax="object setFeatureType type">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="type" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFlagAnimationPhase" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole." Syntax="flag setFlagAnimationPhase phase">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="phase" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFlagOwner" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole." Syntax="flag setFlagOwner owner">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="owner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFlagSide" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets flag Side. A flag may be taken by any unit that is enemy to the side that owns the flag." Syntax="flag setFlagSide side">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFlagTexture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets flag texture.If texture is &quot;&quot;, flag is not drawn.Custom texture can be used, as long as it is in *." Syntax="flag setFlagTexture texture">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="flag" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="texture" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change." Syntax="time setFog fog">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="fog" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change." Syntax="time setFog [fogValue, fogDecay, fogBase]">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fogValue" DataType="Scalar"/>
        <ParamInfo Name="fogDecay" DataType="Scalar"/>
        <ParamInfo Name="fogBase" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFormDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen." Syntax="group setFormDir heading">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="heading" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFormDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen." Syntax="group setFormDir heading">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="heading" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFormation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group formation." Syntax="group setFormation formation">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="formation" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFormation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group formation." Syntax="group setFormation formation">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="formation" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFormationTask" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the current task of the formation member." Syntax="object setFormationTask task">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="task" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFriend" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly." Syntax="side1 setFriend [side2 , value]">
    <PreArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side1" DataType="Side"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side2" DataType="Side"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFromEditor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set if given team member was inserted directly from editor." Syntax="teamMember setFromEditor fromEditor">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="fromEditor" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFuel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed." Syntax="vehicle setFuel amount">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="amount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setFuelCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1)Note, the carrying capacity of each side's refuel trucks differ." Syntax="vehicle setFuelCargo amount">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="amount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupIcon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group icons properties." Syntax="group setGroupIcon [id, icon, offset]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
        <ParamInfo Name="icon" DataType="String"/>
        <ParamInfo Name="offset" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupIconParams" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group icons parameters." Syntax="group setGroupIconParams properties">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="properties" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupIconsSelectable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing (prior to Arma 3 v1.91." Descr="Sets if group icons raises onclick and onover events." Syntax="setGroupIconsSelectable bool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupIconsVisible" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing (prior to Arma 3 v1.93." Descr="Sets if group icons are visible." Syntax="setGroupIconsVisible [showOnMap, showOnHUD]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="showOnMap" DataType="Boolean"/>
        <ParamInfo Name="showOnHUD" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupId" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets a group's identity, how it will be displayed in chat, for example." Syntax="group setGroupId [nameFormat, nameParam1, ..., nameParamN]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="nameFormat" DataType="String"/>
        <ParamInfo Name="nameParam1" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="nameParamN" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupId" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets a group's identity, how it will be displayed in chat, for example." Syntax="group setGroupId [nameFormat, nameParam1, ..., nameParamN]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="nameFormat" DataType="String"/>
        <ParamInfo Name="nameParam1" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="nameParamN" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupIdGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="A global equivalent of  setGroupId" Syntax="group setGroupIdGlobal [format, keyword1, ..., keywordN]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="format" DataType="String"/>
        <ParamInfo Name="keyword1" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="keywordN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupIdGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="A global equivalent of  setGroupId" Syntax="group setGroupIdGlobal [format, keyword1, ..., keywordN]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="format" DataType="String"/>
        <ParamInfo Name="keyword1" DataType="String"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="keywordN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGroupOwner" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Changes the ownership of a group (and all its units) to a given client. Group leader can't be a player. Only works when called from a server." Syntax="group setGroupOwner clientID">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="clientID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setGusts" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1." Syntax="time setGusts value">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setHUDMovementLevels" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value." Syntax="setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="minSpeed" DataType="Scalar"/>
        <ParamInfo Name="maxSpeed" DataType="Scalar"/>
        <ParamInfo Name="minAlt" DataType="Scalar"/>
        <ParamInfo Name="maxAlt" DataType="Scalar"/>
        <ParamInfo Name="minDir" DataType="Scalar"/>
        <ParamInfo Name="maxDir" DataType="Scalar"/>
        <ParamInfo Name="targetOrPosition" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setHideBehind" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the data for hiding. objectWhereHide can be taken using findCover. hidePosition can be taken using getHideFrom." Syntax="object setHideBehind [objectWhereHide, hidePosition]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objectWhereHide" DataType="Object"/>
        <ParamInfo Name="hidePosition" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setHit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Damage / repair part of object. The object must be local to the computer where command is executed." Syntax="object setHit [part, damage, useEffects]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="part" DataType="String"/>
        <ParamInfo Name="damage" DataType="Scalar"/>
        <ParamInfo Name="useEffects" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setHitIndex" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the current level of damage for a specific Hit Point (specified by its hit part index)." Syntax="vehicle setHitIndex [hitPartIndex, damage, useEffects]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="hitPartIndex" DataType="Scalar"/>
        <ParamInfo Name="damage" DataType="Scalar"/>
        <ParamInfo Name="useEffects" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setHitPointDamage" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the current level of damage for a specific Hit Point (specified by its config class)." Syntax="vehicle setHitPointDamage [hitPointName, damage, useEffects]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="hitPointName" DataType="String"/>
        <ParamInfo Name="damage" DataType="Scalar"/>
        <ParamInfo Name="useEffects" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setHorizonParallaxCoef" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets coef used to shift horizon position based on camera height (use 0 to disable shifting)." Syntax="setHorizonParallaxCoef coef">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="coef" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setIdentity" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set identity of person.Identities are defined in Description.ext of the mission or campaign." Syntax="person setIdentity identity">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="identity" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setImportance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the importance value of location." Syntax="location setImportance value">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setInfoPanel" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if panel was successfully opened, false otherwise (e.g." Descr="Opens given component or first component of given component type on specified info panel." Syntax="setInfoPanel [infopanelId, componentClassOrType]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="infopanelId" DataType="String"/>
        <ParamInfo Name="componentClassOrType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLeader" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global." Syntax="team setLeader leader">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="leader" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightAmbient" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set ambient color of light. This includes surfaces that face away from the light, unlike setLightColor." Syntax="light setLightAmbient [r, g, b]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="r" DataType="Any"/>
        <ParamInfo Name="g" DataType="Any"/>
        <ParamInfo Name="b" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightAttenuation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist))." Syntax="light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="start" DataType="Scalar"/>
        <ParamInfo Name="constant" DataType="Scalar"/>
        <ParamInfo Name="linear" DataType="Scalar"/>
        <ParamInfo Name="quadratic" DataType="Scalar"/>
        <ParamInfo Name="hardlimitstart" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="hardlimitend" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightBrightness" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set brightness of light." Syntax="light setLightBrightness brightness">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="brightness" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set diffuse color of light. Illuminates surfaces that are facing the light." Syntax="light setLightColor [r, g, b]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="r" DataType="Any"/>
        <ParamInfo Name="g" DataType="Any"/>
        <ParamInfo Name="b" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightDayLight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets if light can be used during the day." Syntax="light setLightDayLight bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightFlareMaxDistance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets max distance where the flare is visible." Syntax="light setLightFlareMaxDistance distance">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightFlareSize" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets relative size of the flare for the light." Syntax="light setLightFlareSize size">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="size" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightIntensity" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets intensity of light." Syntax="light setLightIntensity value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightUseFlare" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets if light has flare." Syntax="light setLightUseFlare bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="light" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLightnings" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the lightnings value smoothly during the given time (in seconds).A time of zero means there will be an immediate change." Syntax="time setLightnings value">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setLocalWindParams" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets parameters for helicopter rotor wash." Syntax="setLocalWindParams [strength, diameter]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="strength" DataType="Scalar"/>
        <ParamInfo Name="diameter" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMagazineTurretAmmo" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Sets ammo count to given amount for given turret." Syntax="vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="magazineClass" DataType="String"/>
        <ParamInfo Name="ammoCount" DataType="Any"/>
        <ParamInfo Name="turretPath" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerAlpha" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the marker alpha. The marker is modified on all computers in a network session." Syntax="marker setMarkerAlpha alpha">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="marker" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="alpha" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerAlphaLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the marker alpha. The marker is only modified on the computer where the command is called." Syntax="marker setMarkerAlphaLocal alpha">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="marker" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="alpha" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerBrush" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the fill texture for the marker (&quot;RECTANGLE&quot; or &quot;ELLIPSE&quot;). Brush is the name of the subclass in CfgMarkerBrushes." Syntax="markerName setMarkerBrush brush">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="brush" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerBrushLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the fill texture for the marker (&quot;RECTANGLE&quot; or &quot;ELLIPSE&quot;). Brush is the name of the subclass in CfgMarkerBrushes." Syntax="markerName setMarkerBrushLocal brush">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="brush" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets marker color." Syntax="markerName setMarkerColor color">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="color" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerColorLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets marker color for the given marker locally." Syntax="markerName setMarkerColorLocal color">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="color" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the orientation of the marker. Angle is in degrees." Syntax="markerName setMarkerDir angle">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="angle" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerDirLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the orientation of the marker. Angle is in degrees." Syntax="markerName setMarkerDirLocal angle">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="angle" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves the marker. Pos format is Position2D." Syntax="markerName setMarkerPos pos">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerPosLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves the marker. Pos format is Position2D." Syntax="markerName setMarkerPosLocal pos">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerShape" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the shape (type) of the marker.Shape can be &quot;ICON&quot;, &quot;RECTANGLE&quot;, &quot;ELLIPSE&quot; or &quot;POLYLINE&quot;." Syntax="markerName setMarkerShape shape">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="shape" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerShapeLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Selects the shape (type) of the marker.Shape can be &quot;ICON&quot;, &quot;RECTANGLE&quot; or &quot;ELLIPSE&quot;." Syntax="markerName setMarkerShapeLocal shape">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="shape" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerSize" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set marker size.Size is in format [a-axis, b-axis]." Syntax="markerName setMarkerSize [a-axis, b-axis]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="a-axis" DataType="Scalar"/>
        <ParamInfo Name="b-axis" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerSizeLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set marker size.Size is in format [a-axis, b-axis]." Syntax="markerName setMarkerSizeLocal [a-axis, b-axis]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="a-axis" DataType="Scalar"/>
        <ParamInfo Name="b-axis" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the text label of an existing marker." Syntax="markerName setMarkerText text">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerTextLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the text label of an existing marker." Syntax="markerName setMarkerTextLocal text">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set marker type. See cfgMarkers for a list of standard markers." Syntax="markerName setMarkerType type">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMarkerTypeLocal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set marker type. See cfgMarkers for a list of standard markers." Syntax="markerName setMarkerTypeLocal type">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="markerName" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change." Syntax="myObject setMass mass">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="myObject" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="mass" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change." Syntax="myObject setMass [mass, time]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="myObject" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="mass" DataType="Scalar"/>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMimic" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set person's facial expression." Syntax="person setMimic mimic">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mimic" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMissileTarget" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if succeessful" Descr="Sets a guided missile target. Doesn't work for all types of missiles. If target is dead, target is ignored." Syntax="munition setMissileTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="munition" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMissileTargetPos" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets a guided missile target position. Doesn't work for all types of missiles." Syntax="munition setMissileTargetPos position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="munition" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMousePosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves mouse pointer to specified position on the screen. x and y could be any number, but will be clipped so mouse never leaves the screen area." Syntax="setMousePosition [x, y]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMusicEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the music track played on activation.Track is a subclass name of CfgMusic. In addition, &quot;$STOP$&quot; (stops the current music track)." Syntax="trigger setMusicEffect track">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="track" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMusicEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the music track played on activation.Track is a subclass name of CfgMusic. In addition, &quot;$STOP$&quot; (stops the current music track)." Syntax="waypoint setMusicEffect track">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="track" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setMusicEventHandler" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - id of the event handler" Descr="Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them." Syntax="setMusicEventHandler [type, function]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="function" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player." Syntax="object setName name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player." Syntax="unit setName [name, firstName, lastName]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="firstName" DataType="String"/>
        <ParamInfo Name="lastName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player." Syntax="location setName name">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setNameSound" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the nameSound of a person." Syntax="person setNameSound name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectArguments" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Set object arguments in mission editor." Syntax="map setObjectArguments [object,[name1,value1,...]]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="[name1,value1,...]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectMaterial" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets material of object selection. The selection number is defined through the  hiddenselection[]={} array in the vehicle's config (starting with 0)." Syntax="obj setObjectMaterial [selectionNumber, material]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="selectionNumber" DataType="Scalar"/>
        <ParamInfo Name="material" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectMaterialGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the material of the given selection on all computers in a network session." Syntax="obj setObjectMaterialGlobal [selection, material]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="selection" DataType="Scalar"/>
        <ParamInfo Name="material" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectProxy" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the proxy object associated with the given editor object." Syntax="map setObjectProxy [object,proxy object]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="proxyobject" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectTexture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Textures object selection with texture named in array. Array has the form [selectionNumber, &quot;Texture&quot;]." Syntax="object setObjectTexture [selectionNumber,texture]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="selectionNumber" DataType="Scalar"/>
        <ParamInfo Name="texture" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectTextureGlobal" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the texture of the given selection on all computers in a network session." Syntax="obj setObjectTextureGlobal [selection, texture]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="selection" DataType="Scalar"/>
        <ParamInfo Name="texture" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectViewDistance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the rendering distance of objects (and shadows)." Syntax="setObjectViewDistance distance">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setObjectViewDistance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the rendering distance of objects (and shadows)." Syntax="setObjectViewDistance  [objectDistance, shadowDistance]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objectDistance" DataType="Scalar"/>
        <ParamInfo Name="shadowDistance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setOvercast" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change." Syntax="time setOvercast overcast">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="overcast" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setOwner" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="From server machine, change the ownership of an object to a given client. Returns true if locality was changed.Since Arma 3 v1." Syntax="object setOwner clientID">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="clientID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setOxygenRemaining" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1." Syntax="unit setOxygenRemaining value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setParticleCircle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity." Syntax="particleSource setParticleCircle [radius, velocity]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="particleSource" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
        <ParamInfo Name="velocity" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setParticleClass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set parameters from existing config class. ClassName is name of the class from CfgCloudlets. Since version 1.11." Syntax="source setParticleClass className">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="source" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="className" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setParticleFire" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set fire parameters to particle effect.Note: You need to create emitter at first. Basic parameters of particle effect must be defined too." Syntax="source setParticleFire [coreIntensity, coreDistance, damageTime]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="source" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="coreIntensity" DataType="Scalar"/>
        <ParamInfo Name="coreDistance" DataType="Scalar"/>
        <ParamInfo Name="damageTime" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setParticleParams" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set parameters to particle source. Array is in format ParticleArray. Since Arma 3 version 1.11." Syntax="particleSource setParticleParams array">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="particleSource" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setParticleRandom" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets randomization of particle source parameters." Syntax="particleSource setParticleRandom [lifeTime, position, moveVelocity, rotationVelocity, size, color, directionPeriod, directionIntensity, angle, bounceOnSurface]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="particleSource" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="lifeTime" DataType="Scalar"/>
        <ParamInfo Name="position" DataType="Array"/>
        <ParamInfo Name="moveVelocity" DataType="Array"/>
        <ParamInfo Name="rotationVelocity" DataType="Scalar"/>
        <ParamInfo Name="size" DataType="Scalar"/>
        <ParamInfo Name="color" DataType="Any"/>
        <ParamInfo Name="directionPeriod" DataType="Scalar"/>
        <ParamInfo Name="directionIntensity" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="bounceOnSurface" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPiPEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets Render Target's visual effect (Picture-in-Picture)." Syntax="name setPiPEffect [effect, optionalParam1, ..., optionalParamN]">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="effect" DataType="Scalar"/>
        <ParamInfo Name="optionalParam1" DataType="Any"/>
        <ParamInfo Name="..." DataType="Any"/>
        <ParamInfo Name="optionalParamN" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPilotCameraDirection" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the direction of object airplane or helicopter pilotCamera (vector in model space)." Syntax="object setPilotCameraDirection Vector3D">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="Vector3D" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPilotCameraRotation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera ." Syntax="object setPilotCameraRotation rotation">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="rotation" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPilotCameraTarget" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Sets an area or target to be tracked by the object airplane or helicopter pilotCamera." Syntax="object setPilotCameraTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPilotCameraTarget" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Sets an area or target to be tracked by the object airplane or helicopter pilotCamera." Syntax="object setPilotCameraTarget target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPilotLight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches headlights of a vehicle on/off." Syntax="vehicle setPilotLight set">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="set" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPitch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the pitch of a persons voice." Syntax="person setPitch pitch">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pitch" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPlateNumber" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Change the license plates on any vehicle which has plates configured." Syntax="vehicle setPlateNumber string">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPlayable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create MP role for the unit. The roles created this way are used for Join In Progress and Team Switch." Syntax="setPlayable unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPlayerRespawnTime" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the time interval to wait on player respawn. It is set to mission default on mission start again." Syntax="setPlayerRespawnTime interval">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="interval" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPlayerVoNVolume" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets provided player's Voice over Network (VoN) volume." Syntax="unit setPlayerVoNVolume volume">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="volume" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets object position." Syntax="object setPos pos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPosASL" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the object position above sea level. The pos array uses the PositionASL format." Syntax="object setPosASL pos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPosASL2" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center." Syntax="obj setPosASL2 pos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPosASLW" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the object position above sea surface. The pos array uses the PositionASLW format." Syntax="obj setPosASLW pos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPosATL" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the position of an object relative to the terrain." Syntax="object setPosATL pos">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPosWorld" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets position of an object based on PositionWorld, which is PositionASL of the model centre [0,0,0]." Syntax="object setPosWorld position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the position of a location." Syntax="location setPosition pos">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPylonLoadOut" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Will add missile to vehicle pylon, TransportPylonsComponent in config is required" Syntax="vehicle setPylonLoadout [pylon, magazine, forced, turret]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Any"/>
        <ParamInfo Name="magazine" DataType="String"/>
        <ParamInfo Name="forced" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="turret" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPylonLoadout" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Will add missile to vehicle pylon, TransportPylonsComponent in config is required" Syntax="vehicle setPylonLoadout [pylon, magazine, forced, turret]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pylon" DataType="Any"/>
        <ParamInfo Name="magazine" DataType="String"/>
        <ParamInfo Name="forced" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="turret" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setPylonsPriority" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Overrides default pylons priorities" Syntax="vehicle setPylonsPriority [priority pylon1, priority pylon2, ...]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="prioritypylon1" DataType="Any"/>
        <ParamInfo Name="prioritypylon2" DataType="Any"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRadioMsg" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets radio trigger menu title text (0 -&gt; 0 -&gt; map radio). Use &quot;NULL&quot; to disable radio slot." Syntax="index setRadioMsg text">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRain" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change." Syntax="time setRain rain">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="rain" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRainbow" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change." Syntax="time setRainbow value">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRandomLip" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it's talking." Syntax="unit setRandomLip bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRank" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets rank of given unit.Possible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL.    Since Arma 3 v1." Syntax="unitName setRank rank">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="rank" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRectangular" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical." Syntax="location setRectangular set">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="set" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRepairCargo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set amount of repair resources in cargo space of repair vehicle.Amount 1 is full cargo." Syntax="vehicleName setRepairCargo amount">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="amount" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setRotorBrakeRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Toggle a helicopter's rotor brake on or off." Syntax="helicopterRTD setRotorBrakeRTD enable">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setShadowDistance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the shadows rendering distance." Syntax="setShadowDistance value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setShotParents" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets vehicle and instigator pair for the given projectile." Syntax="projectile setShotParents [vehicle, instigator]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="projectile" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="instigator" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSide" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets a location's side. The default side is Unknown." Syntax="location setSide side">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Side">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimpleTaskAlwaysVisible" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Makes the given task allways visible or not." Syntax="taskID setSimpleTaskAlwaysVisible state">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="taskID" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimpleTaskCustomData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom." Syntax="task setSimpleTaskCustomData [IconPath, tooltip, description]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="IconPath" DataType="String"/>
        <ParamInfo Name="tooltip" DataType="String"/>
        <ParamInfo Name="description" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimpleTaskDescription" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach descriptions to the simple task." Syntax="task setSimpleTaskDescription [description, descriptionShort, descriptionHUD]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="description" DataType="String"/>
        <ParamInfo Name="descriptionShort" DataType="String"/>
        <ParamInfo Name="descriptionHUD" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimpleTaskDestination" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach a destination to the simple task." Syntax="task setSimpleTaskDestination pos">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimpleTaskTarget" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach a target to the simple task.Overrides setSimpleTaskDestination." Syntax="task setSimpleTaskTarget [target, precisePosition]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
        <ParamInfo Name="precisePosition" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimpleTaskType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach type to the simple task." Syntax="task setSimpleTaskType taskType">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="taskType" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSimulWeatherLayers" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets number of simul weather layers, affects quality of simul weather clouds." Syntax="setSimulWeatherLayers layers">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="layers" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSize" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the size (radius)  of a location.The width  is 2 * x, the height is 2 * y." Syntax="location setSize size">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="size" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSkill" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets ability level of person (commander unit). Value of skill may vary from 0 to 1." Syntax="unit setSkill skill">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="skill" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSkill" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets ability level of person (commander unit). Value of skill may vary from 0 to 1." Syntax="unit setSkill [skillName, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSkill_array" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets sub-skill level of an unit / commander unit. Value of sub-skill may vary from 0 to 1." Syntax="unit setSkill skill">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="skill" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSkill_array" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets sub-skill level of an unit / commander unit. Value of sub-skill may vary from 0 to 1." Syntax="unit setSkill [skillName, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSlingLoad" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Creates sling loading from first object to second object if possible. To unload cargo, pass objNull as second param." Syntax="heli setSlingLoad cargo">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="heli" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargo" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSoundEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the different sound effects." Syntax="trigger setSoundEffect [sound, voice, soundEnv, soundDet]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="voice" DataType="String"/>
        <ParamInfo Name="soundEnv" DataType="String"/>
        <ParamInfo Name="soundDet" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSoundEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the different sound effects." Syntax="waypoint setSoundEffect [sound, voice, soundEnv, soundDet]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="sound" DataType="String"/>
        <ParamInfo Name="voice" DataType="String"/>
        <ParamInfo Name="soundEnv" DataType="String"/>
        <ParamInfo Name="soundDet" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSpeaker" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the speaker of a person." Syntax="person setSpeaker speaker">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="speaker" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSpeech" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add speech to location." Syntax="location setSpeech speech">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="speech" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSpeedMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group speed mode." Syntax="groupName setSpeedMode mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSpeedMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set group speed mode." Syntax="groupName setSpeedMode mode">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setStamina" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set units' stamina (seconds until depletion)" Syntax="unit setStamina stamina">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="stamina" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setStaminaScheme" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set stamina bar color. The scheme can be &quot;Normal&quot;, &quot;FastDrain&quot;, &quot;Exhausted&quot; or &quot;Default&quot;." Syntax="setStaminaScheme scheme">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="scheme" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setStatValue" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Sets a value to a given stat." Syntax="setStatValue [name, value]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSuppression" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the person's suppression, from 0 to 1." Syntax="unit setSuppression value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setSystemOfUnits" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set system of units." Syntax="setSystemOfUnits value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTargetAge" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets how the target is known to the other centers. They behave like the target was seen age seconds ago." Syntax="object setTargetAge age">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="age" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTaskMarkerOffset" ReturnType="Nothing" ReturnName="result" ReturnDescr="" Descr="Sets the task marker position in model space." Syntax="obj setTaskMarkerOffset">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTaskResult" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set a result of the task." Syntax="task setTaskResult [state,result]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Any"/>
        <ParamInfo Name="result" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTaskState" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set the state of a given task." Syntax="task setTaskState state">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="state" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTerrainGrid" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Operation Flashpoint, VBS1: Set desired terrain resolution (in meters)." Syntax="setTerrainGrid grid">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="grid" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the text associated with a location. This text will be displayed on the game map at the location's position." Syntax="location setText text">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTimeMultiplier" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets a time multiplier for in-game time. The command range is now capped at 0.1 - 120 to avoid performance problems." Syntax="setTimeMultiplier value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTitleEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the title effect via [Type, Effect, Text] where'Type' can be &quot;NONE&quot;, &quot;OBJECT&quot;, 'Text' defines the shown object , a subclass of CfgTitles." Syntax="trigger setTitleEffect [type, effect, text]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="effect" DataType="String"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTitleEffect" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the title effect via [Type, Effect, Text] where'Type' can be &quot;NONE&quot;, &quot;OBJECT&quot;, 'Text' defines the shown object , a subclass of CfgTitles." Syntax="waypoint setTitleEffect [type, effect, text]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="effect" DataType="String"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerActivation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the trigger activation type." Syntax="trigger setTriggerActivation [by, type, repeating]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="by" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="repeating" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerArea" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the area monitored by the given trigger. The area could be either rectangular or elliptical. Since Arma 3 v1.59." Syntax="trigger setTriggerArea [a, b, angle, isRectangle, c]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="a" DataType="Scalar"/>
        <ParamInfo Name="b" DataType="Scalar"/>
        <ParamInfo Name="angle" DataType="Scalar"/>
        <ParamInfo Name="isRectangle" DataType="Boolean"/>
        <ParamInfo Name="c" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerInterval" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets the interval in seconds for trigger condition check.ⓘ Triggers are configured to check condition approx. every 0.5 second by default." Syntax="trigger setTriggerInterval interval">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="interval" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerStatements" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines trigger condition, activation and deactivation statements. Trigger condition has to return Boolean." Syntax="trigger setTriggerStatements [condition, activation, deactivation]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="condition" DataType="String"/>
        <ParamInfo Name="activation" DataType="String"/>
        <ParamInfo Name="deactivation" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers." Syntax="trigger setTriggerText text">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerTimeout" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid)." Syntax="trigger setTriggerTimeout [min, mid, max, interruptable]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="min" DataType="Scalar"/>
        <ParamInfo Name="mid" DataType="Scalar"/>
        <ParamInfo Name="max" DataType="Scalar"/>
        <ParamInfo Name="interruptable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setTriggerType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission): &quot;NONE&quot; &quot;EAST G&quot; - Guarded b" Syntax="trigger setTriggerType action">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes a location to the specified class. Location classes are defined in CfgLocationTypes." Syntax="location setType name">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnconscious" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Since Arma 3 v1.63.136889, this command sets unit into incapacitated state and lifeState command returns &quot;INCAPACITATED&quot;." Syntax="unit setUnconscious set">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="set" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitAbility" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets skill of given unit." Syntax="unit setUnitAbility value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitLoadout" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a loadout from given inventory structure and applies it to a unit.  This command is not final and might be changed in a near future." Syntax="unit setUnitLoadout loadout">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="loadout" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitLoadout" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a loadout from given inventory structure and applies it to a unit.  This command is not final and might be changed in a near future." Syntax="unit setUnitLoadout [loadout, fullMagazines]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="loadout" DataType="Array"/>
        <ParamInfo Name="fullMagazines" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitLoadout" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a loadout from given inventory structure and applies it to a unit.  This command is not final and might be changed in a near future." Syntax="unit setUnitLoadout name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitLoadout" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Creates a loadout from given inventory structure and applies it to a unit.  This command is not final and might be changed in a near future." Syntax="unit setUnitLoadout config">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Config">
      <ParamInfos>
        <ParamInfo Name="config" DataType="Config"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set unit position rules. Mode may be one of:  &quot;DOWN&quot; - unit goes prone and stays prone. &quot;UP&quot; - unit stands and stays standing." Syntax="unit setUnitPos mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitPosWeak" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set unit position rules. Mode may be one of:  &quot;DOWN&quot; - person goes prone and stays prone. &quot;UP&quot; - person stands and stays standing." Syntax="unit setUnitPosWeak mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitRank" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets rank of given unit." Syntax="unitName setUnitRank rank">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="rank" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitRecoilCoefficient" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil." Syntax="unitName setUnitRecoilCoefficient coefficient">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="coefficient" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnitTrait" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool." Syntax="unit setUnitTrait [skillName, value, isCustom]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
        <ParamInfo Name="isCustom" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUnloadInCombat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local." Syntax="vehicle setUnloadInCombat [allowCargo, allowTurrets]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="allowCargo" DataType="Boolean"/>
        <ParamInfo Name="allowTurrets" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUserActionText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes user added action (see addAction) menu item text. Since Arma 3 v1.61." Syntax="object setUserActionText [actionIndex, textMenu, textWindowBackground, textWindowForeground]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="actionIndex" DataType="Scalar"/>
        <ParamInfo Name="textMenu" DataType="String"/>
        <ParamInfo Name="textWindowBackground" DataType="String" IsOptional="True"/>
        <ParamInfo Name="textWindowForeground" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUserMFDText" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Stored user text value in MFD, limit is 50, user0..." Syntax="vehicle setUserMFDText [index, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUserMFDValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Store user value in MFD, limit is 10, user0...user9." Syntax="vehicle setUserMFDValue [index, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setUserMFDvalue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Store user value in MFD, limit is 10, user0...user9." Syntax="vehicle setUserMFDValue [index, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="index" DataType="Scalar"/>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Namespace">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Namespace"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Task"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Location"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Display">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Display"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVariable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set variable to given value in the variable space of given element.To remove a variable, set it to nil (e.g. player setVariable [&quot;varname&quot;, nil];)." Syntax="varspace setVariable [name, value]">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="varspace" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVectorDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set object's direction vector. Up vector will remain unchanged." Syntax="object setVectorDir [x,y,z]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="z" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVectorDirAndUp" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets orientation of an object. The command takes 2 vector arrays, one for vectorDir and one for vectorUp." Syntax="vehicle setVectorDirAndUp [[x1, y1, z1], [x2, y2, z2]]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="[x1, y1, z1]" DataType="Array"/>
        <ParamInfo Name="[x2, y2, z2]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVectorUp" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set object's up vector. Direction of the object remain unchanged. Default object's vectorUp is [0,0,1]." Syntax="object setVectorUp [x, y, z]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="z" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleAmmo" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has." Syntax="vehicleName setVehicleAmmo value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleAmmoDef" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has." Syntax="unit setVehicleAmmoDef value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleArmor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the armor (or health for men) state of the vehicle (a value from 0 to 1)." Syntax="vehicleName setVehicleArmor value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleCargo" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - whether the vehicle was able to be loaded" Descr="Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded." Syntax="vehicle setVehicleCargo cargo">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="cargo" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleId" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets id (integer value) to vehicle. By this id vehicle is referenced by triggers and waypoints." Syntax="vehicleName setVehicleId id">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="id" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleInit" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attach a statement to a unit. The statement is propagated over the network in MP games, it can be executed by invoking processInitCommands." Syntax="unitName setVehicleInit statement">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="statement" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleLock" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets vehicle lock." Syntax="vehicleName setVehicleLock lockState">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="lockState" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehiclePosition" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success, false on failure" Descr="Moves the object to a given position (same as createVehicle placement algorithm)." Syntax="object setVehiclePosition [position, markers, placement, special]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Any"/>
        <ParamInfo Name="markers" DataType="Array"/>
        <ParamInfo Name="placement" DataType="Scalar"/>
        <ParamInfo Name="special" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleRadar" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the AI rules of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat." Syntax="vehicle setVehicleRadar rules">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="rules" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleReceiveRemoteTargets" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center." Syntax="vehicle setVehicleReceiveRemoteTargets bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleReportOwnPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets that the vehicle will share its own position via datalink to the Side center." Syntax="vehicle setVehicleReportOwnPosition report">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="report" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleReportRemoteTargets" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center." Syntax="vehicle setVehicleReportRemoteTargets bool">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleTIPars" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the &quot;heat&quot; state of different vehicle parts (for TI detection)." Syntax="vehicle setVehicleTIPars [engine, wheels, weapon]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="engine" DataType="Scalar"/>
        <ParamInfo Name="wheels" DataType="Scalar"/>
        <ParamInfo Name="weapon" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleTiPars" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the &quot;heat&quot; state of different vehicle parts (for TI detection)." Syntax="vehicle setVehicleTIPars [engine, wheels, weapon]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="engine" DataType="Scalar"/>
        <ParamInfo Name="wheels" DataType="Scalar"/>
        <ParamInfo Name="weapon" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVehicleVarName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets string representation of an object to a custom string." Syntax="object setVehicleVarName name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVelocity" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set velocity (speed vector) of a vehicle.   Units are in metres per second." Syntax="vehicleName setVelocity [x, y, z]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="z" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVelocityModelSpace" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the velocity (speed vector) of the given vehicle relative to its model." Syntax="vehicle setVelocityModelSpace [x, y, z]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="z" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVelocityTransformation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Interpolate and sets vectors. For additional info see this resource." Syntax="object setVelocityTransformation [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="fromPosASL" DataType="Array"/>
        <ParamInfo Name="toPosASL" DataType="Array"/>
        <ParamInfo Name="fromVelocity" DataType="Array"/>
        <ParamInfo Name="toVelocity" DataType="Array"/>
        <ParamInfo Name="fromVectorDir" DataType="Array"/>
        <ParamInfo Name="toVectorDir" DataType="Array"/>
        <ParamInfo Name="fromVectorUp" DataType="Array"/>
        <ParamInfo Name="toVectorUp" DataType="Array"/>
        <ParamInfo Name="interval" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setViewDistance" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set rendering distance, in metres. Default is 900m (in OFP) or 1,200m (in ArmA), accepted range is 500m to 5,000m (in OFP) or 10,000m (in ArmA)." Syntax="setViewDistance distance">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="distance" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setVisibleIfTreeCollapsed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets whether or not the object is visible even if the tree is collapsed." Syntax="map setVisibleIfTreeCollapsed [object, visible]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="visible" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWPPos" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set waypoint position" Syntax="waypoint setWPPos pos">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWantedRPMRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Tell the helicopter engine RPMs to reach the given value within a period of time." Syntax="helicopterRTD setWantedRPMRTD [value, time, engineIndex]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
        <ParamInfo Name="time" DataType="Scalar"/>
        <ParamInfo Name="engineIndex" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaves" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change." Syntax="time setWaves value">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointBehaviour" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches the unit behaviour when the waypoint becomes active." Syntax="waypoint setWaypointBehaviour mode">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointCombatMode" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The group combat mode is switched when the waypoint becomes active." Syntax="waypoint setWaypointCombatMode mode">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointCompletionRadius" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The completion radius allows units to call the waypoint completed once they are inside of the given circle." Syntax="waypoint setWaypointCompletionRadius radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointDescription" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the description shown in the HUD while the waypoint is active." Syntax="waypoint setWaypointDescription text">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointForceBehaviour" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces the behavior of waypoint, disables AUTOCOMBAT." Syntax="waypoint setWaypointForceBehaviour state">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointFormation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches the group formation when the waypoint becomes active." Syntax="waypoint setWaypointFormation formation">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="formation" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointHousePosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="For waypoints attached to a house, this defines the target house position." Syntax="waypoint setWaypointHousePosition pos">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointLoiterAltitude" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Assignes loiter altitude to waypoint" Syntax="waypoint setWaypointLoiterAltitude loiterAltitude">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="loiterAltitude" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointLoiterRadius" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assignes loiter radius to waypoint" Syntax="waypoint setWaypointLoiterRadius radius">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointLoiterType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the waypoint loiter type." Syntax="waypoint setWaypointLoiterType type">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointName" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the waypoint name." Syntax="waypoint setWaypointName name">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Moves the waypoint to a random position in a circle with the given center and radius." Syntax="waypoint setWaypointPosition [center, radius]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="center" DataType="Any"/>
        <ParamInfo Name="radius" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointScript" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attaches a script to a scripted waypoint." Syntax="waypoint setWaypointScript command">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="command" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointSpeed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switches the group speed mode when the waypoint becomes active." Syntax="waypoint setWaypointSpeed mode">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointStatements" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed." Syntax="waypoint setWaypointStatements [condition, statement]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="condition" DataType="String"/>
        <ParamInfo Name="statement" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointTimeout" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid)." Syntax="waypoint setWaypointTimeout [min, mid, max]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="min" DataType="Scalar"/>
        <ParamInfo Name="mid" DataType="Scalar"/>
        <ParamInfo Name="max" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointType" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the waypoint type." Syntax="waypoint setWaypointType type">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWaypointVisible" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the visibility of the waypoint." Syntax="waypoint setWaypointVisible visible">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="visible" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWeaponReloadingTime" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if given weapon is found" Descr="Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time." Syntax="vehicle setWeaponReloadingTime [gunner, muzzleName, reloadTime]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="gunner" DataType="Object"/>
        <ParamInfo Name="muzzleName" DataType="String"/>
        <ParamInfo Name="reloadTime" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWind" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set current (forced == false) or permanent (forced == true) wind vector.NOTE: The effect is global only if command is executed on the server." Syntax="setWind [x, y, forced]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
        <ParamInfo Name="y" DataType="Scalar"/>
        <ParamInfo Name="forced" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWindDir" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change." Syntax="time setWindDir value">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWindForce" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set max. wind overall wind changes in time. A time of zero means there will be an immediate change." Syntax="time setWindForce wind">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="wind" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWindStr" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change." Syntax="time setWindStr value">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="setWingForceScaleRTD" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Set effectivity of wings" Syntax="helicopterRTD setWingForceScaleRTD [leftHorizontal, rightHorizontal, vertical]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopterRTD" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="leftHorizontal" DataType="Any"/>
        <ParamInfo Name="rightHorizontal" DataType="Scalar"/>
        <ParamInfo Name="vertical" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="show3DIcons" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Toggle the drawing of 3D icons." Syntax="map show3DIcons bool">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows/hides the whole chat window." Syntax="showChat bool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showCinemaBorder" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control." Syntax="showCinemaBorder show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showCommandingMenu" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden." Syntax="showCommandingMenu name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showCompass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows or hides the compass on the map screen, if enabled for the mission and you possess the item." Syntax="showCompass show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showCuratorCompass" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Hides or shows compass in curator interface." Syntax="showCuratorCompass bool">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showGPS" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item." Syntax="showGPS show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showHUD" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable showing of HUD." Syntax="showHUD enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showHUD" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable / disable showing of HUD." Syntax="showHUD [hud, info, radar, compass, direction, menu, group, cursors, panels, kills]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="hud" DataType="Boolean"/>
        <ParamInfo Name="info" DataType="Boolean"/>
        <ParamInfo Name="radar" DataType="Boolean"/>
        <ParamInfo Name="compass" DataType="Boolean"/>
        <ParamInfo Name="direction" DataType="Boolean"/>
        <ParamInfo Name="menu" DataType="Boolean"/>
        <ParamInfo Name="group" DataType="Boolean"/>
        <ParamInfo Name="cursors" DataType="Boolean"/>
        <ParamInfo Name="panels" DataType="Boolean"/>
        <ParamInfo Name="kills" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showLegend" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Show/hide map legend." Syntax="map showLegend bool">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="bool" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showMap" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable Map (default true)" Syntax="showMap show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showNewEditorObject" ReturnType="Any" ReturnName="result" ReturnDescr="Any" Descr="Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is p" Syntax="map showNewEditorObject [type,class,side,position]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="class" DataType="Any"/>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showPad" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2." Syntax="showPad show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows or hides the radio on the map screen, if enabled for the mission and you possess the item." Syntax="showRadio show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showScoretable" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP." Syntax="showScoretable force">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="force" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showSubtitles" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected." Syntax="showSubtitles enable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enable" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showUAVFeed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - always true unless error" Descr="Shows/hides video feed transmitted from UAV." Syntax="showUAVFeed show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showWarrant" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable ID card (default false). Obsolete command." Syntax="showWarrant show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showWatch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows or hides the watch on the map screen, if enabled for the mission and you possess the item." Syntax="showWatch show">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="show" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showWaypoint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the condition determining when the waypoint is shown." Syntax="waypoint showWaypoint show">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="show" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="showWaypoints" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings." Syntax="showWaypoints enabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="enabled" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="shownArtilleryComputer" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the player has the artillery computer currently open." Syntax="shownArtilleryComputer">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownChat" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if chat window is enabled. Chat window can be disabled with showChat command." Syntax="shownChat">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownCompass" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command." Syntax="shownCompass">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownCuratorCompass" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if compass is shown." Syntax="shownCuratorCompass">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownGPS" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command." Syntax="shownGPS">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownHUD" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [hud, info, radar, compass, direction, menu, group, cursors, pan" Descr="Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD)." Syntax="shownHUD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownMap" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command." Syntax="shownMap">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownPad" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if client has Notepad enabled." Syntax="shownPad">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownRadio" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if player has Radio enabled." Syntax="shownRadio">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownScoretable" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - 0: Force hidden, 1: Force shown, -1: Default" Descr="Returns the state of the score table set with showScoretable command.   Since Arma 3 v1.63." Syntax="shownScoretable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownUAVFeed" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if video feed transmitted from UAV is shown." Syntax="shownUAVFeed">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownWarrant" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if player has ID card enabled. Obsolete command." Syntax="shownWarrant">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="shownWatch" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command." Syntax="shownWatch">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="side" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Returns the side of a unit, vehicle, object or location. Once dead, a unit will be on the civilian side." Syntax="side object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="side" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Returns the side of a unit, vehicle, object or location. Once dead, a unit will be on the civilian side." Syntax="side object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="side" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="Returns the side of a unit, vehicle, object or location. Once dead, a unit will be on the civilian side." Syntax="side object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sideChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the side radio channel. Must have assigned &quot;ItemRadio&quot; to see or transmit the messages." Syntax="unitName sideChat chatText">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sideChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the side radio channel. Must have assigned &quot;ItemRadio&quot; to see or transmit the messages." Syntax="[side, identity] sideChat chatText">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="identity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sideEnemy" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="The enemy side (used for renegades). Unit of this side is enemy to everyone.To become one, you can attack members of your own side or use addRating." Syntax="sideEnemy">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="sideFriendly" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="The Friendly side (used for captives)." Syntax="sideFriendly">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="sideLogic" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="The Logic side.Side of Game Logics and Modules." Syntax="sideLogic">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="sideRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the side radio channel. Must have assigned &quot;ItemRadio&quot; to send or receive the transmission." Syntax="unit sideRadio radioName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sideRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the side radio channel. Must have assigned &quot;ItemRadio&quot; to send or receive the transmission." Syntax="[side, identity] sideRadio radioName">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="identity" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sideUnknown" ReturnType="Side" ReturnName="result" ReturnDescr="Side" Descr="The unknown side.Used when the side of a unit is unknown, e.g. for spotted targets with insufficient information." Syntax="sideUnknown">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="simpleTasks" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return all simple tasks assigned to given person." Syntax="simpleTasks person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="simulCloudDensity" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns density of clouds at given position." Syntax="simulCloudDensity pos">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="simulCloudOcclusion" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds)." Syntax="simulCloudOcclusion [pos1,pos2]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Array"/>
        <ParamInfo Name="pos2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="simulInClouds" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns if given position is in clouds." Syntax="simulInClouds pos">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="simulSetHumidity" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Sets simul cloud cover. This command does not affect overcast value." Syntax="simulSetHumidity humidity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="humidity" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="simulWeatherSync" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Synchronizes Simul Weather with Arma weather, generates all keyframes." Syntax="simulWeatherSync">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="simulationEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if the entity has enabled simulation." Syntax="simulationEnabled entity">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="entity" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sin" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Sine of x, argument in Degrees." Syntax="sin x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="size" ReturnType="Array" ReturnName="result" ReturnDescr="Array = in format [x,y] in meters" Descr="Returns a location's size." Syntax="size location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sizeOf" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the diameter of bounding sphere of the object of given type in meters." Syntax="sizeOf classname">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="classname" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="skill" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill." Syntax="skill unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="skill" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill." Syntax="unitName skill skillName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="skillFinal" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings))." Syntax="unit skillFinal skillName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="skillName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="skipTime" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Jumps the specified number of hours forward or backward.The time of day and tides are adjusted, but no changes are made to any units." Syntax="skipTime duration">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="duration" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sleep" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected." Syntax="sleep delay">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="delay" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderPosition" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return current thumb position of slider idc of topmost user dialog." Syntax="sliderPosition idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderPosition" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return current thumb position of slider idc of topmost user dialog." Syntax="sliderPosition control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderRange" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [min, max]" Descr="Return limits, as an Array [min, max] of slider idc of topmost user dialog." Syntax="sliderRange idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderRange" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [min, max]" Descr="Return limits, as an Array [min, max] of slider idc of topmost user dialog." Syntax="sliderRange control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSetPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set current thumb position of slider idc of topmost user dialog." Syntax="sliderSetPosition [idc, pos]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="pos" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSetPosition" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set current thumb position of slider idc of topmost user dialog." Syntax="control sliderSetPosition pos">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="pos" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSetRange" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set limits of slider idc of topmost user dialog." Syntax="sliderSetRange [idc, min, max]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="min" DataType="Scalar"/>
        <ParamInfo Name="max" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSetRange" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set limits of slider idc of topmost user dialog." Syntax="control sliderSetRange [min, max]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="min" DataType="Scalar"/>
        <ParamInfo Name="max" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSetSpeed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set speed of slider with id idc of topmost user dialog. Click to arrow - move by line Click to scale outside thumb - move by page." Syntax="sliderSetSpeed [idc,line,page]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="line" DataType="Scalar"/>
        <ParamInfo Name="page" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSetSpeed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Set speed of slider with id idc of topmost user dialog. Click to arrow - move by line Click to scale outside thumb - move by page." Syntax="control sliderSetSpeed [line, page]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="line" DataType="Scalar"/>
        <ParamInfo Name="page" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSpeed" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [min, max]" Descr="Return speed, as an Array [min, max] of slider idc of topmost user dialog." Syntax="sliderSpeed idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sliderSpeed" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return speed, as an Array [min, max] of slider idc of topmost user dialog." Syntax="sliderSpeed control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="slingLoadAssistantShown" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if sling load assistant is shown, false otherwise" Descr="Returns true of Sling Load Assistant is open" Syntax="slingLoadAssistantShown">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="soldierMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all magazines of the given unit." Syntax="soldierMagazines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="someAmmo" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if unit has some ammo." Syntax=" someAmmo unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attempts to sort given array either in ascending (true) or descending (false) order." Syntax="array sort order">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="order" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="soundVolume" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Check current sound volume (set by fadeSound)." Syntax="soundVolume">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="spawn" ReturnType="Handle" ReturnName="result" ReturnDescr="Script Handle - can be used to determine (via scriptDone (also via isNull in Arm" Descr="Adds given code to the scheduler." Syntax="arguments spawn code">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="arguments" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="speaker" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the speaker of a person." Syntax="speaker person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="speed" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:3." Syntax="speed object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="speedMode" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns speed mode of the group, which can be any of the following:  &quot;LIMITED&quot; &quot;NORMAL&quot; &quot;FULL&quot;" Syntax=" speedMode groupName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="speedMode" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns speed mode of the group, which can be any of the following:  &quot;LIMITED&quot; &quot;NORMAL&quot; &quot;FULL&quot;" Syntax=" speedMode groupName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="splitString" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="An SQF version of C++ strtok. Splits given string str into an array of tokens according to given delimiters." Syntax="str splitString delimiters">
    <PreArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="str" DataType="String"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="delimiters" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sqrt" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns square root of x." Syntax="sqrt x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="squadParams" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [[squadNick,squadName,squadEmail,squadWeb,squadPicture,squadTitle],[memb" Descr="Returns data about squad of given unit loaded from squad.xml.All items in returned array are String." Syntax="squadParams unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="stance" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the stance of given unit - can be &quot;STAND&quot;, &quot;CROUCH&quot;, &quot;PRONE&quot;, &quot;UNDEFINED&quot; (for example, swimming) or &quot;&quot; (on non-human object)" Syntax="stance unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="startLoadingScreen" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows loading screen with the given text, using the given resource." Syntax="startLoadingScreen [text, resource]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="resource" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="stop" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Stop AI unit.Stopped unit will not be able to move, fire, or change its orientation to follow a watched object." Syntax="unitName stop toggle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="toggle" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="stopEngineRTD" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Instant engines stop." Syntax="stopEngineRTD heli">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="heli" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="stopped" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if unit is stopped by stop command." Syntax=" stopped unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="str" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Converts any value into a string by placing &quot; and &quot; around the argument. Since Arma 3 v1.63." Syntax="str value">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="sunOrMoon" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the sun to moon transition state in range 0..." Syntax="sunOrMoon">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="supportInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array with requested info or empty array []" Descr="Creates a list of supported operators and type." Syntax="supportInfo mask">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mask" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="suppressFor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Force suppressive fire from the unit." Syntax="unit suppressFor duration">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="duration" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="surfaceIsWater" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns whether water is at given position." Syntax="surfaceIsWater position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="surfaceNormal" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Example: [-0.102321,0.19977,0." Descr="Returns surface normal on given position." Syntax="surfaceNormal position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="surfaceTexture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Same as surfaceType, but returns texture path to ground texture as string." Syntax="surfaceTexture position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="surfaceType" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns what surface type is at the given position.See the spoiler for surface types: Details anzeigenA3 1." Syntax="surfaceType position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="swimInDepth" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the target depth level for swimming soldier." Syntax="unit swimInDepth value">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="value" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchAction" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person, the given action is started immediately (there is no transition)." Syntax="soldier switchAction action">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="action" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchCamera" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switch camera to given vehicle / camera." Syntax="target switchCamera mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchCamera" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switch camera to given vehicle / camera." Syntax="switchCamera target">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchGesture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person,the given move is started immediately (there is no transition)." Syntax="soldier switchGesture moveName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="moveName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchLight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Controls whether a lamp is lit or not. For working with CfgNonAIVehicles class &quot;StreetLamp&quot; only." Syntax="lamp switchLight mode">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="lamp" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="mode" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchMove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="When used on a person, the given move is started immediately (there is no transition)." Syntax="person switchMove moveName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="moveName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="switchableUnits" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of units accessible through Team Switch." Syntax="switchableUnits">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="synchronizeObjectsAdd" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Add given objects to the unit's list of synchronized objects." Syntax="unit synchronizeObjectsAdd objects">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizeObjectsRemove" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Remove given objects from the unit's list of synchronized objects." Syntax="unit synchronizeObjectsRemove objects">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizeTrigger" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Synchronizes the trigger with zero or more waypoints." Syntax="trigger synchronizeTrigger [waypoint1, waypoint2, ...]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint1" DataType="Array"/>
        <ParamInfo Name="waypoint2" DataType="Array"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizeWaypoint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index]." Syntax="waypoint synchronizeWaypoint [waypoint1, waypoint2, ...]">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint1" DataType="Array"/>
        <ParamInfo Name="waypoint2" DataType="Array"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizeWaypoint_trigger" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index]." Syntax="trigger synchronizeWaypoint [waypoint1, waypoint2, ...]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint1" DataType="Array"/>
        <ParamInfo Name="waypoint2" DataType="Array"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizedObjects" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return the list of objects synchronized with the given unit." Syntax="synchronizedObjects unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizedTriggers" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the list of triggers synchronized with a given waypoint." Syntax="synchronizedTriggers waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizedWaypoints" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the list of waypoints synchronized with a given trigger or waypoint." Syntax="synchronizedWaypoints obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="synchronizedWaypoints" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the list of waypoints synchronized with a given trigger or waypoint." Syntax="synchronizedWaypoints obj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="obj" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="systemChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the system radio channel. The text will be visible only on the PC where command was executed." Syntax="systemChat text">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="systemOfUnits" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the currently selected system of units." Syntax="systemOfUnits">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="systemTime" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [year, month, day, hour, minute, second, millisecond]" Descr="Returns system time." Syntax="systemTime">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="systemTimeUTC" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [year, month, day, hour, minute, second, millisecond]" Descr="Returns systemTime according to Universal Time Coordinated time scale." Syntax="systemTimeUTC">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="tan" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Tangent of x, argument in Degrees." Syntax="tan x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="targetKnowledge" ReturnType="Array" ReturnName="result" ReturnDescr="Array (7 elements)" Descr="Returns unit's knowledge about target." Syntax="unit targetKnowledge target">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="target" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="targets" ReturnType="Array" ReturnName="result" ReturnDescr="Array - unit's targets matching the criteria" Descr="Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned." Syntax="unit targets [enemyOnly, maxDistance, sides, maxAge, alternateCenter]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="enemyOnly" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="maxDistance" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="sides" DataType="Array" IsOptional="True"/>
        <ParamInfo Name="maxAge" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="alternateCenter" DataType="Array" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="targetsAggregate" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Aggregate candidates." Syntax="[speaker, side, unit, place, time] targetsAggregate candidates">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="speaker" DataType="Any"/>
        <ParamInfo Name="side" DataType="Side"/>
        <ParamInfo Name="unit" DataType="Object"/>
        <ParamInfo Name="place" DataType="Any"/>
        <ParamInfo Name="time" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="candidates" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="targetsQuery" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - sorted array of returned targets in the following format: [[accuracy, t" Descr="Returns sorted array of targets, known to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches th" Syntax="enquirer targetsQuery [targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="enquirer" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="targetIgnore" DataType="Object"/>
        <ParamInfo Name="targetSide" DataType="Side"/>
        <ParamInfo Name="targetType" DataType="String"/>
        <ParamInfo Name="targetPosition" DataType="Array"/>
        <ParamInfo Name="targetMaxAge" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskAlwaysVisible" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the task is flagged to be always visible or false if not." Syntax="taskAlwaysVisible task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskChildren" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array of children Tasks" Descr="Return the child tasks of the specified task." Syntax="taskChildren task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskCompleted" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if task has been Succeeded, Failed or Canceled" Descr="Return if task is completed." Syntax="taskCompleted task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskCustomData" ReturnType="Array" ReturnName="result" ReturnDescr="Array of string - iconPath, iconText, descriptionText" Descr="Returns custom data attached to the local task or an empty array if there are no custom data attached." Syntax="taskCustomData task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskDescription" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description]." Syntax="taskDescription task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskDestination" ReturnType="Array" ReturnName="result" ReturnDescr="Array (A3 1." Descr="Returns the position of the task (as specified by destination parameter in config)." Syntax="taskDestination task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskHint" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows info about new, changed or failed task. The text can contain several lines. \n is used to indicate the end of a line." Syntax="taskHint [text, colour, icon]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="colour" DataType="Array"/>
        <ParamInfo Name="icon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskMarkerOffset" ReturnType="Array" ReturnName="result" ReturnDescr="Array - offset in format [x, y, z]" Descr="Returns model space position for the task marker" Syntax="taskMarkerOffset unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskParent" ReturnType="Task" ReturnName="result" ReturnDescr="Task" Descr="Return the parent task of the specified task." Syntax="taskParent task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskResult" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  [state, result] (see setTaskResult)" Descr="Send a result of the task to the task sender." Syntax="taskResult task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskState" ReturnType="String" ReturnName="result" ReturnDescr="String - current state of task" Descr="Returns the current state of a task." Syntax="taskState  task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="taskType" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the type of the given task" Syntax="taskType task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="teamMember" ReturnType="Object" ReturnName="result" ReturnDescr="Team Member" Descr="Return an agent for given person." Syntax="teamMember person">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="person" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="teamName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return a name of given team." Syntax="teamName team">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="teamSwitch" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Invoke the Team Switch dialog (force it even when conditions are not met)." Syntax="teamSwitch">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="teamSwitchEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if Team Switch is currently enabled.Team Switch is enabled by default." Syntax="teamSwitchEnabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="teamType" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a type of given team." Syntax="teamType team">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="team" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="teams" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return a list of teams in the current mission." Syntax="teams">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="terminate" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Terminate (abort) spawned or execVM'd script." Syntax="terminate scriptHandle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Handle">
      <ParamInfos>
        <ParamInfo Name="scriptHandle" DataType="Handle"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="terrainIntersect" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks for intersection of terrain between two AGL positions. Returns true if intersects with terrain." Syntax="terrainIntersect [pos1, pos2]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Array"/>
        <ParamInfo Name="pos2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="terrainIntersectASL" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks for intersection of terrain between two ASL positions. Returns true if intersects with terrain." Syntax="terrainIntersectASL [pos1, pos2]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Array"/>
        <ParamInfo Name="pos2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="terrainIntersectAtASL" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - intersect position in format PositionASL" Descr="Checks for intersection of terrain between two ASL positions." Syntax="terrainIntersectAtASL [pos1, pos2]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pos1" DataType="Array"/>
        <ParamInfo Name="pos2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="text" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Creates a structured text containing the given plain text." Syntax="text string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="text" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Creates a structured text containing the given plain text." Syntax="text location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="textLog" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Dump argument value to debugging output." Syntax="textLog anything">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="anything" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="textLogFormat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Debugging output." Syntax="textLogFormat [format, arg1, arg2, ...]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="format" DataType="String"/>
        <ParamInfo Name="arg1" DataType="Any"/>
        <ParamInfo Name="arg2" DataType="Any"/>
        <ParamInfo Name="..." DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="text_location" ReturnType="String" ReturnName="result" ReturnDescr="Structured Text" Descr="Returns a location's text value." Syntax="text string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="text_location" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a location's text value." Syntax="text location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tg" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Identical to tan" Syntax="tg x">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="x" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="throw" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Throws an exception. The exception is processed by first catch block." Syntax="throw expression">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="expression" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="time" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use serverTime." Syntax="time">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="timeMultiplier" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - current time muliplier" Descr="Returns the value set with setTimeMultiplier." Syntax="timeMultiplier">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="titleCut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="this command was obsoleted, use cutText instead." Syntax="titleCut [text, type, speed]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="titleFadeOut" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Terminate the title effect and set duration of the fade out phase to the given time." Syntax="titleFadeOut duration">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="duration" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="titleObj" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Shows object defined in global config in CfgTitles." Syntax="titleObj [class, type, speed, showInMap]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="class" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="titleRsc" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Resource title - Resource can be defined in Description.ext Also see cutRsc, with these two commands you can show two different resources at once." Syntax="titleRsc [text, type, speed, showInMap]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="titleText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Displays text across the screen.If used along with cutText two different texts (in different type styles) can be shown at once." Syntax="titleText [text, type, speed,  showInMap, isStructuredText]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="type" DataType="String"/>
        <ParamInfo Name="speed" DataType="Scalar" IsOptional="True"/>
        <ParamInfo Name="showInMap" DataType="Boolean" IsOptional="True"/>
        <ParamInfo Name="isStructuredText" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toArray" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Converts the supplied String into an Array of Numbers. The numbers in the created array are the decimal Unicode representations of characters." Syntax="toArray string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toFixed" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Converts a number into a string, keeping a specified number of decimals." Syntax="number toFixed decimals">
    <PreArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="number" DataType="Scalar"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="decimals" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toFixed" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Converts a number into a string, keeping a specified number of decimals." Syntax="toFixed decimals">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="decimals" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toLower" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Converts the supplied string to all lowercase characters." Syntax="toLower string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toLowerANSI" ReturnType="String" ReturnName="result" ReturnDescr="String - all lower case string" Descr="ISO-8859-1Converts the supplied string to all lower case characters fast (could be 3x faster than toLower)." Syntax="toLowerANSI string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toString" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Converts the supplied Array of Numbers into a String. The numbers in the array to be converted are the decimal Unicode representations of characters." Syntax="toString array">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="array" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toUpper" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Converts the supplied string to all uppercase characters." Syntax="toUpper string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="toUpperANSI" ReturnType="String" ReturnName="result" ReturnDescr="String - all upper case string" Descr="ISO-8859-1Converts the supplied string to all upper case characters fast (could be 3x faster than toUpper)." Syntax="toUpperANSI string">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="string" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerActivated" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if the trigger has been activated." Syntax="triggerActivated trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerActivation" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns trigger activation in the form [by, type, repeating]." Syntax="triggerActivation trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerAmmo" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Triggers a munition such as shells, bullets, missiles, rockets and bombs (shotSubmunition/shotShell/shotBullet/shotMissile/shotRocket) as if it did hi" Syntax="triggerAmmo munition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="munition" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerArea" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [a, b, angle, isRectangle, c], where:a - trigger area X size / " Descr="Returns currently monitored trigger area." Syntax="triggerArea trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerAttachObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Assigns a static object to the trigger. The activation source is changed to &quot;STATIC&quot;." Syntax="triggerName triggerAttachObject objectId">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="triggerName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="objectId" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerAttachVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Specifies the entity which will activate the selected trigger.If [] is given, the trigger is decoupled from the assigned vehicle (example 2)." Syntax="triggerName triggerAttachVehicle objects">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="triggerName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="objects" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerAttachedVehicle" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns vehicle attached to the trigger (for example using triggerAttachVehicle)." Syntax="triggerAttachedVehicle trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerDynamicSimulation" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Controls ability of given unit to activate entities with disabled Arma_3_Dynamic_Simulation." Syntax="unit triggerDynamicSimulation trigger">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerInterval" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Trigger interval in seconds" Descr="Returns trigger condition check frequency in seconds." Syntax="triggerInterval trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerStatements" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format:0: condition: String1: code on activation: String2: code on d" Descr="Returns trigger statements in the form [cond, activ, desactiv]." Syntax="triggerStatements trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns trigger text." Syntax="triggerText trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerTimeout" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns trigger timeout in the form [min, mid, max, interruptable]." Syntax="triggerTimeout trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerTimeoutCurrent" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - time remaining before trigger activation." Descr="Returns trigger timeout or -1 if countdown is not in progress." Syntax="triggerTimeoutCurrent trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="triggerType" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns trigger type (see setTriggerType)." Syntax="triggerType trigger">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="trigger" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="try" ReturnType="Code" ReturnName="result" ReturnDescr="Exception Type" Descr="Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block." Syntax="args try code">
    <PreArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="args" DataType="Any"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="try" ReturnType="Code" ReturnName="result" ReturnDescr="Exception Type" Descr="Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block." Syntax="args try code">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="code" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="turretLocal" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean (or, prior to Arma 3 v1.93." Descr="Checks if a turret is local." Syntax="vehicle turretLocal turretPath">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="turretOwner" ReturnType="Scalar" ReturnName="Id" ReturnDescr="Number - owner id" Descr="Returns id of the owner of the turret. On clients always returns 0." Syntax="vehicle turretOwner turretPath">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="turretUnit" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.57." Syntax="vehicle turretUnit turretpath">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretpath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvAdd" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Index of the added item relative to the branch it was added to" Descr="Adds an item with given text to Tree View control." Syntax="tvAdd [idc, pathParent, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="pathParent" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvAdd" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - Index of the added item relative to the branch it was added to" Descr="Adds an item with given text to Tree View control." Syntax="control tvAdd [pathParent, text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="pathParent" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from Tree View with given idc." Syntax="tvClear idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvClear" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes all items from Tree View with given idc." Syntax="tvClear control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCollapse" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapses tree item pointed to by the path. IDC means id of parent Tree View." Syntax="tvCollapse [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCollapse" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapses tree item pointed to by the path. IDC means id of parent Tree View." Syntax="control tvCollapse path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCollapseAll" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapses all tree items for the given Tree View." Syntax="tvCollapseAll idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCollapseAll" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Collapses all tree items for the given Tree View." Syntax="tvCollapseAll control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns childrens count of item on given path. IDC means id of parent Tree View." Syntax="tvCount [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCount" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns childrens count of item on given path. IDC means id of parent Tree View." Syntax="ctrl tvCount path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCurSel" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Tree View Path of selected item" Descr="Returns path to currently selected item. IDC means id of parent Tree View." Syntax="tvCurSel idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvCurSel" ReturnType="Array" ReturnName="result" ReturnDescr="Array - Tree View Path of selected item" Descr="Returns path to currently selected item. IDC means id of parent Tree View." Syntax="tvCurSel control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvData" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns string data from item on given path. IDC means id of parent Tree View." Syntax="tvData [idc, [path]]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="[path]" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvData" ReturnType="String" ReturnName="result" ReturnDescr="String - (as above)." Descr="Returns string data from item on given path. IDC means id of parent Tree View." Syntax="control tvData [path]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvDelete" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change." Syntax="tvDelete [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvDelete" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change." Syntax="control tvDelete path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvExpand" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Expands tree item pointed to by the path. IDC means id of parent Tree View." Syntax="tvExpand [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvExpand" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Expands tree item pointed to by the path. IDC means id of parent Tree View." Syntax="control tvExpand path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvExpandAll" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Expands all tree items for the given Tree View." Syntax="tvExpandAll idc">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvExpandAll" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Expands all tree items for the given Tree View." Syntax="tvExpandAll control">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of picture from item pointed to by path. IDC means id of parent Tree View." Syntax="tvPicture [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvPicture" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of picture from item pointed to by path. IDC means id of parent Tree View." Syntax="ctrl tvPicture path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets text color on given Tree View Item" Syntax="tvSetColor [idc, path, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets text color on given Tree View Item" Syntax="control tvSetColor [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetCurSel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets cursor to given item on given path. IDC means id of parent Tree View." Syntax="tvSetCurSel [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetCurSel" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets cursor to given item on given path. IDC means id of parent Tree View." Syntax="control tvSetCurSel path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets string data to item on given path. IDC means id of parent Tree View." Syntax="tvSetData [idc, path, data]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetData" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets string data to item on given path. IDC means id of parent Tree View." Syntax="ctrl tvSetData [path, data]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="data" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory." Syntax="tvSetPicture [idc, path, name]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPicture" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory." Syntax="control tvSetPicture [path, name]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the colour of the picture (set via tvSetPicture) under the specified tree view path." Syntax="tvSetPictureColor [idc, path, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the colour of the picture (set via tvSetPicture) under the specified tree view path." Syntax="ctrl tvSetPictureColor [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureColorDisabled" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of left picture of a tree item defined by path when item is disabled" Syntax="control tvSetPictureColorDisabled [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureColorSelected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the left picture of a tree item defined by path when item is selected" Syntax="control tvSetPictureColorSelected [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureRight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets right picture on the tree view item defined by path" Syntax="tvSetPictureRight [idc, path, name]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureRight" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets right picture on the tree view item defined by path" Syntax="control tvSetPictureRight [path, name]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureRightColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets color of the right picture on the tree view item defined by path" Syntax="tvSetPictureRightColor [idc, path, color]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureRightColor" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets color of the right picture on the tree view item defined by path" Syntax="control tvSetPictureRightColor [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureRightColorDisabled" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the right picture of a tree item defined by path when item is disabled" Syntax="control tvSetPictureRightColorDisabled [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetPictureRightColorSelected" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the color of the right picture of a tree item defined by path when item is selected" Syntax="control tvSetPictureRightColorSelected [path, color]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="color" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets string text to item on given path. IDC means id of parent Tree View." Syntax="tvSetText [idc, path, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetText" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets string text to item on given path. IDC means id of parent Tree View." Syntax="control tvSetText [path, text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetTooltip" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the tooltip text associated with the specified tree view path." Syntax="tvSetTooltip [idc, path, text]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetTooltip" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the tooltip text associated with the specified tree view path." Syntax="ctrl tvSetTooltip [path, text]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="text" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets scalar data to item on given path. IDC means id of parent Tree View." Syntax="tvSetValue [idc, path, val]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="val" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSetValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets scalar data to item on given path. IDC means id of parent Tree View." Syntax="ctrl tvSetValue [path, val]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="val" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.Param reversed is optional." Syntax="control tvSort [path, reversed]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSort" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.Param reversed is optional." Syntax="tvSort [idc, path, reversed]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSortByValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View." Syntax="control tvSortByValue [path, reversed]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvSortByValue" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View." Syntax="tvSortByValue [idc, path, reversed]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
        <ParamInfo Name="reversed" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns shown text in the item on given path. IDC means id of parent Tree View." Syntax="tvText [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvText" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns shown text in the item on given path. IDC means id of parent Tree View." Syntax="control tvText path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="control" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvTooltip" ReturnType="String" ReturnName="result" ReturnDescr="String - Tooltip text" Descr="Gets the tooltip text associated with the specified tree view path." Syntax="tvTooltip [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvTooltip" ReturnType="String" ReturnName="result" ReturnDescr="String - Tooltip text" Descr="Gets the tooltip text associated with the specified tree view path." Syntax="ctrl tvTooltip path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - integer" Descr="Returns scalar data from item on given path. IDC means id of parent Tree View." Syntax="tvValue [idc, path]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="idc" DataType="Scalar"/>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="tvValue" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - integer" Descr="Returns scalar data from item on given path. IDC means id of parent Tree View." Syntax="ctrl tvValue path">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="ctrl" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="path" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="type" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns a string of a location's class name." Syntax="type location">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Location">
      <ParamInfos>
        <ParamInfo Name="location" DataType="Location"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="type" ReturnType="String" ReturnName="result" ReturnDescr="String - the type of the task" Descr="Returns a string of a location's class name." Syntax="type task">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Task">
      <ParamInfos>
        <ParamInfo Name="task" DataType="Task"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="typeName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the data type of an expression." Syntax="typeName anything">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Any">
      <ParamInfos>
        <ParamInfo Name="anything" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="typeOf" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the class name of a given object." Syntax="typeOf object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="uiNamespace" ReturnType="Namespace" ReturnName="result" ReturnDescr="Namespace" Descr="Returns the global namespace attached to user interface." Syntax="uiNamespace">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="uiSleep" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped." Syntax="uiSleep delay">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="delay" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unassignCurator" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unassign curator (will destroy both sides of connection)." Syntax="unassignCurator curatorObj">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="curatorObj" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unassignItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears." Syntax="unit unassignItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unassignTeam" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit assignTeam &quot;MAIN&quot;." Syntax="unassignTeam vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unassignVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unassigns individual unit from a vehicle, i.e removes assignedVehicleRole of the unit." Syntax="unassignVehicle unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="underwater" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if submerged" Descr="Return whether object is fully underwater. From Arma 3 v1.66, this also works for units." Syntax="underwater object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="uniform" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of uniform." Syntax="uniform unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="uniformContainer" ReturnType="Object" ReturnName="result" ReturnDescr="Object - cargo container or &lt;NULL-object&gt;" Descr="Returns a cargo container of a unit's uniform." Syntax="uniformContainer unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="uniformItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all items (of any kind, even weapons) from uniform." Syntax="uniformItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="uniformMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all magazines from uniform of the given unit." Syntax="uniformMagazines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitAddons" ReturnType="Array" ReturnName="result" ReturnDescr="Array - addon names" Descr="Returns list with addons the unit belongs to." Syntax="unitAddons className">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="className" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitAimPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - position in format PositionAGL" Descr="Returns the position on the unit other units can aim at." Syntax="unitAimPosition unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitAimPositionVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - position in format PositionAGL" Descr="Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition." Syntax="unitAimPositionVisual unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitBackpack" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Returns unit's backpack" Syntax="unitBackpack unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitIsUAV" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true when UAV" Descr="Returns true if the unit type is UAV - coresponding to transport param &quot;isUAV&quot;" Syntax="unitIsUAV unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitPos" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the unit position rules.The return value is always &quot;Auto&quot; unless the unit has gotten a setUnitPos command." Syntax="unitPos unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitReady" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished." Syntax="unitReady unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitRecoilCoefficient" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns recoil coefficient of a soldier." Syntax="unitRecoilCoefficient soldier">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitTurret" ReturnType="Array" ReturnName="result" ReturnDescr="Array - turret path" Descr="Returns the turret path the given vehicle's gunner is in. [-1] is returned if gunner is driver." Syntax="vehicle unitTurret gunner">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="gunner" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="units" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects" Descr="Returns an array with all the units in the group or group of the unit.For a destroyed object an empty array is returned." Syntax="units groupOrUnit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupOrUnit" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="units" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects" Descr="Returns an array with all the units in the group or group of the unit.For a destroyed object an empty array is returned." Syntax="units groupOrUnit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="groupOrUnit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitsBelowHeight" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects" Descr="Returns units in group/array below given height Above The Land (ATL)." Syntax="units unitsBelowHeight height">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="units" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unitsBelowHeight" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Objects" Descr="Returns units in group/array below given height Above The Land (ATL)." Syntax="group unitsBelowHeight height">
    <PreArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="height" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unlinkItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails." Syntax="unit unlinkItem item">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="item" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unlockAchievement" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true if achievement was unlocked" Descr="Unlock the given achievement." Syntax="unlockAchievement name">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="unregisterTask" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - true on success" Descr="Unregister a task type." Syntax="teamMember unregisterTask name">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="teamMember" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="name" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="updateDrawIcon" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Updates the icon to be shown in 2D editor for the specified editor,object." Syntax="map updateDrawIcon [object,string identifier,color,offset,width,height,maintain size?,angle,shadow]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
        <ParamInfo Name="stringidentifier" DataType="Any"/>
        <ParamInfo Name="color" DataType="Any"/>
        <ParamInfo Name="offset" DataType="Any"/>
        <ParamInfo Name="width" DataType="Any"/>
        <ParamInfo Name="height" DataType="Any"/>
        <ParamInfo Name="maintainsize" DataType="Any"/>
        <ParamInfo Name="angle" DataType="Any"/>
        <ParamInfo Name="shadow" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="updateMenuItem" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional." Syntax="map updateMenuItem [menu item index,text,command]">
    <PreArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="menuitemindex" DataType="Any"/>
        <ParamInfo Name="text" DataType="String"/>
        <ParamInfo Name="command" DataType="Any"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="updateObjectTree" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Update the editor object tree." Syntax="updateObjectTree map">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Control">
      <ParamInfos>
        <ParamInfo Name="map" DataType="Control"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="useAIOperMapObstructionTest" ReturnType="Nothing" ReturnName="" ReturnDescr="Nothing" Descr="Toggle secondary obstruction test on road paths." Syntax="useAIOperMapObstructionTest state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="useAISteeringComponent" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Enable the new AI driving, used to test the old and new AI driving." Syntax="useAISteeringComponent state">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="state" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="useAudioTimeForMoves" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization." Syntax="soldier useAudioTimeForMoves toggle">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="soldier" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Boolean">
      <ParamInfos>
        <ParamInfo Name="toggle" DataType="Boolean"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="userInputDisabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns true if user input is disabled" Syntax="userInputDisabled">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="vectorAdd" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Adds two 3D vectors." Syntax="vector1 vectorAdd vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorCos" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Cosine of angle between two 3D vectors." Syntax="vector1 vectorCos vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorCrossProduct" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  vector [x, y, z]" Descr="Cross product of two 3D vectors." Syntax="vector1 vectorCrossProduct vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorDiff" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Subtracts one 3D vector from another." Syntax="vector1 vectorDiff vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorDir" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Vector3D" Descr="Return object's normalized direction vector in world space ([x,y,z])." Syntax="vectorDir object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorDirVisual" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Vector3D" Descr="Return object's normalized direction vector in world space ([x,y,z]) in render time scope." Syntax="vectorDirVisual objectName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorDistance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Distance between two 3D vectors." Syntax="vector1 vectorDistance vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorDistanceSqr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Squared distance between two 3D vectors." Syntax="vector1 vectorDistanceSqr vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorDotProduct" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Dot product of two 3D vectors." Syntax="vector1 vectorDotProduct vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorFromTo" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Unit vector, equal to direction from vector1 to vector2. In other words this command produces vectorNormalized between given 2 points." Syntax="vector1 vectorFromTo vector2">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector1" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector2" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorLinearConversion" ReturnType="Array" ReturnName="result" ReturnDescr="Array - interpolated vector" Descr="Converts given vector from given &quot;from&quot; range to wanted &quot;to&quot; range." Syntax="vectorLinearConversion [rangeFrom, rangeTo, rangeValue, vectorFrom, vectorTo, clip]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="rangeFrom" DataType="Scalar"/>
        <ParamInfo Name="rangeTo" DataType="Scalar"/>
        <ParamInfo Name="rangeValue" DataType="Scalar"/>
        <ParamInfo Name="vectorFrom" DataType="Array"/>
        <ParamInfo Name="vectorTo" DataType="Array"/>
        <ParamInfo Name="clip" DataType="Boolean" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorMagnitude" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Magnitude of a 3D vector." Syntax="vectorMagnitude vector">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorMagnitudeSqr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Squared magnitude of a 3D vector." Syntax="vectorMagnitudeSqr vector">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorModelToWorld" ReturnType="Array" ReturnName="result" ReturnDescr="Array - vector direction in world space in format [x,y,z]" Descr="Converts vector direction from model to world space." Syntax="object vectorModelToWorld modelDir">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="modelDir" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorModelToWorldVisual" ReturnType="Array" ReturnName="result" ReturnDescr="Array - vector direction in world space in format [x,y,z]" Descr="Converts vector from model to world space in render time scope." Syntax="object vectorModelToWorldVisual modelDir">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="modelDir" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorMultiply" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Multiplies 3D vector by a scalar." Syntax="vector vectorMultiply scalar">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="scalar" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorNormalized" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns normalized vector (unit vector, vectorMagnitude = 1) of given vector. If given vector is 0 result is a 0 vector as well." Syntax="vectorNormalized vector">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vector" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorUp" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - up vector in format Vector3D" Descr="Return object's up vector in world Position coordinates ( [x, y, z] )." Syntax="vectorUp object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorUpVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format Position" Descr="Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope." Syntax="vectorUpVisual objectName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="objectName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorWorldToModel" ReturnType="Array" ReturnName="result" ReturnDescr="Array - vector direction in model space in format [x,y,z]" Descr="Converts vector direction from world to model space." Syntax="object vectorWorldToModel worldDir">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="worldDir" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vectorWorldToModelVisual" ReturnType="Array" ReturnName="result" ReturnDescr="Array - vector direction in model space in format [x,y,z]" Descr="Converts vector direction from world to model space in render time scope." Syntax="object vectorWorldToModelVisual worldDir">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="worldDir" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicle" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Vehicle in which given unit is mounted. If none, unit is returned." Syntax="vehicle unitName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unitName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleCargoEnabled" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - returns true if the vehicle has enabled transporting other vehicles, a" Descr="Check if the vehicle has enabled transporting other vehicles or not." Syntax="vehicleCargoEnabled vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleChat" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed." Syntax="vehicleName vehicleChat chatText">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="chatText" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleMoveInfo" ReturnType="Array" ReturnName="result" ReturnDescr="Array in format [moveInfo, turnInfo], where:moveInfo: String - state of vehicle" Descr="Returns current vehicle move/turn info (a getter for sendSimpleCommand) in format [moveInfo, turnInfo]." Syntax="vehicleMoveInfo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleRadio" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol." Syntax="unit vehicleRadio radioName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="radioName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleReceiveRemoteTargets" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Gets whether the vehicle can acquire targets via datalink from the Side center." Syntax="vehicleReceiveRemoteTargets vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleReportOwnPosition" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Gets whether the vehicle shares its own position via datalink with the Side center." Syntax="vehicleReportOwnPosition vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleReportRemoteTargets" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Gets whether the vehicle shares acquired targets via datalink with the Side center." Syntax="vehicleReportRemoteTargets vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicleVarName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns the name of the variable which contains a primary editor reference to this object." Syntax="vehicleVarName object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vehicles" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns a list of all vehicles." Syntax="vehicles">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="velocity" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Return velocity (speed vector) of Unit as an array with format [x, y, z].  Units are in metres per second." Syntax="velocity vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="velocityModelSpace" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space." Syntax="velocityModelSpace vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="verifySignature" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server." Syntax=" verifySignature filename">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="filename" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vest" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Returns name of vest." Syntax="vest unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vestContainer" ReturnType="Object" ReturnName="result" ReturnDescr="Object - cargo container or &lt;NULL-object&gt;" Descr="Returns a cargo container of a unit's vest." Syntax="vestContainer unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vestItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all items (of any kind, even weapons) from vest." Syntax="vestItems unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="vestMagazines" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Get array with all magazines from vest of the given unit." Syntax="vestMagazines unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="viewDistance" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the rendering distance." Syntax="viewDistance">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="visibleCompass" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the player has compass opened and visible" Syntax="visibleCompass">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="visibleGPS" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the player has GPS receiver opened and visible" Syntax="visibleGPS">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="visibleMap" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Return true if the main map is shown (active)." Syntax="visibleMap">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="visiblePosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGLS" Descr="Returns an object's rendered position (z value above surface underneath) in render time scope." Syntax="visiblePosition object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="visiblePositionASL" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionASL" Descr="Returns an object's rendered 3D position ASL (z value above sea level) in render time scope." Syntax="visiblePositionASL object">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="visibleScoretable" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks whether the score table is visible." Syntax="visibleScoretable">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="visibleWatch" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the player has watch opened and visible" Syntax="visibleWatch">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="waitUntil" ReturnType="Any" ReturnName="result" ReturnDescr="Anything - the value the condition evaluates to when the wait is over (normally " Descr="Suspend execution of function or SQF based script until condition is satisfied." Syntax="waitUntil condition">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Code">
      <ParamInfos>
        <ParamInfo Name="condition" DataType="Code"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waves" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Return waves value." Syntax="waves">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="waypointAttachObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attaches a static object via it's numeric ID to the given waypoint.The alternative syntax is (at least) available since Arma 2." Syntax="waypoint waypointAttachObject objectID">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Scalar">
      <ParamInfos>
        <ParamInfo Name="objectID" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointAttachObject" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attaches a static object via it's numeric ID to the given waypoint.The alternative syntax is (at least) available since Arma 2." Syntax="waypoint waypointAttachObject object">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointAttachVehicle" ReturnType="Nothing" ReturnName="result" ReturnDescr="Nothing" Descr="Attaches a Unit to the given Waypoint." Syntax="waypoint waypointAttachVehicle vehicleName">
    <PreArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointAttachedObject" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Gets the object attached to the waypoint." Syntax="waypointAttachedObject waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointAttachedVehicle" ReturnType="Object" ReturnName="result" ReturnDescr="Object" Descr="Gets the vehicle attached to the waypoint." Syntax="waypointAttachedVehicle waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointBehaviour" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint behavior." Syntax="waypointBehaviour waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointCombatMode" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint combat mode." Syntax="waypointCombatMode waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointCompletionRadius" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Gets the radius around the waypoint where the waypoint is completed." Syntax="waypointCompletionRadius waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointDescription" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint description." Syntax="waypointDescription waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointForceBehaviour" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean - is forced" Descr="Returns true if the waypoint behavior is forced." Syntax="waypointForceBehaviour waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointFormation" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint formation." Syntax="waypointFormation waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointHousePosition" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - buildingPos index" Descr="Gets the house position assigned to the waypoint." Syntax="waypointHousePosition waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointLoiterAltitude" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Gets the waypoint loiter altitude. Waypoint uses format Waypoint." Syntax="waypointLoiterAltitude waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointLoiterRadius" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Gets the waypoint loiter radius. Waypoint uses format Waypoint." Syntax="waypointLoiterRadius Waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="Waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointLoiterType" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint loiter type. Waypoint uses format Waypoint." Syntax="waypointLoiterType waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint name." Syntax="waypointName waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointPosition" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - format PositionAGL" Descr="Get Waypoint's  Position. Note: This function is identical to getWPPos." Syntax="waypointPosition waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointScript" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint script." Syntax="waypointScript waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointShow" ReturnType="String" ReturnName="result" ReturnDescr="String - see description" Descr="Gets the waypoint show/hide status." Syntax="waypointShow waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointSpeed" ReturnType="String" ReturnName="result" ReturnDescr="String - see description" Descr="Gets the waypoint speed." Syntax="waypointSpeed waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointStatements" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Gets the waypoint statements." Syntax="waypointStatements waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointTimeout" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Gets the waypoint timeout values." Syntax="waypointTimeout waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointTimeoutCurrent" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Gets the current waypoint timeout or -1 if countdown is not in progress." Syntax="waypointTimeoutCurrent group">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="group" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointType" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Gets the waypoint type." Syntax="waypointType waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointVisible" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Returns the visibility of the waypoint.Returns 0 (Number) for a non valid waypoint." Syntax="waypointVisible waypoint">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="waypoint" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypoints" ReturnType="Array" ReturnName="Waypoint" ReturnDescr="Array of waypoints each in format Waypoint" Descr="Returns an array of waypoints for the specified unit/group." Syntax="waypoints groupName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Group">
      <ParamInfos>
        <ParamInfo Name="groupName" DataType="Group"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="waypointsEnabledUAV" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="Checks if the UAV has waypoints enabled." Syntax="waypointsEnabledUAV uav">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="uav" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponAccessories" ReturnType="Array" ReturnName="result" ReturnDescr="Array - [silencer, laserpointer/flashlight, optics, bipod]" Descr="Get array with all items linked to a given weapon." Syntax="unit weaponAccessories weapon">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weapon" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponAccessoriesCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  [silencer, laserpointer/flashlight, optics, bipod]" Descr="Returns array with all items assigned to the given weapon in given cargo container." Syntax="container weaponAccessoriesCargo [weaponId, creatorId]">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="container" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="weaponId" DataType="Scalar"/>
        <ParamInfo Name="creatorId" DataType="Scalar"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array of String - list of present classes" Descr="Get array with weapons from ammo box (or any general weapon holder container)." Syntax="weaponCargo box">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="box" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponDirection" ReturnType="Array" ReturnName="result" ReturnDescr="Array - format Vector3D" Descr="Returns the direction that the vehicle weapon is aiming in.For addons the weapon name must be an entry in CfgWeapons." Syntax="vehicleName weaponDirection weaponName">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="String">
      <ParamInfos>
        <ParamInfo Name="weaponName" DataType="String"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponInertia" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns current rate of how much the weapon view is distorted because of quick aiming" Syntax="weaponInertia unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponLowered" ReturnType="Boolean" ReturnName="result" ReturnDescr="Boolean" Descr="True if given soldier's weapon is lowered." Syntax="weaponLowered unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponState" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [weapon, muzzle, firemode, magazine, ammoCount], where:weapon" Descr="Returns the current weapon state as an array of strings in the following format [WeaponName, MuzzleName, ModeName, MagazineName, AmmoCount] (AmmoCount" Syntax="weaponState unit">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="unit" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponState" ReturnType="Array" ReturnName="result" ReturnDescr="Array - in format [weapon, muzzle, firemode, magazine, ammoCount], where:weapon" Descr="Returns the current weapon state as an array of strings in the following format [WeaponName, MuzzleName, ModeName, MagazineName, AmmoCount] (AmmoCount" Syntax="weaponState [vehicle, turretPath, weapon]">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
        <ParamInfo Name="turretPath" DataType="Array"/>
        <ParamInfo Name="weapon" DataType="String" IsOptional="True"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weapons" ReturnType="Array" ReturnName="result" ReturnDescr="Array of weapon names." Descr="Returns array of names of all Unit's weapons." Syntax="weapons vehicleName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicleName" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponsItems" ReturnType="Array" ReturnName="result" ReturnDescr="Array - array containing arrays of weapon items info in format [weapon:String, m" Descr="Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.Since Arma 3 v1.21." Syntax="weaponsItems vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponsItemsCargo" ReturnType="Array" ReturnName="result" ReturnDescr="Array - see weaponsItems" Descr="Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format." Syntax="weaponsItemsCargo vehicle">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weaponsTurret" ReturnType="Array" ReturnName="result" ReturnDescr="Array of Strings" Descr="Returns all weapons of given turret. Use turret path [-1] for driver's turret." Syntax="vehicle weaponsTurret turretPath">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="vehicle" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="turretPath" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="weightRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array -  [fuselage weight, crew weight, fuel weight, custom weight, weapons weig" Descr="Returns weight of RTD helicopter." Syntax="weightRTD helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="wind" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns the current wind vector (in m/s) as array [x, z, y]." Syntax="wind">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="windDir" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number - azimuth" Descr="Returns the current wind azimuth." Syntax="windDir">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="windRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns wind strength and direction.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled." Syntax="windRTD">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="windStr" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns the current wind strength." Syntax="windStr">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="wingsForcesRTD" ReturnType="Array" ReturnName="result" ReturnDescr="Array" Descr="Returns force produced by wings." Syntax="wingsForcesRTD RTD_helicopter">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="RTD_helicopter" DataType="Object"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="worldName" ReturnType="String" ReturnName="result" ReturnDescr="String" Descr="Return the name of the currently loaded world." Syntax="worldName">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="worldSize" ReturnType="Scalar" ReturnName="result" ReturnDescr="Number" Descr="Returns config size of the current world." Syntax="worldSize">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Nothing"/>
  </Command>
  <Command Name="worldToModel" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - position relative to model, format PositionRelative" Descr="Converts position from world space to object model space." Syntax="model worldToModel position">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="model" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="worldToModelVisual" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - PositionRelative" Descr="Converts position from world space to object model space in render time scope." Syntax="object worldToModelVisual worldPosition">
    <PreArg DataType="Object">
      <ParamInfos>
        <ParamInfo Name="object" DataType="Object"/>
      </ParamInfos>
    </PreArg>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="worldPosition" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
  <Command Name="worldToScreen" ReturnType="Array" ReturnName="Position" ReturnDescr="Array - Screen position [x,y] (see SafeZone for more info) - [] if not on-screen" Descr="Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned." Syntax="worldToScreen position">
    <PreArg DataType="Nothing"/>
    <PostArg DataType="Array">
      <ParamInfos>
        <ParamInfo Name="position" DataType="Array"/>
      </ParamInfos>
    </PostArg>
  </Command>
</ScriptCommands>
